(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 4.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    263757,       5985]*)
(*NotebookOutlinePosition[    264408,       6008]*)
(*  CellTagsIndexPosition[    264364,       6004]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[
    \(Clear[Bp, wf2, Ap, Ap2, Ap0, Bp1, w1]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(rp = M + Sqrt[M^2 - a^2]\), "\[IndentingNewLine]", 
    \(efluxrhor = 
      FullSimplify[efluxr //. {x \[Rule] rp}]\), "\[IndentingNewLine]", 
    \(myreplace = {M + Sqrt[M^2 - a^2] \[Rule] rpp, 
          D[A0[x, y], x] \[Rule] \(-w\)*D[Ap[x, y], x]} //. {x \[Rule] 
            rpp}\), "\[IndentingNewLine]", 
    \(FullSimplify[efluxrhor //. myreplace]\)}], "Input"],

Cell[BoxData[
    \(M + \@\(\(-a\^2\) + M\^2\)\)], "Output"],

Cell[BoxData[
    FractionBox[
      RowBox[{\(wf2[M + \@\(\(-a\^2\) + M\^2\), y]\), 
        " ", \((\(-a\) + 
            2\ M\ \((M + \@\(\(-a\^2\) + M\^2\))\)\ wf2[
                M + \@\(\(-a\^2\) + M\^2\), y])\), " ", 
        SuperscriptBox[
          RowBox[{
            SuperscriptBox["Ap", 
              TagBox[\((0, 1)\),
                Derivative],
              MultilineFunction->None], "[", \(M + \@\(\(-a\^2\) + M\^2\), 
            y\), "]"}], 
          "2"]}], \(\((a\^2 - 2\ M\ \((M + \@\(\(-a\^2\) + M\^2\))\) - 
              a\^2\ Cos[y]\^2)\)\^2\)]], "Output"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{\(M + \@\(\(-a\^2\) + M\^2\) \[Rule] rpp\), ",", 
        RowBox[{
          RowBox[{
            SuperscriptBox["A0", 
              TagBox[\((1, 0)\),
                Derivative],
              MultilineFunction->None], "[", \(rpp, y\), "]"}], "\[Rule]", 
          RowBox[{\(-w\), " ", 
            RowBox[{
              SuperscriptBox["Ap", 
                TagBox[\((1, 0)\),
                  Derivative],
                MultilineFunction->None], "[", \(rpp, y\), "]"}]}]}]}], 
      "}"}]], "Output"],

Cell[BoxData[
    RowBox[{"-", 
      FractionBox[
        RowBox[{
        "4", " ", \(wf2[rpp, y]\), " ", \((a - 2\ M\ rpp\ wf2[rpp, y])\), " ",
           
          SuperscriptBox[
            RowBox[{
              SuperscriptBox["Ap", 
                TagBox[\((0, 1)\),
                  Derivative],
                MultilineFunction->None], "[", \(rpp, y\), "]"}], 
            "2"]}], \(\((a\^2 - 4\ M\ rpp - 
                a\^2\ Cos[2\ y])\)\^2\)]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(rp\)], "Input"],

Cell[BoxData[
    \(M + \@\(\(-a\^2\) + M\^2\)\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(rpTemud = 
        Temud //. {Ap[x, y] \[Rule] Ap[r, h], 
            D[Ap[x, y], x] \[Rule] \((1/M*D[Ap[r, h], r])\), 
            D[Ap[x, y], y] \[Rule] D[Ap[r, h], h], Bp[x, y] \[Rule] Bp[r, h], 
            D[Bp[x, y], x] \[Rule] \((1/M*D[Bp[r, h], r])\), 
            D[Bp[x, y], y] \[Rule] D[Bp[r, h], h], 
            wf2[x, y] \[Rule] wf2[r, h], 
            D[wf2[x, y], x] \[Rule] \((1/M*D[wf2[r, h], r])\), 
            D[wf2[x, y], y] \[Rule] D[wf2[r, h], h]};\)\)], "Input"],

Cell[BoxData[
    \(\(rpTemud = rpTemud //. {x \[Rule] rr*M};\)\)], "Input"],

Cell[BoxData[
    \(\(rpTemud = 
        rpTemud //. {r \[Rule] x, h \[Rule] y, rr \[Rule] x};\)\)], "Input"],

Cell[BoxData[
    \(\(rpTemud = rpTemud //. {a \[Rule] aa*M};\)\)], "Input"],

Cell[BoxData[
    \(\(rpTemud = rpTemud //. {aa \[Rule] a};\)\)], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[{
    \(Bp[x_, y_] := C*a/M^3*Bp1[x, y]\), "\[IndentingNewLine]", 
    \(wf2[x_, y_] := a/M*w1[x, y]\), "\[IndentingNewLine]", 
    \(Ap[x_, y_] := Ap0[x, y] + a^2*Ap2[x, y]\)}], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(Ap0[x_, y_] := \(-C\)*Cos[y]\)], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(\(s2Temud = Normal[Series[rpTemud, {a, 0, 2}]];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullSimplify[
      s2Temud[\([1, 2]\)], {M > 0, x \[GreaterEqual] 1}]\)], "Input"],

Cell[BoxData[
    \(\(a\^2\ C\^2\ Bp1[x, y]\ Sin[y]\^2\ \((2\ x\^2\ Bp1[x, y] - \((2 + x)\)\
\ w1[x, y])\)\)\/\(M\^4\ x\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullSimplify[
      s2Temud[\([2, 1]\)], {M > 0, x \[GreaterEqual] 1}]\)], "Input"],

Cell[BoxData[
    \(\(a\^2\ C\^2\ Sin[y]\^2\ w1[x, y]\ \((\(-1\) + \((\(-2\) + x)\)\ x\^3\ \
Bp1[x, y] + 2\ x\ w1[x, y])\)\)\/\(M\^4\ x\^4\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullSimplify[s2Temud[\([2, 1]\)] //. {x \[Rule] 1}, {M > 0}]\)], "Input"],

Cell[BoxData[
    \(\(a\^2\ C\^2\ Sin[y]\^2\ w1[1, y]\ \((\(-1\) - Bp1[1, y] + 2\ w1[1, y])\
\)\)\/M\^4\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(gdet\)], "Input"],

Cell[BoxData[
    \(1\/2\ \((a\^2 + 2\ x\^2 + a\^2\ Cos[2\ y])\)\ Sin[y]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(rpgdet = 
      FullSimplify[\((gdet //. {x \[Rule] r*rp, 
                a \[Rule] aa*M})\) //. {r \[Rule] x, aa \[Rule] a}, {M > 
            0}]\), "\[IndentingNewLine]", 
    \(rpgcon = 
      FullSimplify[\((gcon //. {x \[Rule] r*rp, 
                a \[Rule] aa*M})\) //. {r \[Rule] x, aa \[Rule] a}, {M > 
            0}]\), "\[IndentingNewLine]", 
    \(rpgcov = 
      FullSimplify[\((gcov //. {x \[Rule] r*rp, 
                a \[Rule] aa*M})\) //. {r \[Rule] x, aa \[Rule] a}, {M > 
            0}]\), "\[IndentingNewLine]", 
    \(\(rpConnection = \((Connection //. {x \[Rule] r*rp, 
                a \[Rule] aa*M})\) //. {r \[Rule] x, 
            aa \[Rule] a};\)\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \(M\^2\ \((\((2 - a\^2 + 2\ \@\(1 - a\^2\))\)\ x\^2 + 
          a\^2\ Cos[y]\^2)\)\ Sin[y]\)], "Output"],

Cell[BoxData[
    \({{\(x\ \((\(-2\) + \((\(-2\) + a\^2)\)\ x - 2\ \@\(1 - a\^2\)\ \((1 + \
x)\))\) - a\^2\ Cos[y]\^2\)\/\(\((2 - a\^2 + 2\ \@\(1 - a\^2\))\)\ x\^2 + \
a\^2\ Cos[y]\^2\), \(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - \
Cos[y]\^2)\)\), 0, 
        0}, {\(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - \
Cos[y]\^2)\)\), \(\((\(-1\) + x)\)\ \((2\ \((1 + \@\(1 - a\^2\))\)\ x - a\^2\ \
\((1 + x)\))\)\)\/\(\((2 - a\^2 + 2\ \@\(1 - a\^2\))\)\ x\^2 + a\^2\ \
Cos[y]\^2\), 0, 
        a\/\(M\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + a\^2\ Cos[y]\^2)\)\)}, \
{0, 0, 1\/\(M\^2\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + a\^2\ \
Cos[y]\^2)\)\), 0}, {0, 
        a\/\(M\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + a\^2\ Cos[y]\^2)\)\), 
        0, Csc[y]\^2\/\(M\^2\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + a\^2\ \
Cos[y]\^2)\)\)}}\)], "Output"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(rpgcov\)\" is similar \
to existing symbol \"\!\(rpgcon\)\"."\)], "Message"],

Cell[BoxData[
    \({{\(-1\) + \(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - \
Cos[y]\^2)\)\), \(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - \
Cos[y]\^2)\)\), 
        0, \(-\(\(2\ a\ \((1 + \@\(1 - a\^2\))\)\ M\ x\ Sin[y]\^2\)\/\(\((2 - 
                      a\^2 + 2\ \@\(1 - a\^2\))\)\ x\^2 + 
                a\^2\ Cos[y]\^2\)\)\)}, {\(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 \
- a\^2\)\ \((x\^2 - Cos[y]\^2)\)\), 
        1 + \(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - \
Cos[y]\^2)\)\), 
        0, \(-a\)\ M\ \((1 + \(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - a\^2\)\ \
\((x\^2 - Cos[y]\^2)\)\))\)\ Sin[y]\^2}, {0, 0, 
        M\^2\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + a\^2\ Cos[y]\^2)\), 
        0}, {\(-\(\(2\ a\ \((1 + \@\(1 - a\^2\))\)\ M\ x\ Sin[y]\^2\)\/\(\((2 \
- a\^2 + 2\ \@\(1 - a\^2\))\)\ x\^2 + 
                a\^2\ Cos[y]\^2\)\)\), \(-a\)\ M\ \((1 + \(2\ x\)\/\(x\^2 + \
Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - Cos[y]\^2)\)\))\)\ Sin[y]\^2, 0, 
        M\^2\ Sin[y]\^2\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + 
              a\^2\ Cos[y]\^2 + 
              a\^2\ \((1 + \(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - a\^2\)\ \
\((x\^2 - Cos[y]\^2)\)\))\)\ Sin[y]\^2)\)}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(MatrixForm[rpgcon]\), "\[IndentingNewLine]", 
    \(MatrixForm[rpgcov]\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(\(x\ \((\(-2\) + \((\(-2\) + a\^2)\)\ x - 
                          2\ \@\(1 - a\^2\)\ \((1 + x)\))\) - 
                    a\^2\ Cos[y]\^2\)\/\(\((2 - a\^2 + 
                          2\ \@\(1 - a\^2\))\)\ x\^2 + 
                    a\^2\ Cos[y]\^2\)\), \(\(2\ x\)\/\(x\^2 + 
                    Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - Cos[y]\^2)\)\)\), 
              "0", "0"},
            {\(\(2\ x\)\/\(x\^2 + 
                    Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - 
                          Cos[y]\^2)\)\)\), \(\(\((\(-1\) + 
                        x)\)\ \((2\ \((1 + \@\(1 - a\^2\))\)\ x - 
                        a\^2\ \((1 + x)\))\)\)\/\(\((2 - a\^2 + 
                          2\ \@\(1 - a\^2\))\)\ x\^2 + a\^2\ Cos[y]\^2\)\), 
              "0", \(a\/\(M\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + 
                        a\^2\ Cos[y]\^2)\)\)\)},
            {"0", 
              "0", \(1\/\(M\^2\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + 
                        a\^2\ Cos[y]\^2)\)\)\), "0"},
            {
              "0", \(a\/\(M\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + 
                        a\^2\ Cos[y]\^2)\)\)\), 
              "0", \(Csc[y]\^2\/\(M\^2\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 \
+ a\^2\ Cos[y]\^2)\)\)\)}
            }], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(\(-1\) + \(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - a\^2\)\ \
\((x\^2 - Cos[y]\^2)\)\)\), \(\(2\ x\)\/\(x\^2 + 
                    Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - Cos[y]\^2)\)\)\), 
              "0", \(-\(\(2\ a\ \((1 + \@\(1 - a\^2\))\)\ M\ x\ Sin[y]\^2\)\/\
\(\((2 - a\^2 + 2\ \@\(1 - a\^2\))\)\ x\^2 + a\^2\ Cos[y]\^2\)\)\)},
            {\(\(2\ x\)\/\(x\^2 + 
                    Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - 
                          Cos[y]\^2)\)\)\), \(1 + \(2\ x\)\/\(x\^2 + \
Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - Cos[y]\^2)\)\)\), 
              "0", \(\(-a\)\ M\ \((1 + \(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - \
a\^2\)\ \((x\^2 - Cos[y]\^2)\)\))\)\ Sin[y]\^2\)},
            {"0", 
              "0", \(M\^2\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + 
                    a\^2\ Cos[y]\^2)\)\), "0"},
            {\(-\(\(2\ a\ \((1 + \@\(1 - a\^2\))\)\ M\ x\ Sin[y]\^2\)\/\(\((2 \
- a\^2 + 2\ \@\(1 - a\^2\))\)\ x\^2 + 
                      a\^2\ Cos[y]\^2\)\)\), \(\(-a\)\ M\ \((1 + \(2\ \
x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 - Cos[y]\^2)\)\))\)\ Sin[y]\
\^2\), "0", \(M\^2\ Sin[y]\^2\ \((\((1 + \@\(1 - a\^2\))\)\^2\ x\^2 + 
                    a\^2\ Cos[y]\^2 + 
                    a\^2\ \((1 + \(2\ x\)\/\(x\^2 + Cos[y]\^2 + \@\(1 - \
a\^2\)\ \((x\^2 - Cos[y]\^2)\)\))\)\ Sin[y]\^2)\)\)}
            }], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(rpp = 
      FullSimplify[\((rp //. {a \[Rule] aa*M})\) //. {aa \[Rule] a}, {M > 
            0}]\)], "Input"],

Cell[BoxData[
    \(\((1 + \@\(1 - a\^2\))\)\ M\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(rpMyD[f_, i_] := 
      If[i \[Equal] 1, D[f, t], 
        If[i \[Equal] 2, 1/rpp*D[f, x], 
          If[i \[Equal] 3, D[f, y], 
            If[i \[Equal] 4, D[f, z]]]]]\), "\[IndentingNewLine]", 
    \(\(rpgabc = 
        Table[rpMyD[rpgcov[\([i, j]\)], k], {i, 1, 4}, {j, 1, 4}, {k, 1, 
            4}];\)\), "\n", 
    \(\(rpConnddd = 
        1/2*Table[
            rpgabc[\([i, j, k]\)] + rpgabc[\([i, k, j]\)] - 
              rpgabc[\([j, k, i]\)], {i, 1, 4}, {j, 1, 4}, {k, 1, 
              4}];\)\), "\n", 
    \(\(rp2Connection = 
        Table[Sum[
            rpgcon[\([i, l]\)]*rpConnddd[\([l, j, k]\)], {l, 1, 4}], {i, 1, 
            4}, {j, 1, 4}, {k, 1, 4}];\)\), "\n", 
    \(\)}], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(rp2Connection\)\" is \
similar to existing symbol \"\!\(rpConnection\)\"."\)], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(FullSimplify[
      rpConnection[\([1, 1, 1]\)], {M > 0}]\), "\[IndentingNewLine]", 
    \(FullSimplify[rp2Connection[\([1, 1, 1]\)], {M > 0}]\)}], "Input"],

Cell[BoxData[
    \(\(2\ \((1 + \@\(1 - a\^2\))\)\ x\ \((\((2 - a\^2 + 2\ \@\(1 - a\^2\))\)\
\ x\^2 - a\^2\ Cos[y]\^2)\)\)\/\(M\ \((\((2 - a\^2 + 2\ \@\(1 - a\^2\))\)\ \
x\^2 + a\^2\ Cos[y]\^2)\)\^3\)\)], "Output"],

Cell[BoxData[
    \(\(2\ x\ \((x\^2 - Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\^2 + Cos[y]\^2)\))\)\
\)\/\(\((1 + \@\(1 - a\^2\))\)\ M\ \((x\^2 + Cos[y]\^2 + \@\(1 - a\^2\)\ \((x\
\^2 - Cos[y]\^2)\))\)\^3\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullSimplify[
      rpConnection[\([1, 1, 1]\)] - 
        rp2Connection[\([1, 1, 1]\)], {M > 0}]\)], "Input"],

Cell[BoxData[
    \(0\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(FullSimplify[\((rpConnection //. {x \[Rule] 1, 
              a \[Rule] 1})\) - \((Connection //. {a \[Rule] M, 
              x \[Rule] rp})\)]\), "\[IndentingNewLine]", 
    \(FullSimplify[\((rpgdet //. {x \[Rule] 1, 
              a \[Rule] 1})\) - \((gdet //. {a \[Rule] M, 
              x \[Rule] rp})\)]\)}], "Input"],

Cell[BoxData[
    \({{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 
          0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 
          0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 
          0}, {0, 0, 0, 0}, {0, 0, 0, 0}}}\)], "Output"],

Cell[BoxData[
    \(0\)], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(\(eqnsfull = 
        Table[Sum[rpMyD[rpgdet*rpTemud[\([ii, mu]\)], ii], {ii, 1, 4}] - 
            rpgdet*Sum[
                rpTemud[\([kk, ll]\)]*rpConnection[\([ll, mu, kk]\)], {kk, 1, 
                  4}, {ll, 1, 4}], {mu, 1, 4}];\)\)], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(\(s2eqns = 
        Simplify[
          Normal[Series[eqnsfull, {a, 0, 2}]], {0 \[LessEqual] y \[LessEqual] 
              Pi, x \[GreaterEqual] 0, \(-1\) \[LessEqual] a \[LessEqual] 1, 
            M > 0}];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(s2eqns11 = 
      Collect[s2eqns[\([1]\)], a, FullSimplify]\), "\[IndentingNewLine]", 
    \(s2eqns12 = 
      Collect[s2eqns[\([2]\)], a, FullSimplify]\), "\[IndentingNewLine]", 
    \(s2eqns13 = 
      Collect[s2eqns[\([3]\)], a, FullSimplify]\), "\[IndentingNewLine]", 
    \(s2eqns14 = Collect[s2eqns[\([4]\)], a, FullSimplify]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(1\/\(4\ M\^3\ x\^4\)\), 
      RowBox[{"(", 
        RowBox[{\(a\^2\), " ", \(C\^2\), " ", \(Sin[y]\^3\), " ", 
          RowBox[{"(", 
            RowBox[{\(\(-4\)\ x\^5\ Bp1[x, y]\^2\), "+", 
              RowBox[{\(w1[x, y]\), " ", 
                RowBox[{"(", 
                  RowBox[{
                  "3", "+", \(16\ x\), 
                    "-", \(4\ x\ \((1 + 4\ x)\)\ w1[x, y]\), "+", 
                    RowBox[{"8", " ", \((\(-2\) + x)\), " ", \(x\^5\), " ", 
                      RowBox[{
                        SuperscriptBox["Bp1", 
                          TagBox[\((1, 0)\),
                            Derivative],
                          MultilineFunction->None], "[", \(x, y\), "]"}]}]}], 
                  ")"}]}], "+", 
              RowBox[{
              "8", " ", \(x\^2\), " ", \((\(-1\) + 4\ x\ w1[x, y])\), " ", 
                RowBox[{
                  SuperscriptBox["w1", 
                    TagBox[\((1, 0)\),
                      Derivative],
                    MultilineFunction->None], "[", \(x, y\), "]"}]}], "+", 
              RowBox[{\(x\^2\), " ", \(Bp1[x, y]\), " ", 
                RowBox[{"(", 
                  
                  RowBox[{\(-3\), 
                    "+", \(8\ x\ \((1 + 2\ \((\(-1\) + x)\)\ x)\)\ w1[x, y]\),
                     "+", 
                    RowBox[{"8", " ", \((\(-2\) + x)\), " ", \(x\^3\), " ", 
                      RowBox[{
                        SuperscriptBox["w1", 
                          TagBox[\((1, 0)\),
                            Derivative],
                          MultilineFunction->None], "[", \(x, y\), "]"}]}]}], 
                  ")"}]}]}], ")"}]}], ")"}]}]], "Output"],

Cell[BoxData[
    RowBox[{\(1\/\(4\ M\^3\ x\^5\)\), 
      RowBox[{"(", 
        RowBox[{\(a\^2\), " ", "C", " ", 
          RowBox[{"(", 
            RowBox[{\(\(-12\)\ C\ Cos[y]\^2\ Sin[y]\), "+", 
              RowBox[{"C", " ", "x", " ", \(Sin[y]\^3\), " ", 
                RowBox[{"(", 
                  
                  RowBox[{\(4\ x\^5\ \((\(-1\) + 
                          x\ \((\(-5\) + 4\ x)\))\)\ Bp1[x, y]\^2\), "+", 
                    RowBox[{\(x\^2\), " ", \(Bp1[x, y]\), " ", 
                      RowBox[{"(", 
                        
                        RowBox[{\(-3\), "+", \(16\ x\), 
                          "-", \(8\ \((\(-1\) + x)\)\ x\ w1[x, y]\), "+", 
                          RowBox[{
                          "8", " ", \((\(-2\) + x)\), " ", \(x\^5\), " ", 
                            RowBox[{
                              SuperscriptBox["Bp1", 
                                TagBox[\((1, 0)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(x, y\), 
                              "]"}]}]}], ")"}]}], "+", 
                    RowBox[{\(w1[x, y]\), " ", 
                      RowBox[{"(", 
                        RowBox[{
                        "3", "-", \(4\ x\ \((1 + x)\)\ w1[x, y]\), "+", 
                          RowBox[{"8", " ", \(x\^3\), " ", \((2 + x)\), " ", 
                            RowBox[{
                              SuperscriptBox["w1", 
                                TagBox[\((1, 0)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(x, y\), 
                              "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
              RowBox[{"8", " ", \(x\^3\), " ", 
                RowBox[{
                  SuperscriptBox["Ap2", 
                    TagBox[\((1, 1)\),
                      Derivative],
                    MultilineFunction->None], "[", \(x, y\), "]"}]}]}], 
            ")"}]}], ")"}]}]], "Output"],

Cell[BoxData[
    RowBox[{\(1\/\(M\^2\ x\^4\)\), 
      RowBox[{"(", 
        RowBox[{\(a\^2\), " ", "C", " ", 
          RowBox[{"(", 
            
            RowBox[{\(8\ C\ Cos[y]\ Sin[y]\^2\), 
              "+", \(8\ C\ \((\(-2\) + x)\)\ x\^7\ Bp1[x, y]\^2\ Cos[
                  y]\ Sin[y]\^2\), "+", 
              RowBox[{
              "C", " ", \(x\^3\), " ", \(Bp1[x, y]\), " ", \(Sin[y]\^2\), " ",
                 
                RowBox[{"(", 
                  
                  RowBox[{\(Cos[y]\ \((1 - 13\ x + 32\ x\^2\ w1[x, y])\)\), 
                    "+", 
                    RowBox[{"4", " ", \(x\^2\), " ", \(Sin[y]\), " ", 
                      RowBox[{"(", 
                        RowBox[{
                          RowBox[{\((\(-2\) + x)\), " ", \(x\^2\), " ", 
                            RowBox[{
                              SuperscriptBox["Bp1", 
                                TagBox[\((0, 1)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(x, y\), 
                              "]"}]}], "+", 
                          RowBox[{"2", " ", 
                            RowBox[{
                              SuperscriptBox["w1", 
                                TagBox[\((0, 1)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(x, y\), 
                              "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
              RowBox[{"x", " ", 
                RowBox[{"(", 
                  
                  RowBox[{\(\(-8\)\ C\ x\^2\ \((2 + x)\)\ Cos[
                        y]\ Sin[y]\^2\ w1[x, y]\^2\), "+", 
                    RowBox[{"C", " ", \(Sin[y]\^2\), " ", \(w1[x, y]\), " ", 
                      RowBox[{"(", 
                        RowBox[{\(-Cos[y]\), "+", 
                          RowBox[{"8", " ", \(x\^4\), " ", \(Sin[y]\), " ", 
                            RowBox[{
                              SuperscriptBox["Bp1", 
                                TagBox[\((0, 1)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(x, y\), 
                              "]"}]}], "-", 
                          RowBox[{
                          "4", " ", \(x\^2\), " ", \((2 + x)\), 
                            " ", \(Sin[y]\), " ", 
                            RowBox[{
                              SuperscriptBox["w1", 
                                TagBox[\((0, 1)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(x, y\), 
                              "]"}]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", "x", " ", 
                      RowBox[{"(", 
                        RowBox[{
                          RowBox[{\(-2\), " ", \(Cot[y]\), " ", 
                            RowBox[{
                              SuperscriptBox["Ap2", 
                                TagBox[\((0, 1)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(x, y\), 
                              "]"}]}], "+", 
                          RowBox[{"2", " ", 
                            RowBox[{
                              SuperscriptBox["Ap2", 
                                TagBox[\((0, 2)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(x, y\), 
                              "]"}]}], "+", 
                          RowBox[{"x", " ", 
                            RowBox[{"(", 
                              RowBox[{
                                
                                RowBox[{\(-2\), " ", "C", " ", "x", 
                                  " ", \(Sin[y]\^3\), " ", 
                                  RowBox[{
                                    SuperscriptBox["Bp1", 
                                      TagBox[\((0, 1)\),
                                        Derivative],
                                      MultilineFunction->None], "[", \(x, y\),
                                     "]"}]}], "+", 
                                RowBox[{"3", " ", 
                                  RowBox[{
                                    SuperscriptBox["Ap2", 
                                      TagBox[\((1, 0)\),
                                        Derivative],
                                      MultilineFunction->None], "[", \(x, y\),
                                     "]"}]}], "+", 
                                RowBox[{\((\(-2\) + x)\), " ", 
                                  RowBox[{
                                    SuperscriptBox["Ap2", 
                                      TagBox[\((2, 0)\),
                                        Derivative],
                                      MultilineFunction->None], "[", \(x, y\),
                                     "]"}]}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}], ")"}]}]], "Output"],

Cell[BoxData[
    RowBox[{"-", 
      FractionBox[
        RowBox[{"2", " ", "a", " ", \(C\^2\), " ", \(Sin[y]\^3\), " ", 
          RowBox[{"(", 
            RowBox[{"2", "+", \(x\^3\ \((\(-4\) + 5\ x)\)\ Bp1[x, y]\), "+", 
              RowBox[{\((\(-2\) + x)\), " ", \(x\^4\), " ", 
                RowBox[{
                  SuperscriptBox["Bp1", 
                    TagBox[\((1, 0)\),
                      Derivative],
                    MultilineFunction->None], "[", \(x, y\), "]"}]}], "+", 
              RowBox[{"2", " ", \(x\^2\), " ", 
                RowBox[{
                  SuperscriptBox["w1", 
                    TagBox[\((1, 0)\),
                      Derivative],
                    MultilineFunction->None], "[", \(x, y\), "]"}]}]}], 
            ")"}]}], \(M\^2\ x\^3\)]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(DSolve[s2eqns11 \[Equal] 0, w1[x, y], x]\)], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(DSolve[{s2eqns11 \[Equal] 0, s2eqns14 \[Equal] 0}, {w1[x, y], 
        Bp1[x, y]}, x]\)], "Input"],

Cell[BoxData[
    RowBox[{"DSolve", "[", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{
            RowBox[{
              RowBox[{\(1\/\(4\ M\^3\ x\^4\)\), 
                RowBox[{"(", 
                  RowBox[{\(a\^2\), " ", \(C\^2\), " ", \(Sin[y]\^3\), " ", 
                    RowBox[{"(", 
                      
                      RowBox[{\(\(-4\)\ x\^5\ Bp1[x, y]\^2\), 
                        "-", \(4\ x\ \((1 + 4\ x)\)\ w1[x, y]\^2\), "-", 
                        RowBox[{"8", " ", \(x\^2\), " ", 
                          RowBox[{
                            SuperscriptBox["w1", 
                              TagBox[\((1, 0)\),
                                Derivative],
                              MultilineFunction->None], "[", \(x, y\), 
                            "]"}]}], "+", 
                        RowBox[{\(w1[x, y]\), " ", 
                          RowBox[{"(", 
                            RowBox[{"3", "+", \(16\ x\), "+", 
                              RowBox[{
                              "8", " ", \((\(-2\) + x)\), " ", \(x\^5\), " ", 
                                
                                RowBox[{
                                  SuperscriptBox["Bp1", 
                                    TagBox[\((1, 0)\),
                                      Derivative],
                                    MultilineFunction->None], "[", \(x, y\), 
                                  "]"}]}], "+", 
                              RowBox[{"32", " ", \(x\^3\), " ", 
                                RowBox[{
                                  SuperscriptBox["w1", 
                                    TagBox[\((1, 0)\),
                                      Derivative],
                                    MultilineFunction->None], "[", \(x, y\), 
                                  "]"}]}]}], ")"}]}], "+", 
                        RowBox[{\(x\^2\), " ", \(Bp1[x, y]\), " ", 
                          RowBox[{"(", 
                            
                            RowBox[{\(-3\), 
                              "+", \(8\ x\ \((1 - 2\ x + 2\ x\^2)\)\ w1[x, 
                                  y]\), "+", 
                              RowBox[{
                              "8", " ", \((\(-2\) + x)\), " ", \(x\^3\), " ", 
                                
                                RowBox[{
                                  SuperscriptBox["w1", 
                                    TagBox[\((1, 0)\),
                                      Derivative],
                                    MultilineFunction->None], "[", \(x, y\), 
                                  "]"}]}]}], ")"}]}]}], ")"}]}], ")"}]}], "==",
               "0"}], ",", 
            RowBox[{
              RowBox[{"-", 
                FractionBox[
                  RowBox[{
                  "2", " ", "a", " ", \(C\^2\), " ", \(Sin[y]\^3\), " ", 
                    RowBox[{"(", 
                      RowBox[{
                      "2", "+", \(x\^3\ \((\(-4\) + 5\ x)\)\ Bp1[x, y]\), "+",
                         
                        RowBox[{\((\(-2\) + x)\), " ", \(x\^4\), " ", 
                          RowBox[{
                            SuperscriptBox["Bp1", 
                              TagBox[\((1, 0)\),
                                Derivative],
                              MultilineFunction->None], "[", \(x, y\), 
                            "]"}]}], "+", 
                        RowBox[{"2", " ", \(x\^2\), " ", 
                          RowBox[{
                            SuperscriptBox["w1", 
                              TagBox[\((1, 0)\),
                                Derivative],
                              MultilineFunction->None], "[", \(x, y\), 
                            "]"}]}]}], ")"}]}], \(M\^2\ x\^3\)]}], "==", 
              "0"}]}], "}"}], ",", \({w1[x, y], Bp1[x, y]}\), ",", "x"}], 
      "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(bp1sols = 
      FullSimplify[
        DSolve[s2eqns24 \[Equal] 0, Bp1[x, y], x]]\), "\[IndentingNewLine]", 
    \(bp1sol = 
      FullSimplify[bp1sols[\([1, 1, 2]\)]]\), "\[IndentingNewLine]", 
    \(it = Numerator[bp1sol] //. {x \[Rule] 2}\), "\[IndentingNewLine]", 
    \(myc1 = \(Solve[it \[Equal] 0, 
          C[1]]\)[\([1]\)]\), "\[IndentingNewLine]", 
    \(myb = FullSimplify[bp1sol //. myc1]\)}], "Input"],

Cell[BoxData[
    \({{Bp1[x, 
            y] \[Rule] \(8 + x\ \((\(-2\)\ x + C[1])\) + 8\ x\ \
Log[x]\)\/\(\((\(-2\) + x)\)\^3\ x\^3\)}}\)], "Output"],

Cell[BoxData[
    \(\(8 + x\ \((\(-2\)\ x + C[1])\) + 8\ x\ Log[x]\)\/\(\((\(-2\) + x)\)\^3\
\ x\^3\)\)], "Output"],

Cell[BoxData[
    \(8 + 2\ \((\(-4\) + C[1])\) + 16\ Log[2]\)], "Output"],

Cell[BoxData[
    \({C[1] \[Rule] \(-8\)\ Log[2]}\)], "Output"],

Cell[BoxData[
    \(\(-\(\(2\ \((\(-4\) + x\ \((x + Log[16])\) - 
                4\ x\ Log[
                    x])\)\)\/\(\((\(-2\) + x)\)\^3\ x\^3\)\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Wsols = 
      FullSimplify[
        Solve[\((s2eqns21 //. {Bp1[x, y] \[Rule] myb, 
                  D[Bp1[x, y], x] \[Rule] D[myb, x]})\) \[Equal] 0, 
          W]]\)], "Input"],

Cell[BoxData[
    \({{W \[Rule] \(\(1\/\(8\ \((\(-2\) + x)\)\^3\ x\ \((1 + 
                    4\ x)\)\)\)\((40 + 
              x\ \((164 - 226\ x - 29\ x\^2 + 48\ x\^3 + 
                    64\ \((\(-1\) + x)\)\ \((1 + 3\ x)\)\ Log[2])\) - 
              64\ \((\(-1\) + x)\)\ x\ \((1 + 3\ x)\)\ Log[
                  x] - \[Sqrt]\((\((\(-2\) + x)\)\^2\ \((144 + 
                          x\ \((1248 + 
                                x\ \((\(-296\) + 
                                      x\ \((\(-15944\) + 
                                        x\ \((\(-3959\) + 
                                        96\ x\ \((67 + 
                                        24\ x)\))\))\))\))\))\) + 
                    128\ \((\(-2\) + x)\)\ x\^2\ \((24 + 
                          x\ \((\(-52\) + 
                                x\ \((\(-446\) + 
                                      3\ x\ \((35 + 48\ x)\))\))\))\)\ Log[
                        2] + 4096\ x\^4\ \((\(-2\) + 
                          3\ x\ \((\(-4\) + 3\ x)\))\)\ Log[2]\^2 + 
                    128\ x\^2\ Log[
                        x]\ \((48 + 
                          x\ \((\(-128\) + 
                                x\ \((\(-840\) + 128\ Log[2] + 
                                      x\ \((656 + 768\ Log[2] - 
                                        3\ x\ \((\(-61\) + 48\ x + 
                                        192\ Log[2])\))\))\))\) + 
                          32\ x\^2\ \((\(-2\) + 
                                3\ x\ \((\(-4\) + 3\ x)\))\)\ Log[
                              x])\))\))\)\)}, {W \[Rule] \(\(1\/\(8\ \
\((\(-2\) + x)\)\^3\ x\ \((1 + 4\ x)\)\)\)\((40 + 
              x\ \((164 - 226\ x - 29\ x\^2 + 48\ x\^3 + 
                    64\ \((\(-1\) + x)\)\ \((1 + 3\ x)\)\ Log[2])\) - 
              64\ \((\(-1\) + x)\)\ x\ \((1 + 3\ x)\)\ Log[
                  x] + \[Sqrt]\((\((\(-2\) + x)\)\^2\ \((144 + 
                          x\ \((1248 + 
                                x\ \((\(-296\) + 
                                      x\ \((\(-15944\) + 
                                        x\ \((\(-3959\) + 
                                        96\ x\ \((67 + 
                                        24\ x)\))\))\))\))\))\) + 
                    128\ \((\(-2\) + x)\)\ x\^2\ \((24 + 
                          x\ \((\(-52\) + 
                                x\ \((\(-446\) + 
                                      3\ x\ \((35 + 48\ x)\))\))\))\)\ Log[
                        2] + 4096\ x\^4\ \((\(-2\) + 
                          3\ x\ \((\(-4\) + 3\ x)\))\)\ Log[2]\^2 + 
                    128\ x\^2\ Log[
                        x]\ \((48 + 
                          x\ \((\(-128\) + 
                                x\ \((\(-840\) + 128\ Log[2] + 
                                      x\ \((656 + 768\ Log[2] - 
                                        3\ x\ \((\(-61\) + 48\ x + 
                                        192\ Log[2])\))\))\))\) + 
                          32\ x\^2\ \((\(-2\) + 
                                3\ x\ \((\(-4\) + 3\ x)\))\)\ Log[
                              x])\))\))\)\)}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Wsols[\([1]\)]\)], "Input"],

Cell[BoxData[
    \({W \[Rule] \(\(1\/\(8\ \((\(-2\) + x)\)\^3\ x\ \((1 + 
                  4\ x)\)\)\)\((40 + 
            x\ \((164 - 226\ x - 29\ x\^2 + 48\ x\^3 + 
                  64\ \((\(-1\) + x)\)\ \((1 + 3\ x)\)\ Log[2])\) - 
            64\ \((\(-1\) + x)\)\ x\ \((1 + 3\ x)\)\ Log[
                x] - \[Sqrt]\((\((\(-2\) + x)\)\^2\ \((144 + 
                        x\ \((1248 + 
                              x\ \((\(-296\) + 
                                    x\ \((\(-15944\) + 
                                        x\ \((\(-3959\) + 
                                        96\ x\ \((67 + 
                                        24\ x)\))\))\))\))\))\) + 
                  128\ \((\(-2\) + x)\)\ x\^2\ \((24 + 
                        x\ \((\(-52\) + 
                              x\ \((\(-446\) + 
                                    3\ x\ \((35 + 48\ x)\))\))\))\)\ Log[2] + 
                  4096\ x\^4\ \((\(-2\) + 
                        3\ x\ \((\(-4\) + 3\ x)\))\)\ Log[2]\^2 + 
                  128\ x\^2\ Log[
                      x]\ \((48 + 
                        x\ \((\(-128\) + 
                              x\ \((\(-840\) + 128\ Log[2] + 
                                    x\ \((656 + 768\ Log[2] - 
                                        3\ x\ \((\(-61\) + 48\ x + 
                                        192\ Log[2])\))\))\))\) + 
                        32\ x\^2\ \((\(-2\) + 
                              3\ x\ \((\(-4\) + 3\ x)\))\)\ Log[
                            x])\))\))\)\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Wsols1 = 
      FullSimplify[
        Wsols[\([1, 1, 2]\)], {x \[GreaterEqual] 
            0}]\), "\[IndentingNewLine]", 
    \(Wsols2 = Wsols[\([2, 1, 2]\)]\)}], "Input"],

Cell[BoxData[
    \(\(\(1\/\(8\ \((\(-2\) + x)\)\^3\ x\ \((1 + 4\ x)\)\)\)\((40 + 
        x\ \((164 - 226\ x - 29\ x\^2 + 48\ x\^3 + 
              64\ \((\(-1\) + x)\)\ \((1 + 3\ x)\)\ Log[2])\) - 
        64\ \((\(-1\) + x)\)\ x\ \((1 + 3\ x)\)\ Log[
            x] - \[Sqrt]\((\((\(-2\) + x)\)\^2\ \((144 + 
                    x\ \((1248 + 
                          x\ \((\(-296\) + 
                                x\ \((\(-15944\) + 
                                      x\ \((\(-3959\) + 
                                        96\ x\ \((67 + 
                                        24\ x)\))\))\))\))\))\) + 
              128\ \((\(-2\) + x)\)\ x\^2\ \((24 + 
                    x\ \((\(-52\) + 
                          x\ \((\(-446\) + 
                                3\ x\ \((35 + 48\ x)\))\))\))\)\ Log[2] + 
              4096\ x\^4\ \((\(-2\) + 
                    3\ x\ \((\(-4\) + 3\ x)\))\)\ Log[2]\^2 + 
              128\ x\^2\ Log[
                  x]\ \((48 + 
                    x\ \((\(-128\) + 
                          x\ \((\(-840\) + 128\ Log[2] + 
                                x\ \((656 + 768\ Log[2] - 
                                      3\ x\ \((\(-61\) + 48\ x + 
                                        192\ Log[2])\))\))\))\) + 
                    32\ x\^2\ \((\(-2\) + 3\ x\ \((\(-4\) + 3\ x)\))\)\ Log[
                        x])\))\))\)\)\)], "Output"],

Cell[BoxData[
    \(\(\(1\/\(8\ \((\(-2\) + x)\)\^3\ x\ \((1 + 4\ x)\)\)\)\((40 + 
        x\ \((164 - 226\ x - 29\ x\^2 + 48\ x\^3 + 
              64\ \((\(-1\) + x)\)\ \((1 + 3\ x)\)\ Log[2])\) - 
        64\ \((\(-1\) + x)\)\ x\ \((1 + 3\ x)\)\ Log[
            x] + \[Sqrt]\((\((\(-2\) + x)\)\^2\ \((144 + 
                    x\ \((1248 + 
                          x\ \((\(-296\) + 
                                x\ \((\(-15944\) + 
                                      x\ \((\(-3959\) + 
                                        96\ x\ \((67 + 
                                        24\ x)\))\))\))\))\))\) + 
              128\ \((\(-2\) + x)\)\ x\^2\ \((24 + 
                    x\ \((\(-52\) + 
                          x\ \((\(-446\) + 
                                3\ x\ \((35 + 48\ x)\))\))\))\)\ Log[2] + 
              4096\ x\^4\ \((\(-2\) + 
                    3\ x\ \((\(-4\) + 3\ x)\))\)\ Log[2]\^2 + 
              128\ x\^2\ Log[
                  x]\ \((48 + 
                    x\ \((\(-128\) + 
                          x\ \((\(-840\) + 128\ Log[2] + 
                                x\ \((656 + 768\ Log[2] - 
                                      3\ x\ \((\(-61\) + 48\ x + 
                                        192\ Log[2])\))\))\))\) + 
                    32\ x\^2\ \((\(-2\) + 3\ x\ \((\(-4\) + 3\ x)\))\)\ Log[
                        x])\))\))\)\)\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(FullSimplify[Limit[Wsols1, x \[Rule] 2]]\), "\[IndentingNewLine]", 
    \(N[Limit[Wsols2, x \[Rule] 2]]\)}], "Input"],

Cell[BoxData[
    \(Fudge[y_] := N[Limit[Wsols1, x \[Rule] y]]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Fudge[1997/1000]\)], "Input"],

Cell[BoxData[
    \(\(\(0.15043074210534516`\)\(\[InvisibleSpace]\)\) + 
      3.0599196202760903`\ \[ImaginaryI]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Plot[Fudge[x], {x, 1.9, 2.2}]\)], "Input"],

Cell[BoxData[
    \(General::"ivar" \(\(:\)\(\ \)\) 
      "\!\(1.9999346926234152`\) is not a valid variable."\)], "Message"],

Cell[BoxData[
    \(Limit::"lim" \(\(:\)\(\ \)\) 
      "Limit specification \!\(1.9999346926234152` \[Rule] \
1.9999346926234152`\) is not of the form x -> x0."\)], "Message"],

Cell[BoxData[
    \(General::"ivar" \(\(:\)\(\ \)\) 
      "\!\(1.9999346926234152`\) is not a valid variable."\)], "Message"],

Cell[BoxData[
    \(Limit::"lim" \(\(:\)\(\ \)\) 
      "Limit specification \!\(1.9999346926234152` \[Rule] \
1.9999346926234152`\) is not of the form x -> x0."\)], "Message"],

Cell[BoxData[
    \(Plot::"plnr" \(\(:\)\(\ \)\) 
      "\!\(Fudge[x]\) is not a machine-size real number at \!\(x\) = \
\!\(1.9999346926234152`\)."\)], "Message"],

Cell[BoxData[
    \(General::"ivar" \(\(:\)\(\ \)\) 
      "\!\(1.9933198768922633`\) is not a valid variable."\)], "Message"],

Cell[BoxData[
    \(General::"stop" \(\(:\)\(\ \)\) 
      "Further output of \!\(General :: \"ivar\"\) will be suppressed during \
this calculation."\)], "Message"],

Cell[BoxData[
    \(Limit::"lim" \(\(:\)\(\ \)\) 
      "Limit specification \!\(1.9933198768922633` \[Rule] \
1.9933198768922633`\) is not of the form x -> x0."\)], "Message"],

Cell[BoxData[
    \(General::"stop" \(\(:\)\(\ \)\) 
      "Further output of \!\(Limit :: \"lim\"\) will be suppressed during \
this calculation."\)], "Message"],

Cell[BoxData[
    \(Plot::"plnr" \(\(:\)\(\ \)\) 
      "\!\(Fudge[x]\) is not a machine-size real number at \!\(x\) = \
\!\(1.9933198768922633`\)."\)], "Message"],

Cell[BoxData[
    \(Plot::"plnr" \(\(:\)\(\ \)\) 
      "\!\(Fudge[x]\) is not a machine-size real number at \!\(x\) = \
\!\(1.990054433666664`\)."\)], "Message"],

Cell[BoxData[
    \(General::"stop" \(\(:\)\(\ \)\) 
      "Further output of \!\(Plot :: \"plnr\"\) will be suppressed during \
this calculation."\)], "Message"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-33.3634 17.2813 -179.181 573.314 [
[.33508 .25376 -12 -9 ]
[.33508 .25376 12 0 ]
[.50789 .25376 -12 -9 ]
[.50789 .25376 12 0 ]
[.68071 .25376 -12 -9 ]
[.68071 .25376 12 0 ]
[.85352 .25376 -12 -9 ]
[.85352 .25376 12 0 ]
[.14977 .03693 -36 -4.5 ]
[.14977 .03693 0 4.5 ]
[.14977 .15159 -36 -4.5 ]
[.14977 .15159 0 4.5 ]
[.14977 .38092 -36 -4.5 ]
[.14977 .38092 0 4.5 ]
[.14977 .49558 -36 -4.5 ]
[.14977 .49558 0 4.5 ]
[.14977 .61024 -36 -4.5 ]
[.14977 .61024 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.33508 .26626 m
.33508 .27251 L
s
[(1.95)] .33508 .25376 0 1 Mshowa
.50789 .26626 m
.50789 .27251 L
s
[(1.96)] .50789 .25376 0 1 Mshowa
.68071 .26626 m
.68071 .27251 L
s
[(1.97)] .68071 .25376 0 1 Mshowa
.85352 .26626 m
.85352 .27251 L
s
[(1.98)] .85352 .25376 0 1 Mshowa
.125 Mabswid
.19683 .26626 m
.19683 .27001 L
s
.23139 .26626 m
.23139 .27001 L
s
.26596 .26626 m
.26596 .27001 L
s
.30052 .26626 m
.30052 .27001 L
s
.36964 .26626 m
.36964 .27001 L
s
.40421 .26626 m
.40421 .27001 L
s
.43877 .26626 m
.43877 .27001 L
s
.47333 .26626 m
.47333 .27001 L
s
.54246 .26626 m
.54246 .27001 L
s
.57702 .26626 m
.57702 .27001 L
s
.61158 .26626 m
.61158 .27001 L
s
.64614 .26626 m
.64614 .27001 L
s
.71527 .26626 m
.71527 .27001 L
s
.74983 .26626 m
.74983 .27001 L
s
.78439 .26626 m
.78439 .27001 L
s
.81896 .26626 m
.81896 .27001 L
s
.12771 .26626 m
.12771 .27001 L
s
.09314 .26626 m
.09314 .27001 L
s
.05858 .26626 m
.05858 .27001 L
s
.02402 .26626 m
.02402 .27001 L
s
.88808 .26626 m
.88808 .27001 L
s
.92264 .26626 m
.92264 .27001 L
s
.95721 .26626 m
.95721 .27001 L
s
.99177 .26626 m
.99177 .27001 L
s
.25 Mabswid
0 .26626 m
1 .26626 L
s
.16227 .03693 m
.16852 .03693 L
s
[(0.3126)] .14977 .03693 1 0 Mshowa
.16227 .15159 m
.16852 .15159 L
s
[(0.3128)] .14977 .15159 1 0 Mshowa
.16227 .38092 m
.16852 .38092 L
s
[(0.3132)] .14977 .38092 1 0 Mshowa
.16227 .49558 m
.16852 .49558 L
s
[(0.3134)] .14977 .49558 1 0 Mshowa
.16227 .61024 m
.16852 .61024 L
s
[(0.3136)] .14977 .61024 1 0 Mshowa
.125 Mabswid
.16227 .0656 m
.16602 .0656 L
s
.16227 .09426 m
.16602 .09426 L
s
.16227 .12293 m
.16602 .12293 L
s
.16227 .18026 m
.16602 .18026 L
s
.16227 .20893 m
.16602 .20893 L
s
.16227 .23759 m
.16602 .23759 L
s
.16227 .29492 m
.16602 .29492 L
s
.16227 .32359 m
.16602 .32359 L
s
.16227 .35225 m
.16602 .35225 L
s
.16227 .40959 m
.16602 .40959 L
s
.16227 .43825 m
.16602 .43825 L
s
.16227 .46692 m
.16602 .46692 L
s
.16227 .52425 m
.16602 .52425 L
s
.16227 .55291 m
.16602 .55291 L
s
.16227 .58158 m
.16602 .58158 L
s
.16227 .00827 m
.16602 .00827 L
s
.25 Mabswid
.16227 0 m
.16227 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
0 .20511 m
.12611 .23544 L
.33328 .27979 L
.44874 .30302 L
.45533 .30273 L
.46243 .30149 L
.46912 .30904 L
.47525 .30381 L
.48211 .30846 L
.48863 .31038 L
.50336 .3152 L
.52951 .32425 L
.53607 .31343 L
.54224 .31932 L
.54826 .32374 L
.55379 .3329 L
.55961 .31628 L
.5659 .33516 L
.57217 .32138 L
.5788 .32734 L
.58554 .32783 L
.59182 .32902 L
.59872 .33385 L
.60256 .31524 L
.60611 .34098 L
.60965 .32154 L
.61342 .3454 L
.6172 .32818 L
.62137 .34579 L
.62495 .35524 L
.62882 .32626 L
.63582 .31772 L
.6427 .32003 L
.64616 .33799 L
.64995 .32353 L
.65666 .30121 L
.6629 .31685 L
.66935 .3214 L
.67634 .34773 L
.68295 .38259 L
.68903 .34382 L
.69452 .34485 L
.70056 .35175 L
.70687 .2738 L
.71277 .33887 L
.71966 .38005 L
.7262 .3617 L
.73206 .31356 L
.73846 .34175 L
.74539 .4004 L
Mistroke
.74927 .3169 L
.75278 .34444 L
.75962 .2871 L
.76605 .24374 L
.77241 .33293 L
.77921 .40205 L
.78563 .40999 L
.79147 .3256 L
.79834 .42239 L
.80221 .36545 L
.80579 .21426 L
.81237 .1744 L
.81934 .52472 L
.82599 .44878 L
.83314 .36488 L
.8399 .50574 L
.84608 .46476 L
.87557 .21461 L
.88787 .50587 L
Mfstroke
.88787 .50587 m
.89201 .61803 L
s
.89715 .61803 m
.90099 .49959 L
s
.90099 .49959 m
.9033 0 L
s
.90987 0 m
.91234 .50602 L
s
.91234 .50602 m
.91283 .61803 L
s
.92258 .61803 m
.92438 0 L
s
.9351 0 m
.93695 .61803 L
s
.93755 .61803 m
.93882 0 L
s
.97032 0 m
.97215 .61803 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005X0000gR000`400?l00000o`00003o?03oool0
0`000000oooo0?ooo`3o0?ooo`@0oooo00<000000?ooo`000000103oool010000000oooo0?ooo`3o
ool2000000X0oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3oool0o`3oool4
0?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003o
ool0oooo00`0oooo000l0?ooo`030000003oool0oooo0?l0oooo103oool00`000000oooo00000004
0?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool2
00000?l0oooo1@3oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`8000002P3o
ool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo00<00000
0?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303o
ool003`0oooo00<000000?ooo`3oool0o`3oool40?ooo`030000003oool0000000@0oooo00@00000
0?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l0?ooo`030000003oool0
oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`8000002P3o
ool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo00<00000
0?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303o
ool003`0oooo00<000000?ooo`3oool0o`3oool40?ooo`030000003oool0000000@0oooo00@00000
0?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l0?ooo`030000003oool0
oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`8000002P3o
ool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo00<00000
0?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303o
ool000X0oooo0`0000050?ooo`800000103oool4000000@0oooo1P0000020?ooo`H000000`3oool4
000000L0oooo00<000000?ooo`3oool0o`3oool40?ooo`030000003oool0000000@0oooo00@00000
0?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo00090?ooo`040000003oool0
oooo000000D0oooo0P0000080?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool00`3o
ool01@000000oooo0?ooo`3oool0000000<0oooo00D000000?ooo`3oool0oooo000000060?ooo`03
0000003oool0oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000003oool0oooo0?oo
o`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00203oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo00`0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`040?ooo`<0
0000o`3oool40?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?oo
o`030000003oool0oooo00`0oooo00080?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool0303oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00D0oooo0P0000030?ooo`04
0000003oool0oooo0?ooo`8000001P3oool00`000000oooo0?ooo`3o0?ooo`@0oooo00<000000?oo
o`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool0
00P0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0:0?ooo`8000001`3oool00`00
0000oooo0?ooo`060?ooo`8000000P3oool5000000L0oooo00<000000?ooo`3oool0o`3oool40?oo
o`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0
oooo00`0oooo00080?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`00
0000oooo0?ooo`040?ooo`030000003oool0oooo00L0oooo00D000000?ooo`3oool0oooo0000000:
0?ooo`030000003oool0oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000003oool0
oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`002@3oool010000000oooo0?ooo`00
000?0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`020?ooo`050000003oool0oooo0?ooo`0000002P3oool00`000000oooo0?ooo`3o0?ooo`@0oooo
00<000000?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3o
ool0303oool000T0oooo1000000;0?ooo`@000001@3oool3000000@0oooo1@0000050?ooo`@00000
1P3oool00`000000oooo0?ooo`3o0?ooo`@0oooo00<000000?ooo`000000103oool010000000oooo
0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3oool0
o`3oool40?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`03
0000003oool0oooo00`0oooo000l0?ooo`030000003oool0oooo0?l0oooo103oool00`000000oooo
000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00
?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo00<000000?ooo`000000103oool010000000oooo
0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3oool0
o`3oool40?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`03
0000003oool0oooo00`0oooo000l0?ooo`800000o`3oool50?ooo`030000003oool0000000@0oooo
00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l0?ooo`030000
003oool0oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo
00<000000?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3o
ool0303oool003`0oooo00<000000?ooo`3oool0o`3oool40?ooo`030000003oool0000000@0oooo
00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l0?ooo`030000
003oool0oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo
00<000000?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3o
ool0303oool003`0oooo00<000000?ooo`3oool0o`3oool40?ooo`030000003oool0000000@0oooo
00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l0?ooo`030000
003oool0oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo
00<000000?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3o
ool0303oool003`0oooo00<000000?ooo`3oool0o`3oool40?ooo`030000003oool0000000@0oooo
00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l0?ooo`800000
o`3oool50?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`03
0000003oool0oooo00`0oooo000l0?ooo`030000003oool0oooo0?l0oooo103oool00`000000oooo
000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00
?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo00<000000?ooo`000000103oool010000000oooo
0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3oool0
o`3oool40?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`03
0000003oool0oooo00`0oooo000l0?ooo`030000003oool0oooo0?l0oooo103oool00`000000oooo
000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00
?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo00<000000?ooo`000000103oool010000000oooo
0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3oool0
o`3oool40?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`03
0000003oool0oooo00`0oooo000l0?ooo`030000003oool0oooo0?l0oooo103oool00`000000oooo
000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00
?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo00<000000?ooo`000000103oool010000000oooo
0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3oool0
o`3oool40?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`03
0000003oool0oooo00`0oooo000l0?ooo`030000003oool0oooo0?l0oooo103oool00`000000oooo
000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00
?03oool200000?l0oooo1@3oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo
00<000000?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3o
ool0303oool003`0oooo00<000000?ooo`3oool0o`3oool40?ooo`030000003oool0000000@0oooo
00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l0?ooo`030000
003oool0oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3o0?ooo`@0oooo
00<000000?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3o
ool0303oool003`0oooo00<000000?ooo`3oool0o`3oool40?ooo`030000003oool0000000@0oooo
00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l0?ooo`030000
003oool0oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`002P3oool3000000D0oooo0P0000040?ooo`@00000
103oool600000080oooo1P0000030?ooo`@000001`3oool00`000000oooo0?ooo`3o0?ooo`@0oooo
00<000000?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3o
ool0303oool000T0oooo00@000000?ooo`3oool000001@3oool2000000P0oooo00<000000?ooo`3o
ool0103oool00`000000oooo0?ooo`030?ooo`050000003oool0oooo0?ooo`0000000P3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3oool40?oo
o`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0
oooo00`0oooo00080?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`00
0000oooo0?ooo`040?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3oool40?oo
o`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0
oooo00`0oooo00080?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`00
0000oooo0?ooo`040?ooo`030000003oool0oooo00D0oooo0P0000040?ooo`030000003oool0oooo
008000001P3oool300000?l0oooo103oool00`000000oooo000000040?ooo`040000003oool0oooo
0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00203oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo00X0oooo0P0000070?ooo`030000003oool0oooo00H0oooo0P0000030?oo
o`@000001`3oool00`000000oooo0?ooo`3o0?ooo`@0oooo00<000000?ooo`000000103oool01000
0000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool000P0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo00@0oooo00<000000?oo
o`3oool01`3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00@0oooo00<00000
0?ooo`3oool0o`3oool40?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00
000:0?ooo`030000003oool0oooo00`0oooo00090?ooo`040000003oool0oooo000000l0oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080oooo00@0
00000?ooo`3oool00000103oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0?l0oooo
103oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000
oooo0?ooo`0<0?ooo`002@3oool4000000/0oooo100000050?ooo`<00000103oool5000000@0oooo
100000070?ooo`030000003oool0oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000
003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo
0?ooo`3o0?ooo`@0oooo00<000000?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0
oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3oool0o`3oool40?ooo`030000
003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0
oooo000l0?ooo`030000003oool0oooo0?l0oooo103oool00`000000oooo000000040?ooo`040000
003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo
0?ooo`3R0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`000000103oool010000000oooo
0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3oool0
hP3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0
oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l0?ooo`800000h`3oool00`000000oooo
0?ooo`0N0?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`03
0000003oool0oooo00`0oooo000l0?ooo`030000003oool0oooo0>80oooo00<000000?ooo`3oool0
7P3oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000
oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3Q0?ooo`800000803oool00`000000oooo
000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00
?03oool00`000000oooo0?ooo`3Q0?ooo`800000803oool00`000000oooo000000040?ooo`040000
003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo
0?ooo`3Q0?ooo`800000803oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3Q0?ooo`800000
803oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000
oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`3Q0?ooo`800000803oool00`000000oooo
000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00
?03oool00`000000oooo0?ooo`3Q0?ooo`800000803oool00`000000oooo000000040?ooo`040000
003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo
0?ooo`3Q0?ooo`800000803oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`000P3oool3000003L0oooo00<000000?ooo`3oool0
h03oool00`000000oooo0000000P0?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0
oooo0P00000:0?ooo`030000003oool0oooo00`0oooo00050?ooo`@00000<`3oool200000>40oooo
00<000000?ooo`000000803oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`002@3oool5000002h0oooo00<000000?ooo`3oool0
h03oool00`000000oooo0000000P0?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0
oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000>0?ooo`@00000:P3oool00`000000oooo
0?ooo`3P0?ooo`030000003oool0000001H0oooo00<000000?ooo`3oool01`3oool00`000000oooo
000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00
4P3oool5000002D0oooo00<000000?ooo`3oool0h03oool00`000000oooo0000000F0?ooo`030000
003oool0oooo00L0oooo00<000000?ooo`000000103oool010000000oooo0?ooo`3oool2000000X0
oooo00<000000?ooo`3oool0303oool001L0oooo1000000Q0?ooo`030000003oool0oooo0>00oooo
00<000000?ooo`0000005P3oool00`000000oooo0?ooo`070?ooo`030000003oool0000000@0oooo
00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000K0?ooo`D00000
703oool00`000000oooo0?ooo`3P0?ooo`030000003oool0000001H0oooo00<000000?ooo`3oool0
1`3oool00`000000oooo000000040?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000
oooo0?ooo`0<0?ooo`00803oool4000001P0oooo00<000000?ooo`3oool0:`3oool6000000@0oooo
0P0000040?ooo`<000001P3oool400000200oooo1P0000040?ooo`800000103oool3000000H0oooo
1000000P0?ooo`H00000103oool2000000@0oooo0`0000070?ooo`030000003oool0oooo01h0oooo
00<000000?ooo`0000001@0000040?ooo`800000103oool3000000@0oooo00<000000?ooo`000000
0`0000040?ooo`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`03
0000003oool0oooo00`0oooo000T0?ooo`D000004`3oool00`000000oooo0?ooo`0^0?ooo`030000
003oool0oooo00@0oooo0P0000070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0
803oool00`000000oooo0?ooo`040?ooo`8000001`3oool00`000000oooo0?ooo`030?ooo`050000
003oool0oooo0?ooo`0000008P3oool00`000000oooo0?ooo`040?ooo`8000001`3oool00`000000
oooo0?ooo`050?ooo`030000003oool0oooo01d0oooo00<000000?ooo`0000000P3oool00`000000
oooo0?ooo`040?ooo`8000001`3oool00`000000oooo0?ooo`03000000@0oooo00L000000?ooo`3o
ool0oooo0000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003o
ool0oooo00`0oooo000Y0?ooo`@000003`3oool00`000000oooo0?ooo`0^0?ooo`030000003oool0
oooo00h0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0
oooo00h0oooo00D000000?ooo`3oool0oooo000000040?ooo`030000003oool0oooo0200oooo00<0
00000?ooo`3oool03P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01d0oooo00<0
00000?ooo`0000000P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0000000800000103o
ool01`000000oooo0?ooo`3oool000000?ooo`000000103oool010000000oooo0?ooo`3oool20000
00X0oooo00<000000?ooo`3oool0303oool002d0oooo1@00000:0?ooo`030000003oool0oooo02h0
oooo00<000000?ooo`3oool02`3oool4000000P0oooo00<000000?ooo`3oool0803oool00`000000
oooo0?ooo`0;0?ooo`@000000`3oool010000000oooo0?ooo`3oool200000280oooo00<000000?oo
o`3oool02`3oool4000000H0oooo00<000000?ooo`3oool07@3oool01P000000oooo0?ooo`000000
oooo000000d0oooo100000001@3oool000000000003oool000000080oooo0P0000030?ooo`030000
003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0
oooo000b0?ooo`@000001P3oool2000002l0oooo00<000000?ooo`3oool02P3oool01@000000oooo
0?ooo`3oool0000000@0oooo1000000S0?ooo`030000003oool0oooo00X0oooo00D000000?ooo`3o
ool0oooo000000030?ooo`D000008`3oool00`000000oooo0?ooo`0:0?ooo`050000003oool0oooo
0?ooo`0000001`3oool00`000000oooo0?ooo`0L0?ooo`060000003oool0oooo0000003oool00000
303oool01P000000oooo0?ooo`3oool000000?ooo`80000000<0oooo0000000000000P0000040?oo
o`030000003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0
oooo00`0oooo000f0?ooo`D0000000<0oooo0000003oool0;`3oool00`000000oooo0?ooo`0:0?oo
o`050000003oool0oooo0?ooo`000000103oool00`000000oooo0?ooo`0T0?ooo`030000003oool0
oooo00X0oooo00D000000?ooo`3oool0oooo000000040?ooo`030000003oool0oooo02@0oooo00<0
00000?ooo`3oool02P3oool01@000000oooo0?ooo`3oool0000000L0oooo00<000000?ooo`3oool0
703oool01P000000oooo0?ooo`000000oooo000000`0oooo00H000000?ooo`3oool0oooo0000003o
ool3000000@0oooo00L000000?ooo`3oool0oooo0000003oool0000000@0oooo00@000000?ooo`3o
ool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000k0?ooo`@00000;P3oool00`000000
oooo0?ooo`0:0?ooo`050000003oool0oooo0?ooo`000000103oool00`000000oooo0?ooo`0T0?oo
o`030000003oool0oooo00X0oooo00D000000?ooo`3oool0oooo000000040?ooo`030000003oool0
oooo02@0oooo00<000000?ooo`3oool02P3oool01@000000oooo0?ooo`3oool0000000<0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo00/0oooo00H0
00000?ooo`3oool000000?ooo`00000<0?ooo`060000003oool0oooo0?ooo`000000oooo0`000004
0?ooo`070000003oool0oooo0?ooo`000000oooo000000040?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`05000002L0oooo
0`00000=0?ooo`<000001@3oool400000240oooo0`00000=0?ooo`<000001P3oool400000200oooo
0`00000=0?ooo`<00000103oool6000000l0oooo00<000000?ooo`3oool02`3oool00`000000oooo
0?ooo`03000000d0oooo0`0000020?ooo`80000000<0oooo0000000000000P0000040?ooo`030000
003oool0000000@0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0
oooo000l0?ooo`030000003oool0oooo00D0oooo1@0000380?ooo`030000003oool0oooo00/0oooo
00@000000?ooo`3oool00000503oool2000000T0oooo00<000000?ooo`000000103oool010000000
oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3o
ool02P3oool400000<@0oooo00<000000?ooo`3oool02`3oool010000000oooo0?ooo`00000C0?oo
o`040000003oool0oooo000000L0oooo00@000000?ooo`3oool00000103oool010000000oooo0?oo
o`3oool2000000X0oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3oool03P3o
ool500000;l0oooo00<000000?ooo`3oool02`3oool010000000oooo0?ooo`00000C0?ooo`040000
003oool0oooo000000L0oooo00D000000?ooo`3oool0oooo000000030?ooo`040000003oool0oooo
0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`0C0?oo
o`@00000^P3oool2000000d0oooo00@000000?ooo`3oool000004`3oool010000000oooo0?ooo`00
00070?ooo`050000003oool0oooo0?ooo`0000000`3oool010000000oooo0?ooo`3oool2000000X0
oooo00<000000?ooo`3oool0303oool003`0oooo00<000000?ooo`3oool05`3oool500000;D0oooo
0P00000=0?ooo`040000003oool0oooo000001<0oooo00@000000?ooo`3oool000001`3oool01@00
0000oooo0?ooo`3oool0000000<0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003o
ool0oooo00`0oooo000l0?ooo`030000003oool0oooo01`0oooo1000002a0?ooo`8000003@3oool0
10000000oooo0?ooo`00000C0?ooo`040000003oool0oooo000000L0oooo00D000000?ooo`3oool0
oooo000000030?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?oo
o`000P3ooooo000006@000000`3oool000/0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool02P3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool010000000oooo
0?ooo`3oool5000000<0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0:0?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0000000D0oooo00<000000?ooo`3oool0103oool01P000000oooo0?ooo`000000oooo
000000/0oooo00<000000?ooo`3oool00`3oool010000000oooo0?ooo`0000020?ooo`030000003o
ool0oooo0080oooo00D000000?ooo`3oool0oooo000000020?ooo`8000000`3oool2000000H0oooo
00D000000?ooo`3oool0oooo000000070?ooo`030000003oool0oooo00@0oooo000;0?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`090?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`090?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool01P3oool4000000`0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
0P3oool00`000000oooo000000050?ooo`030000003oool0oooo00@0oooo00H000000?ooo`3oool0
00000?ooo`00000;0?ooo`030000003oool0oooo00<0oooo00@000000?ooo`3oool000000P3oool0
0`000000oooo0?ooo`020?ooo`050000003oool0oooo0?ooo`0000000P3oool2000000<0oooo0P00
00060?ooo`050000003oool0oooo0?ooo`0000001`3oool00`000000oooo0?ooo`040?ooo`00?03o
ool00`000000oooo0?ooo`0^0?ooo`D00000RP3oool00`000000oooo0?ooo`0A0?ooo`030000003o
ool0000000`0oooo00@000000?ooo`3oool000004P3oool01@000000oooo0?ooo`3oool0000000L0
oooo00D000000?ooo`3oool0oooo000000030?ooo`040000003oool0oooo0?ooo`8000002P3oool0
0`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`0c0?ooo`@00000QP3oool00`00
0000oooo0?ooo`0A0?ooo`030000003oool0000000`0oooo00@000000?ooo`3oool000004P3oool0
1@000000oooo0?ooo`3oool0000000L0oooo00D000000?ooo`3oool0oooo000000030?ooo`040000
003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo
0?ooo`0g0?ooo`D00000P@3oool00`000000oooo0?ooo`0@0?ooo`040000003oool0oooo000000`0
oooo00@000000?ooo`3oool000004P3oool01@000000oooo0?ooo`3oool0000000L0oooo00D00000
0?ooo`3oool0oooo000000030?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo
0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`0l0?ooo`D00000O03oool00`000000oooo0?oo
o`0@0?ooo`040000003oool0oooo000000`0oooo00@000000?ooo`3oool000004P3oool01@000000
oooo0?ooo`3oool0000000L0oooo00D000000?ooo`3oool0oooo000000030?ooo`040000003oool0
oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`11
0?ooo`D00000M`3oool00`000000oooo0?ooo`0@0?ooo`040000003oool0oooo000000`0oooo00@0
00000?ooo`3oool000004P3oool01@000000oooo0?ooo`3oool0000000L0oooo00D000000?ooo`3o
ool0oooo000000030?ooo`040000003oool0oooo0?ooo`8000002P3oool00`000000oooo0?ooo`0<
0?ooo`00?03oool00`000000oooo0?ooo`160?ooo`D00000LP3oool00`000000oooo0?ooo`0@0?oo
o`040000003oool0oooo000000`0oooo00@000000?ooo`3oool000004P3oool01@000000oooo0?oo
o`3oool0000000L0oooo00D000000?ooo`3oool0oooo000000030?ooo`040000003oool0oooo0?oo
o`8000002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`1;0?ooo`H0
0000K03oool200000140oooo00@000000?ooo`3oool000002`3oool01@000000oooo0?ooo`3oool0
00000180oooo00D000000?ooo`3oool0oooo000000070?ooo`050000003oool0oooo0?ooo`000000
0`3oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool003`0oooo
0P00001B0?ooo`D00000IP3oool00`000000oooo0000000A0?ooo`040000003oool0oooo000000/0
oooo00D000000?ooo`3oool0oooo0000000B0?ooo`050000003oool0oooo0?ooo`0000001`3oool0
1@000000oooo0?ooo`3oool0000000<0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000
003oool0oooo00`0oooo000l0?ooo`030000003oool0oooo05H0oooo1@00001Q0?ooo`030000003o
ool000000140oooo00@000000?ooo`3oool000002`3oool01@000000oooo0?ooo`3oool000000140
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`050?ooo`050000003oool0oooo0?oo
o`0000000`3oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?ooo`3oool0303oool0
03`0oooo00<000000?ooo`3oool0F`3oool5000005`0oooo00<000000?ooo`000000403oool01@00
0000oooo0?ooo`3oool0000000/0oooo00D000000?ooo`3oool0oooo0000000A0?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool01@3oool01@000000oooo0?ooo`3oool0000000<0oooo
00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l0?ooo`030000
003oool0oooo0600oooo200000130?ooo`030000003oool0oooo00h0oooo00<000000?ooo`000000
403oool01@000000oooo0?ooo`3oool0000000/0oooo00D000000?ooo`3oool0oooo0000000A0?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool01@3oool01@000000oooo0?ooo`3oool0
000000<0oooo00@000000?ooo`3oool0oooo0P00000:0?ooo`030000003oool0oooo00`0oooo000l
0?ooo`030000003oool0oooo06P0oooo00<000000?ooo`0000000P00000n0?ooo`8000003`3oool0
0`000000oooo0000000@0?ooo`050000003oool0oooo0?ooo`0000002`3oool01@000000oooo0?oo
o`3oool000000140oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`050?ooo`050000
003oool0oooo0?ooo`0000000`3oool010000000oooo0?ooo`3oool2000000X0oooo00<000000?oo
o`3oool0303oool003`0oooo00<000000?ooo`3oool0J@3oool010000000oooo0?ooo`3oool30000
03/0oooo0P00000?0?ooo`030000003oool000000100oooo00D000000?ooo`3oool0oooo0000000;
0?ooo`050000003oool0oooo0?ooo`0000004@3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo00D0oooo00D000000?ooo`3oool0oooo000000030?ooo`040000003oool0oooo0?ooo`80
00002P3oool00`000000oooo0?ooo`0<0?ooo`00?03oool00`000000oooo0?ooo`1`0?ooo`800000
>03oool010000000oooo0?ooo`00000>0?ooo`030000003oool000000100oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`080?ooo`050000003oool0oooo0?ooo`0000004@3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00D0oooo00D000000?ooo`3oool0oooo00000002
0?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?oo
o`030000003oool0oooo0780oooo0P00000=0?ooo`030000003oool0oooo02H0oooo00@000000?oo
o`3oool000003P3oool00`000000oooo000000070?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`080?ooo`050000003oool0oooo0?ooo`0000004@3o
ool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00D0oooo00D000000?ooo`3oool0oooo
000000020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo
000l0?ooo`030000003oool0oooo07@0oooo0`0000090?ooo`030000003oool0000000H0oooo00<0
00000?ooo`3oool0303oool00`000000oooo0?ooo`090?ooo`800000103oool01@000000oooo0?oo
o`3oool0000000d0oooo00<000000?ooo`0000001`3oool00`000000oooo0?ooo`030?ooo`040000
003oool0oooo000000@0oooo00<000000?ooo`3oool0203oool01@000000oooo0?ooo`3oool00000
0140oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`050?ooo`050000003oool0oooo
0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;
0?ooo`00?03oool00`000000oooo0?ooo`1g0?ooo`<000001P3oool010000000oooo0?ooo`000005
0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0203oool010000000oooo0?ooo`00
00030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool02P3oool00`000000oooo0000
00070?ooo`030000003oool0oooo00<0oooo00<000000?ooo`0000001@3oool00`000000oooo0?oo
o`080?ooo`050000003oool0oooo0?ooo`000000403oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00D0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080
oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo07X0oooo
0`0000020?ooo`030000003oool0oooo0080oooo00L000000?ooo`3oool0oooo0000003oool00000
00<0oooo00<000000?ooo`3oool01`3oool010000000oooo0?ooo`0000070?ooo`040000003oool0
oooo00000080oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`090?ooo`030000003o
ool0000000L0oooo0P0000040?ooo`030000003oool0000000D0oooo00<000000?ooo`3oool0203o
ool01@000000oooo0?ooo`3oool000000100oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`050?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`80
00002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool2000007h0oooo0P0000060?ooo`060000
003oool0oooo0000003oool000000P3oool00`000000oooo000000080?ooo`80000000<0oooo0000
003oool01@3oool00`000000oooo0?ooo`020?ooo`030000003oool0000000H0oooo00<000000?oo
o`3oool02@3oool010000000oooo0?ooo`0000060?ooo`800000103oool00`000000oooo00000005
0?ooo`030000003oool0oooo00@0oooo00D000000?ooo`3oool0oooo000000030?ooo`030000003o
ool0oooo00h0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`040?ooo`050000003o
ool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo
0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`260?ooo`050000003oool000000?ooo`000000
0P3oool00`000000oooo0?ooo`0500000080oooo00L000000?ooo`000000oooo0000003oool00000
00@0oooo00<000000?ooo`3oool00P3oool00`000000oooo000000060?ooo`030000003oool0oooo
00T0oooo00@000000?ooo`3oool000001@3oool00`000000oooo000000040?ooo`030000003oool0
000000D0oooo00<000000?ooo`3oool0103oool01@000000oooo0?ooo`3oool0000000<0oooo00<0
00000?ooo`3oool03P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00@0oooo00D0
00000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000
003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo08H0oooo0P0000020?ooo`030000003o
ool0000000P0oooo0`0000001P3oool000000?ooo`000000oooo000000@0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo000000070?ooo`030000003oool0oooo00P0oooo00@000000?ooo`3o
ool000001@3oool00`000000oooo000000040?ooo`<000001@3oool00`000000oooo0?ooo`040?oo
o`050000003oool0oooo0?ooo`0000000`3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool0103oool01@000000oooo0?ooo`3oool000000080oooo00<0
00000?ooo`3oool00P3oool2000000/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<00000
0?ooo`3oool0Q`3oool010000000oooo0?ooo`3oool2000000X0oooo00D000000?ooo`0000000000
0?ooo`0300000080oooo00<000000?ooo`3oool00`3oool2000000P0oooo00<000000?ooo`3oool0
1`3oool01@000000oooo0?ooo`3oool0000000D0oooo00<000000?ooo`000000103oool3000000D0
oooo00<000000?ooo`3oool0103oool01@000000oooo0?ooo`3oool0000000<0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00@0oooo00D000000?oo
o`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0
oooo00/0oooo000l0?ooo`030000003oool0oooo08/0oooo00<000000?ooo`3oool0303oool00`00
0000oooo0000000200000080oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`060?oo
o`030000003oool0oooo00L0oooo00D000000?ooo`3oool0oooo000000050?ooo`040000003oool0
oooo000000<0oooo0P0000060?ooo`030000003oool0oooo00@0oooo00D000000?ooo`3oool0oooo
000000030?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0103oool00`000000oooo
0?ooo`040?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`80
00002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`2J0?ooo`050000
003oool000000?ooo`0000000P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01`3oool01@000000oooo0?ooo`3oool0000000D0oooo00@000000?oo
o`3oool000000`3oool2000000H0oooo00<000000?ooo`3oool0103oool01@000000oooo0?ooo`3o
ool0000000<0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo00@0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo
0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo09X0oooo00<0
00000?ooo`0000000P3oool00`000000oooo0000000@0?ooo`030000003oool0oooo00H0oooo00D0
00000?ooo`3oool0oooo000000050?ooo`040000003oool0oooo000000<0oooo0P0000060?ooo`03
0000003oool0oooo00@0oooo00D000000?ooo`3oool0oooo000000030?ooo`030000003oool0oooo
00d0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`040?ooo`050000003oool0oooo
0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;
0?ooo`00?03oool00`000000oooo0?ooo`2L0?ooo`060000003oool0oooo0000003oool00000403o
ool00`000000oooo0?ooo`020?ooo`<0000000<0oooo0000003oool00P3oool00`000000oooo0?oo
o`030?ooo`040000003oool0oooo000000<0oooo0P0000070?ooo`030000003oool0oooo00<0oooo
00D000000?ooo`3oool0oooo000000030?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`0000000P3oool00`00
0000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000
oooo0?ooo`2O0?ooo`030000003oool000000100oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`02000000@0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000030?oo
o`030000003oool0oooo00H0oooo00<000000?ooo`3oool00P3oool2000000<0oooo00D000000?oo
o`3oool0oooo0000000?0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0103oool0
1@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00P3oool2000000/0oooo00<0
00000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0X03oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo0080oooo00D000000?ooo`3oool0oooo000000040?ooo`050000003o
ool0oooo0?ooo`0000000`3oool01@000000oooo0?ooo`3oool0000000P0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo000000020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool0303oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00@0oooo00D000000?ooo`3o
ool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo
00/0oooo000l0?ooo`800000X@3oool00`000000oooo0?ooo`0@0?ooo`050000003oool0oooo0?oo
o`000000203oool01@000000oooo0?ooo`3oool0000000@0oooo00@000000?ooo`3oool00000203o
ool00`000000oooo0?ooo`020?ooo`030000003oool000000080oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0103o
ool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00P3oool2000000/0oooo
00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0X03oool00`000000oooo0?oo
o`0@0?ooo`040000003oool0oooo000000T0oooo00D000000?ooo`3oool0oooo000000040?ooo`04
0000003oool0oooo000000P0oooo00<000000?ooo`3oool00P3oool00`000000oooo000000020?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo00@0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0
oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo
0;<0oooo00@000000?ooo`3oool000002P3oool010000000oooo0?ooo`0000040?ooo`040000003o
ool0oooo000000P0oooo00<000000?ooo`3oool00P3oool00`000000oooo000000020?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`050?ooo`030000
003oool0oooo00@0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080
oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo0;<0oooo
00@000000?ooo`3oool000002P3oool010000000oooo0?ooo`0000040?ooo`030000003oool00000
00T0oooo00<000000?ooo`3oool00P3oool00`000000oooo000000020?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo
00@0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;
0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo0;@0oooo00<000000?oo
o`0000002P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0000000T0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo000000020?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool0103oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00P3o
ool2000000/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0]03oool0
0`000000oooo0000000:0?ooo`030000003oool0000000D0oooo00<000000?ooo`0000002P3oool0
1`000000oooo0?ooo`3oool000000?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo00<0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000
003oool0oooo00@0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080
oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo0;@0oooo
00<000000?ooo`0000002P3oool00`000000oooo000000050?ooo`030000003oool0000000X0oooo
00L000000?ooo`3oool0oooo0000003oool000000080oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`030?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01P3oool00`00
0000oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`02
0?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`002P3oool3000000D0oooo0P0000040?oo
o`@00000103oool600000080oooo100000040?ooo`H000001P3oool00`000000oooo0?ooo`2d0?oo
o`800000303oool2000000H0oooo0P00000:0?ooo`070000003oool0oooo0?ooo`000000oooo0000
00020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?oo
o`050?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0103oool01@000000oooo0?oo
o`3oool000000080oooo00<000000?ooo`3oool00P3oool2000000/0oooo00<000000?ooo`3oool0
2`3oool000T0oooo00@000000?ooo`3oool000001@3oool2000000P0oooo00<000000?ooo`3oool0
103oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0080oooo00D000000?ooo`3oool0
oooo000000060?ooo`030000003oool0oooo0;D0oooo00<000000?ooo`3oool02P3oool00`000000
oooo0?ooo`050?ooo`8000002P3oool01`000000oooo0?ooo`3oool000000?ooo`0000000P3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool01@3oool0
0`000000oooo0?ooo`060?ooo`030000003oool0oooo00@0oooo00D000000?ooo`3oool0oooo0000
00020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo0008
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`07
0?ooo`030000003oool0oooo0;D0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`05
0?ooo`8000002P3oool01`000000oooo0?ooo`3oool000000?ooo`0000000P3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00@0oooo00D000000?ooo`3oool0oooo000000020?ooo`03
0000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo00080?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`040?ooo`030000
003oool0oooo00H0oooo00<000000?ooo`3oool0103oool2000000L0oooo0`00002e0?ooo`030000
003oool0oooo0180oooo0P00000:0?ooo`090000003oool0oooo0?ooo`000000oooo0000003oool0
000000D0oooo00<000000?ooo`3oool00P3oool2000000L0oooo00<000000?ooo`3oool01P3oool0
0`000000oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?oo
o`020?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00203oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo00X0oooo0P0000070?ooo`030000003oool0oooo00@0oooo0P000008
0?ooo`8000001P3oool00`000000oooo0?ooo`3:0?ooo`8000002P3oool02@000000oooo0?ooo`3o
ool000000?ooo`000000oooo000000050?ooo`030000003oool0oooo0080oooo0P0000070?ooo`03
0000003oool0oooo00H0oooo00<000000?ooo`3oool0103oool01@000000oooo0?ooo`3oool00000
0080oooo00<000000?ooo`3oool00P3oool2000000/0oooo00<000000?ooo`3oool02`3oool000P0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo00@0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00@0
oooo00<000000?ooo`3oool0bP3oool2000000X0oooo00T000000?ooo`3oool0oooo0000003oool0
00000?ooo`0000001@3oool00`000000oooo0?ooo`020?ooo`8000001P3oool00`000000oooo0?oo
o`070?ooo`030000003oool0oooo00@0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000
003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo00090?ooo`040000003o
ool0oooo000000l0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`060?ooo`050000
003oool0oooo0?ooo`000000103oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0<X0
oooo0P00000;0?ooo`030000003oool000000080oooo00<000000?ooo`0000001@3oool00`000000
oooo0?ooo`020?ooo`8000001P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00@0
oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?oo
o`030000003oool0oooo00/0oooo00090?ooo`@000002`3oool4000000D0oooo0`0000040?ooo`@0
0000103oool5000000L0oooo00<000000?ooo`3oool0b`3oool00`000000oooo0?ooo`090?ooo`03
0000003oool000000080oooo00<000000?ooo`0000001@3oool00`000000oooo0?ooo`020?ooo`80
00001P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00@0oooo00D000000?ooo`3o
ool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo
00/0oooo000l0?ooo`030000003oool0oooo0</0oooo00<000000?ooo`3oool02@3oool00`000000
oooo000000020?ooo`030000003oool0000000D0oooo00<000000?ooo`3oool00P3oool2000000H0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`040?ooo`050000003oool0oooo0?oo
o`0000000P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;0?oo
o`00?03oool00`000000oooo0?ooo`3;0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`00
00000`3oool2000000D0oooo00<000000?ooo`3oool00P3oool2000000H0oooo00<000000?ooo`3o
ool0203oool00`000000oooo0?ooo`030?ooo`050000003oool0oooo0?ooo`0000000P3oool00`00
0000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000
oooo0?ooo`3;0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`0000000`3oool2000000D0
oooo00<000000?ooo`3oool00P3oool00`000000oooo000000050?ooo`030000003oool0oooo00P0
oooo00<000000?ooo`3oool00`3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?oo
o`3oool00P3oool2000000/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3o
ool0f03oool2000000<0oooo0P0000050?ooo`030000003oool0oooo0080oooo00<000000?ooo`00
00001@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00<0oooo00D000000?ooo`3o
ool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo
00/0oooo000l0?ooo`030000003oool0oooo0=P0oooo0P0000030?ooo`8000001@3oool00`000000
oooo0?ooo`020?ooo`030000003oool0000000D0oooo00<000000?ooo`3oool0203oool00`000000
oooo0?ooo`030?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?oo
o`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool200000=X0oooo00D000000?ooo`3o
ool0oooo000000060?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool00`3oool01@000000oooo0?ooo`3o
ool000000080oooo00<000000?ooo`3oool00P3oool2000000/0oooo00<000000?ooo`3oool02`3o
ool003`0oooo00<000000?ooo`3oool0g@3oool00`000000oooo0?ooo`040?ooo`050000003oool0
oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00T0oooo00<0
00000?ooo`3oool00`3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool0
0P3oool2000000/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0g@3o
ool00`000000oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool00`3oool01@000000oooo
0?ooo`3oool000000080oooo00<000000?ooo`3oool00P3oool2000000/0oooo00<000000?ooo`3o
ool02`3oool003`0oooo00<000000?ooo`3oool0g@3oool00`000000oooo0?ooo`040?ooo`050000
003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00T0
oooo00<000000?ooo`3oool00`3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?oo
o`3oool00P3oool2000000/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3o
ool0g@3oool00`000000oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`0000000P3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool00`3oool01@00
0000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00P3oool2000000/0oooo00<00000
0?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0i03oool01@000000oooo0?ooo`3oool0
00000080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`090?ooo`030000003oool0
oooo00<0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00
000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo0>@0oooo00D00000
0?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool02@3o
ool00`000000oooo0?ooo`030?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo
0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?oo
o`3T0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool00`3oool01@000000oooo0?ooo`3oool000000080
oooo00<000000?ooo`3oool00P3oool2000000/0oooo00<000000?ooo`3oool02`3oool003`0oooo
00<000000?ooo`3oool0i03oool01@000000oooo0?ooo`3oool000000080oooo00D000000?ooo`3o
ool0oooo0000000<0?ooo`030000003oool0oooo00<0oooo00D000000?ooo`3oool0oooo00000002
0?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?oo
o`030000003oool0oooo0>@0oooo00D000000?ooo`3oool0oooo000000020?ooo`050000003oool0
oooo0?ooo`000000303oool00`000000oooo0?ooo`030?ooo`050000003oool0oooo0?ooo`000000
0P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03o
ool200000>D0oooo00@000000?ooo`3oool000000`3oool01@000000oooo0?ooo`3oool0000000`0
oooo00<000000?ooo`3oool00`3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?oo
o`3oool00P3oool2000000/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3o
ool0i03oool010000000oooo0?ooo`0000030?ooo`050000003oool0oooo0?ooo`000000303oool0
0`000000oooo0?ooo`030?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?oo
o`020?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`3T
0?ooo`040000003oool0oooo000000<0oooo00D000000?ooo`3oool0oooo0000000<0?ooo`030000
003oool0oooo00<0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080
oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo0>@0oooo
00@000000?ooo`3oool000000`3oool01@000000oooo0?ooo`3oool0000000`0oooo00<000000?oo
o`3oool00`3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00P3oool2
000000/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0i03oool01000
0000oooo0?ooo`0000030?ooo`050000003oool0oooo0?ooo`000000303oool00`000000oooo0?oo
o`030?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`800000
2`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`3T0?ooo`040000003o
ool0oooo000000<0oooo00D000000?ooo`3oool0oooo0000000<0?ooo`030000003oool0oooo00<0
oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?oo
o`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo0>@0oooo00@000000?ooo`3o
ool000000`3oool010000000oooo0?ooo`00000=0?ooo`030000003oool0oooo00<0oooo00D00000
0?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003o
ool0oooo00/0oooo000l0?ooo`030000003oool0oooo0>@0oooo00@000000?ooo`3oool000000`3o
ool010000000oooo0?ooo`00000=0?ooo`030000003oool0oooo00<0oooo00D000000?ooo`3oool0
oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0
oooo000l0?ooo`030000003oool0oooo0>@0oooo00@000000?ooo`3oool000000`3oool010000000
oooo0?ooo`00000=0?ooo`030000003oool0oooo00<0oooo00D000000?ooo`3oool0oooo00000002
0?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?oo
o`030000003oool0oooo0>@0oooo00@000000?ooo`3oool000000`3oool010000000oooo0?ooo`00
000=0?ooo`030000003oool0oooo00<0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000
003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`800000i@3o
ool010000000oooo0?ooo`0000030?ooo`040000003oool0oooo000000d0oooo00<000000?ooo`3o
ool00`3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00P3oool20000
00/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0i@3oool2000000@0
oooo00@000000?ooo`3oool000003@3oool00`000000oooo0?ooo`030?ooo`050000003oool0oooo
0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;
0?ooo`00?03oool00`000000oooo0?ooo`3U0?ooo`8000001@3oool00`000000oooo0000000>0?oo
o`030000003oool0oooo0080oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0
oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo
0>D0oooo0P0000050?ooo`8000003`3oool00`000000oooo0?ooo`020?ooo`050000003oool0oooo
0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;
0?ooo`00?03oool00`000000oooo0?ooo`3U0?ooo`8000001@3oool2000000l0oooo00<000000?oo
o`3oool00P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00P3oool2
000000/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0i@3oool20000
00D0oooo0P00000?0?ooo`030000003oool0oooo0080oooo00D000000?ooo`3oool0oooo00000002
0?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?oo
o`030000003oool0oooo0>D0oooo0P0000050?ooo`8000003`3oool00`000000oooo0?ooo`020?oo
o`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool0
0`000000oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`3U0?ooo`8000001@3oool20000
00l0oooo00<000000?ooo`3oool00P3oool01@000000oooo0?ooo`3oool000000080oooo00<00000
0?ooo`3oool00P3oool2000000/0oooo00<000000?ooo`3oool02`3oool000X0oooo0`0000050?oo
o`800000103oool4000000@0oooo1P0000020?ooo`@000001P3oool3000000L0oooo00<000000?oo
o`3oool0i@3oool2000000D0oooo0P00000?0?ooo`030000003oool0oooo0080oooo00D000000?oo
o`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0
oooo00/0oooo00090?ooo`040000003oool0oooo000000D0oooo0P0000080?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`040?ooo`030000003oool0
oooo00H0oooo00<000000?ooo`3oool0i@3oool2000000D0oooo0P00000?0?ooo`030000003oool0
oooo0080oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00
000;0?ooo`030000003oool0oooo00/0oooo00080?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool0303oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00H0oooo00@00000
0?ooo`3oool0oooo1@0000070?ooo`<00000i@3oool2000000D0oooo0P00000?0?ooo`030000003o
ool0oooo0080oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo
0P00000;0?ooo`030000003oool0oooo00/0oooo00080?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0303oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00H0oooo00D0
00000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0
i@3oool2000000D0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`020?ooo`050000
003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool00`000000
oooo0?ooo`0;0?ooo`00203oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00X0oooo
0P0000070?ooo`030000003oool0oooo00@0oooo0P0000050?ooo`030000003oool0000000P0oooo
00<000000?ooo`3oool0i@3oool2000000D0oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`020?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`80
00002`3oool00`000000oooo0?ooo`0;0?ooo`00203oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo00`0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`060?ooo`030000
003oool0oooo00<0oooo0P0000080?ooo`030000003oool0oooo0>D0oooo0P0000050?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool00P3oool01@000000oooo0?ooo`3oool000000080
oooo00<000000?ooo`3oool00P3oool2000000/0oooo00<000000?ooo`3oool02`3oool000T0oooo
00@000000?ooo`3oool000003`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool00`3oool2000000P0oooo00<000000?ooo`3oool0i@3oool2000000D0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`020?ooo`050000003oool0oooo0?oo
o`0000000P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;0?oo
o`002@3oool4000000/0oooo100000050?ooo`<00000103oool4000000L0oooo00<000000?ooo`3o
ool01P3oool00`000000oooo0?ooo`3U0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3o
ool00P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00P3oool20000
00/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0i@3oool00`000000
oooo0?ooo`0E0?ooo`030000003oool0oooo0080oooo00D000000?ooo`3oool0oooo000000020?oo
o`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`03
0000003oool0oooo0>D0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`020?ooo`05
0000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`8000002`3oool00`00
0000oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`3U0?ooo`030000003oool0oooo01D0
oooo00<000000?ooo`3oool00P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?oo
o`3oool00P3oool2000000/0oooo00<000000?ooo`3oool02`3oool003`0oooo00<000000?ooo`3o
ool0i@3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo0080oooo00D000000?ooo`3o
ool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo
00/0oooo000l0?ooo`800000iP3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo0080
oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00000;0?oo
o`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo0>D0oooo00<000000?ooo`3o
ool05@3oool00`000000oooo0?ooo`020?ooo`050000003oool0oooo0?ooo`0000000P3oool00`00
0000oooo0?ooo`020?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000
oooo0?ooo`3m0?ooo`030000003oool0oooo0080oooo00D000000?ooo`3oool0oooo000000020?oo
o`030000003oool0oooo0080oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`03
0000003oool0oooo0?d0oooo00D000000?ooo`3oool0oooo000000040?ooo`040000003oool0oooo
000000@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo
0?h0oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?ooo`8000002`3o
ool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`3n0?ooo`040000003oool0
oooo000000@0oooo00@000000?ooo`3oool00000103oool2000000/0oooo00<000000?ooo`3oool0
2`3oool003`0oooo00<000000?ooo`3oool0oP3oool010000000oooo0?ooo`0000040?ooo`040000
003oool0oooo000000@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000
003oool0oooo0?h0oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?oo
o`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`3n0?ooo`04
0000003oool0oooo000000@0oooo00@000000?ooo`3oool00000103oool2000000/0oooo00<00000
0?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0oP3oool010000000oooo0?ooo`000004
0?ooo`040000003oool0oooo000000@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l
0?ooo`030000003oool0oooo0?h0oooo00@000000?ooo`3oool00000103oool010000000oooo0?oo
o`0000040?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool200000?l0oooo00@0
00000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?ooo`8000002`3oool00`000000
oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`3n0?ooo`040000003oool0oooo000000@0
oooo00@000000?ooo`3oool00000103oool2000000/0oooo00<000000?ooo`3oool02`3oool003`0
oooo00<000000?ooo`3oool0oP3oool010000000oooo0?ooo`0000040?ooo`040000003oool0oooo
000000@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo
0?h0oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?ooo`8000002`3o
ool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`3n0?ooo`040000003oool0
oooo000000@0oooo00@000000?ooo`3oool00000103oool2000000/0oooo00<000000?ooo`3oool0
2`3oool003`0oooo00<000000?ooo`3oool0oP3oool010000000oooo0?ooo`0000040?ooo`040000
003oool0oooo000000@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000
003oool0oooo0?h0oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?oo
o`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`3n0?ooo`04
0000003oool0oooo000000@0oooo00@000000?ooo`3oool00000103oool2000000/0oooo00<00000
0?ooo`3oool02`3oool003`0oooo00<000000?ooo`3oool0oP3oool010000000oooo0?ooo`000004
0?ooo`040000003oool0oooo000000@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l
0?ooo`030000003oool0oooo0?h0oooo00@000000?ooo`3oool00000103oool010000000oooo0?oo
o`0000040?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00?03oool200000?l0oooo00@0
00000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?ooo`8000002`3oool00`000000
oooo0?ooo`0;0?ooo`00?03oool00`000000oooo0?ooo`3n0?ooo`040000003oool0oooo000000@0
oooo00@000000?ooo`3oool00000103oool2000000/0oooo00<000000?ooo`3oool02`3oool003`0
oooo00<000000?ooo`3oool0oP3oool010000000oooo0?ooo`0000040?ooo`040000003oool0oooo
000000@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo
0?l0oooo0P0000050?ooo`040000003oool0oooo000000@0oooo0P00000;0?ooo`030000003oool0
oooo00/0oooo000l0?ooo`030000003oool0oooo0?l0oooo0P0000050?ooo`040000003oool0oooo
000000@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000l0?ooo`030000003oool0oooo
0?l0oooo0P0000050?ooo`040000003oool0oooo000000@0oooo0P00000;0?ooo`030000003oool0
oooo00/0oooo000l0?ooo`030000003oool0oooo0?l0oooo0P0000050?ooo`040000003oool0oooo
000000@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo000:0?ooo`<000001@3oool20000
00@0oooo100000040?ooo`H000000P3oool4000000D0oooo100000070?ooo`030000003oool0oooo
0?l0oooo0P0000050?ooo`040000003oool0oooo000000@0oooo0P00000;0?ooo`030000003oool0
oooo00/0oooo00090?ooo`040000003oool0oooo000000D0oooo0P0000080?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`020?ooo`050000003oool0
oooo0?ooo`0000001P3oool00`000000oooo0?ooo`3o0?ooo`8000001@3oool010000000oooo0?oo
o`0000040?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00203oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0103oool00`000000oooo0?oo
o`060?ooo`050000003oool0oooo0?ooo`000000103oool00`000000oooo0?ooo`040?ooo`030000
003oool0oooo0?l0oooo0P0000050?ooo`040000003oool0oooo000000@0oooo0P00000;0?ooo`03
0000003oool0oooo00/0oooo00080?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
303oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00H0oooo00D000000?ooo`3oool0
oooo000000030?ooo`8000001P3oool300000?l0oooo0P0000050?ooo`040000003oool0oooo0000
00@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo00080?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool02P3oool2000000L0oooo00<000000?ooo`3oool0103oool2000000@0
oooo1@0000070?ooo`030000003oool0oooo0?l0oooo0P0000050?ooo`040000003oool0oooo0000
00@0oooo0P00000;0?ooo`030000003oool0oooo00/0oooo00080?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0?l0
oooo0P0000050?ooo`040000003oool0oooo000000@0oooo0P00000;0?ooo`030000003oool0oooo
00/0oooo00090?ooo`040000003oool0oooo000000l0oooo00<000000?ooo`3oool0103oool00`00
0000oooo0?ooo`060?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0203oool00`00
0000oooo0?ooo`3o0?ooo`8000001@3oool010000000oooo0?ooo`0000040?ooo`8000002`3oool0
0`000000oooo0?ooo`0;0?ooo`002@3oool4000000/0oooo100000050?ooo`<00000103oool40000
00H0oooo1000003o0?oooc<0oooo003o0?ooofT0oooo0000\
\>"],
  ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {1.93016, 0.312536, \
0.000204592, 6.16697*^-6}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(mynewb = \(mynewb2 = myb //. {W \[Rule] 1/8}\)\)], "Input"],

Cell[BoxData[
    \(\(-\(\(2\ \((\(-4\) + x\ \((x + Log[16])\) - 
                4\ x\ Log[
                    x])\)\)\/\(\((\(-2\) + x)\)\^3\ x\^3\)\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(W0 = \(myw = \(myneww2 = 1/8\)\)\)], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(myneww2\)\" is similar \
to existing symbol \"\!\(mynewb2\)\"."\)], "Message"],

Cell[BoxData[
    \(1\/8\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(fund2 = 
      FullSimplify[
        s2eqns[\([3]\)] //. {w1[x, y] \[Rule] myneww2, 
            D[w1[x, y], y] \[Rule] D[myneww2, y], Bp1[x, y] \[Rule] mynewb2, 
            D[w1[x, y], x] \[Rule] D[myneww2, x], 
            D[Bp1[x, y], x] \[Rule] D[mynewb2, x]}]\)], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(texfund2 = 
      fund2 //. {x \[Rule] r, y \[Rule] theta}\), "\[IndentingNewLine]", 
    \(TeXForm[texfund2]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(theta\\)\\\" is similar to existing symbol \
\\\"\\!\\(Ttheta\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(1\/\(8\ M\^4\ r\^4\)\), 
      RowBox[{"(", 
        RowBox[{\(a\^2\), " ", "C", " ", 
          RowBox[{"(", 
            
            RowBox[{\(C\ \((16\ M\^4 + 8\ M\^3\ r - 4\ M\^2\ r\^2 - 
                    2\ M\ r\^3 - r\^4)\)\ Cos[theta]\ Sin[theta]\^2\), "+", 
              RowBox[{"8", " ", \(M\^2\), " ", \(r\^2\), " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{\(-Cot[theta]\), " ", 
                      RowBox[{
                        SuperscriptBox["Ap2", 
                          TagBox[\((0, 1)\),
                            Derivative],
                          MultilineFunction->None], "[", \(r, theta\), 
                        "]"}]}], "+", 
                    RowBox[{
                      SuperscriptBox["Ap2", 
                        TagBox[\((0, 2)\),
                          Derivative],
                        MultilineFunction->None], "[", \(r, theta\), "]"}], 
                    "+", 
                    RowBox[{"2", " ", "M", " ", 
                      RowBox[{
                        SuperscriptBox["Ap2", 
                          TagBox[\((1, 0)\),
                            Derivative],
                          MultilineFunction->None], "[", \(r, theta\), 
                        "]"}]}], "+", 
                    RowBox[{"r", " ", \((\(-2\)\ M + r)\), " ", 
                      RowBox[{
                        SuperscriptBox["Ap2", 
                          TagBox[\((2, 0)\),
                            Derivative],
                          MultilineFunction->None], "[", \(r, theta\), 
                        "]"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]], "Output"],

Cell["\<\
\\frac{a^2\\,C\\,\\left( C\\,\\left( 16\\,M^4 + 8\\,M^3\\,r - 
         4\\,M^2\\,r^2 - 2\\,M\\,r^3 - r^4 \\right) \\,\\cos (\\theta)\\,
       {\\sin (\\theta)}^2 + 
      8\\,M^2\\,r^2\\,\\left( -\\left( \\cot (\\theta)\\,
            \\Muserfunction{Ap2}^{(0,1)}(r,\\theta) \\right)  + 
         \\Muserfunction{Ap2}^{(0,2)}(r,\\theta) + 
         2\\,M\\,\\Muserfunction{Ap2}^{(1,0)}(r,\\theta) + 
         r\\,\\left( -2\\,M + r \\right) \\,
          \\Muserfunction{Ap2}^{(2,0)}(r,\\theta) \\right)  \\right) }
    {8\\,M^4\\,r^4}\
\>", "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullSimplify[fund2 //. {x \[Rule] 1}]\)], "Input"],

Cell[BoxData[
    RowBox[{"-", 
      FractionBox[
        RowBox[{\(a\^2\), " ", "C", " ", 
          RowBox[{"(", 
            RowBox[{\(C\ Cos[y]\ Sin[y]\^2\), "+", 
              RowBox[{"2", " ", \(Cot[y]\), " ", 
                RowBox[{
                  SuperscriptBox["Ap2", 
                    TagBox[\((0, 1)\),
                      Derivative],
                    MultilineFunction->None], "[", \(1, y\), "]"}]}], "-", 
              RowBox[{"2", " ", 
                RowBox[{
                  SuperscriptBox["Ap2", 
                    TagBox[\((0, 2)\),
                      Derivative],
                    MultilineFunction->None], "[", \(1, y\), "]"}]}], "-", 
              RowBox[{"4", " ", "M", " ", 
                RowBox[{
                  SuperscriptBox["Ap2", 
                    TagBox[\((1, 0)\),
                      Derivative],
                    MultilineFunction->None], "[", \(1, y\), "]"}]}]}], 
            ")"}]}], \(8\ M\^4\)]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(fund1 = 
      FullSimplify[
        s2eqns[\([3]\)] //. {w1[x, y] \[Rule] myw, 
            D[w1[x, y], x] \[Rule] D[myw, x], 
            D[w1[x, y], y] \[Rule] D[myw, y], Bp1[x, y] \[Rule] mynewb, 
            D[Bp1[x, y], x] \[Rule] D[mynewb, x], 
            D[Bp1[x, y], y] \[Rule] D[mynewb, y]}]\)], "Input"],

Cell[BoxData[
    RowBox[{\(1\/\(32\ M\^4\ x\^4\)\), 
      RowBox[{"(", 
        RowBox[{\(a\^2\), " ", "C", " ", 
          RowBox[{"(", 
            
            RowBox[{\(\(-4\)\ C\ \((\(-1\) + 
                    x\ \((\(-1\) + x + x\^2 + x\^3)\))\)\ Cos[y]\ Sin[y]\^2\),
               "+", 
              RowBox[{"8", " ", \(x\^2\), " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{\(-Cot[y]\), " ", 
                      RowBox[{
                        SuperscriptBox["Ap2", 
                          TagBox[\((0, 1)\),
                            Derivative],
                          MultilineFunction->None], "[", \(x, y\), "]"}]}], 
                    "+", 
                    RowBox[{
                      SuperscriptBox["Ap2", 
                        TagBox[\((0, 2)\),
                          Derivative],
                        MultilineFunction->None], "[", \(x, y\), "]"}], "+", 
                    RowBox[{"2", " ", "M", " ", 
                      RowBox[{"(", 
                        RowBox[{
                          RowBox[{
                            SuperscriptBox["Ap2", 
                              TagBox[\((1, 0)\),
                                Derivative],
                              MultilineFunction->None], "[", \(x, y\), "]"}], 
                          "+", 
                          RowBox[{\((\(-1\) + x)\), " ", "x", " ", 
                            RowBox[{
                              SuperscriptBox["Ap2", 
                                TagBox[\((2, 0)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(x, y\), 
                              "]"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
        ")"}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(texfund1 = fund1 //. {x \[Rule] r, y \[Rule] theta}\)], "Input"],

Cell[BoxData[
    RowBox[{\(1\/\(8\ M\^4\ r\^4\)\), 
      RowBox[{"(", 
        RowBox[{\(a\^2\), " ", "C", " ", 
          RowBox[{"(", 
            
            RowBox[{\(C\ \((16\ M\^4 + 8\ M\^3\ r + 4\ M\^2\ r\^2 + 
                    2\ M\ r\^3 + r\^4)\)\ Cos[theta]\ Sin[theta]\^2\), "+", 
              RowBox[{"2", " ", \(r\^2\), " ", 
                RowBox[{"(", 
                  
                  RowBox[{\(\(-4\)\ C\ \((4\ M\^2 + 2\ M\ r + r\^2)\)\ Cos[
                        theta]\ Sin[theta]\^2\ W[theta]\), "-", 
                    RowBox[{
                    "C", " ", \((4\ M\^2 + 2\ M\ r + r\^2)\), 
                      " ", \(Sin[theta]\^3\), " ", 
                      RowBox[{
                        SuperscriptBox["W", "\[Prime]",
                          MultilineFunction->None], "[", "theta", "]"}]}], 
                    "+", 
                    RowBox[{"4", " ", \(M\^2\), " ", 
                      RowBox[{"(", 
                        RowBox[{
                          RowBox[{\(-Cot[theta]\), " ", 
                            RowBox[{
                              SuperscriptBox["Ap2", 
                                TagBox[\((0, 1)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(r, theta\), 
                              "]"}]}], "+", 
                          RowBox[{
                            SuperscriptBox["Ap2", 
                              TagBox[\((0, 2)\),
                                Derivative],
                              MultilineFunction->None], "[", \(r, theta\), 
                            "]"}], "+", 
                          RowBox[{"2", " ", "M", " ", 
                            RowBox[{
                              SuperscriptBox["Ap2", 
                                TagBox[\((1, 0)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(r, theta\), 
                              "]"}]}], "+", 
                          RowBox[{"r", " ", \((\(-2\)\ M + r)\), " ", 
                            RowBox[{
                              SuperscriptBox["Ap2", 
                                TagBox[\((2, 0)\),
                                  Derivative],
                                MultilineFunction->None], "[", \(r, theta\), 
                              "]"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
        ")"}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(TeXForm[texfund1]\)], "Input"],

Cell["\<\
\\frac{a^2\\,C\\,\\left( C\\,\\left( 16\\,M^4 + 8\\,M^3\\,r + 
         4\\,M^2\\,r^2 + 2\\,M\\,r^3 + r^4 \\right) \\,\\cos (\\theta)\\,
       {\\sin (\\theta)}^2 + 
      2\\,r^2\\,\\left( -4\\,C\\,
          \\left( 4\\,M^2 + 2\\,M\\,r + r^2 \\right) \\,\\cos (\\theta)\\,
          {\\sin (\\theta)}^2\\,W(\\theta) - 
         C\\,\\left( 4\\,M^2 + 2\\,M\\,r + r^2 \\right) \\,
          {\\sin (\\theta)}^3\\,W'(\\theta) + 
         4\\,M^2\\,\\left( -\\left( \\cot (\\theta)\\,
               \\Muserfunction{Ap2}^{(0,1)}(r,\\theta) \\right)  + 
            \\Muserfunction{Ap2}^{(0,2)}(r,\\theta) + 
            2\\,M\\,\\Muserfunction{Ap2}^{(1,0)}(r,\\theta) + 
            r\\,\\left( -2\\,M + r \\right) \\,
             \\Muserfunction{Ap2}^{(2,0)}(r,\\theta) \\right) 
         \\right)  \\right) }{8\\,M^4\\,r^4}\
\>", "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullSimplify[fund1 //. {x \[Rule] 1}]\)], "Input"],

Cell[BoxData[
    RowBox[{"-", 
      FractionBox[
        RowBox[{\(a\^2\), " ", "C", " ", 
          RowBox[{"(", 
            RowBox[{\(C\ Cos[y]\ Sin[y]\^2\), "+", 
              RowBox[{"2", " ", \(Cot[y]\), " ", 
                RowBox[{
                  SuperscriptBox["Ap2", 
                    TagBox[\((0, 1)\),
                      Derivative],
                    MultilineFunction->None], "[", \(1, y\), "]"}]}], "-", 
              RowBox[{"2", " ", 
                RowBox[{
                  SuperscriptBox["Ap2", 
                    TagBox[\((0, 2)\),
                      Derivative],
                    MultilineFunction->None], "[", \(1, y\), "]"}]}], "-", 
              RowBox[{"4", " ", "M", " ", 
                RowBox[{
                  SuperscriptBox["Ap2", 
                    TagBox[\((1, 0)\),
                      Derivative],
                    MultilineFunction->None], "[", \(1, y\), "]"}]}]}], 
            ")"}]}], \(8\ M\^4\)]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ find\ bz\ solution\ *) \)\(\[IndentingNewLine]\)\(myap1 = 
      AX[x]*AY[y]\[IndentingNewLine]
    fund1bz = 
      FullSimplify[\(1/myap1\)/Sin[y]*fund1 //. {W[y] \[Rule] W0, 
            D[W[y], y] \[Rule] 0, Ap2[x, y] \[Rule] myap1, 
            D[Ap2[x, y], x] \[Rule] D[myap1, x], 
            D[D[Ap2[x, y], x], x] \[Rule] D[D[myap1, x], x], 
            D[Ap2[x, y], y] \[Rule] D[myap1, y], 
            D[D[Ap2[x, y], y], y] \[Rule] 
              D[D[myap1, y], y]}]\[IndentingNewLine]
    Collect[Collect[fund1bz, AX], AY]\[IndentingNewLine] (*\ 
      for\ comparison\ *) \[IndentingNewLine]
    D[\((1 - 2  M/r)\)*D[f[r, h], r], r]\[IndentingNewLine]
    1/r^2*D[1/Sin[h]*D[f[r, h], h], h]\[IndentingNewLine]
    \)\)\)], "Input"],

Cell[BoxData[
    \(AX[x]\ AY[y]\)], "Output"],

Cell[BoxData[
    FractionBox[
      RowBox[{\(a\^2\), " ", "C", " ", \(Csc[y]\), " ", 
        RowBox[{"(", 
          
          RowBox[{\(\(-C\)\ \((\(-1\) + 
                  x\ \((\(-1\) + x + x\^2 + x\^3)\))\)\ Cos[y]\ Sin[y]\^2\), 
            "+", 
            RowBox[{"2", " ", \(x\^2\), " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"2", " ", "M", " ", \(AY[y]\), " ", 
                    RowBox[{"(", 
                      RowBox[{
                        RowBox[{
                          SuperscriptBox["AX", "\[Prime]",
                            MultilineFunction->None], "[", "x", "]"}], "+", 
                        RowBox[{\((\(-1\) + x)\), " ", "x", " ", 
                          RowBox[{
                            SuperscriptBox["AX", "\[Prime]\[Prime]",
                              MultilineFunction->None], "[", "x", "]"}]}]}], 
                      ")"}]}], "+", 
                  RowBox[{\(AX[x]\), " ", 
                    RowBox[{"(", 
                      RowBox[{
                        RowBox[{\(-Cot[y]\), " ", 
                          RowBox[{
                            SuperscriptBox["AY", "\[Prime]",
                              MultilineFunction->None], "[", "y", "]"}]}], 
                        "+", 
                        RowBox[{
                          SuperscriptBox["AY", "\[Prime]\[Prime]",
                            MultilineFunction->None], "[", "y", "]"}]}], 
                      ")"}]}]}], ")"}]}]}], ")"}]}], \(8\ M\^4\ x\^4\ AX[
          x]\ AY[y]\)]], "Output"],

Cell[BoxData[
    FractionBox[
      RowBox[{\(a\^2\), " ", "C", " ", \(Csc[y]\), " ", 
        RowBox[{"(", 
          
          RowBox[{\(\(-C\)\ \((\(-1\) + 
                  x\ \((\(-1\) + x + x\^2 + x\^3)\))\)\ Cos[y]\ Sin[y]\^2\), 
            "+", 
            RowBox[{"2", " ", \(x\^2\), " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"2", " ", "M", " ", \(AY[y]\), " ", 
                    RowBox[{"(", 
                      RowBox[{
                        RowBox[{
                          SuperscriptBox["AX", "\[Prime]",
                            MultilineFunction->None], "[", "x", "]"}], "+", 
                        RowBox[{\((\(-1\) + x)\), " ", "x", " ", 
                          RowBox[{
                            SuperscriptBox["AX", "\[Prime]\[Prime]",
                              MultilineFunction->None], "[", "x", "]"}]}]}], 
                      ")"}]}], "+", 
                  RowBox[{\(AX[x]\), " ", 
                    RowBox[{"(", 
                      RowBox[{
                        RowBox[{\(-Cot[y]\), " ", 
                          RowBox[{
                            SuperscriptBox["AY", "\[Prime]",
                              MultilineFunction->None], "[", "y", "]"}]}], 
                        "+", 
                        RowBox[{
                          SuperscriptBox["AY", "\[Prime]\[Prime]",
                            MultilineFunction->None], "[", "y", "]"}]}], 
                      ")"}]}]}], ")"}]}]}], ")"}]}], \(8\ M\^4\ x\^4\ AX[
          x]\ AY[y]\)]], "Output"],

Cell[BoxData[
    RowBox[{
      FractionBox[
        RowBox[{"2", " ", "M", " ", 
          RowBox[{
            SuperscriptBox["f", 
              TagBox[\((1, 0)\),
                Derivative],
              MultilineFunction->None], "[", \(r, h\), "]"}]}], \(r\^2\)], 
      "+", 
      RowBox[{\((1 - \(2\ M\)\/r)\), " ", 
        RowBox[{
          SuperscriptBox["f", 
            TagBox[\((2, 0)\),
              Derivative],
            MultilineFunction->None], "[", \(r, h\), "]"}]}]}]], "Output"],

Cell[BoxData[
    FractionBox[
      RowBox[{
        RowBox[{\(-Cot[h]\), " ", \(Csc[h]\), " ", 
          RowBox[{
            SuperscriptBox["f", 
              TagBox[\((0, 1)\),
                Derivative],
              MultilineFunction->None], "[", \(r, h\), "]"}]}], "+", 
        RowBox[{\(Csc[h]\), " ", 
          RowBox[{
            SuperscriptBox["f", 
              TagBox[\((0, 2)\),
                Derivative],
              MultilineFunction->None], "[", \(r, h\), 
            "]"}]}]}], \(r\^2\)]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(DSolve[
      0 == \(-Cot[h]\)\ Csc[h]\ D[f[r, h], h] + Csc[h]\ D[D[f[r, h], h], h], 
      f[r, h], h]\), "\[IndentingNewLine]", 
    \(fpart[x_, y_] := CONST*Sin[y]^2*Cos[y]\), "\[IndentingNewLine]", 
    \(CONSTsol = \(Solve[
          0 \[Equal] 
            6*C*Sin[y]^2*Cos[y] - Cot[y]\ D[fpart[x, y], y] + \ 
              D[D[fpart[x, y], y], y], CONST]\)[\([1]\)]\)}], "Input"],

Cell[BoxData[
    \({{f[r, h] \[Rule] C[2] - C[1]\ Cos[h]}}\)], "Output"],

Cell[BoxData[
    \({CONST \[Rule] C}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(sol1Ybz = \(myAY = 
        fpart[x, y] //. CONSTsol\)\), "\[IndentingNewLine]", 
    \(fund1myR = 
      FullSimplify[
          fund1bz //. {AY[y] \[Rule] myAY, D[AY[y], y] \[Rule] D[myAY, y], 
              D[D[AY[y], y], y] \[Rule] D[D[myAY, y], y]}]/\((a^2*C*
            Csc[y]/\((AX[x]*M^4)\))\)\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \(C\ Cos[y]\ Sin[y]\^2\)], "Output"],

Cell[BoxData[
    FractionBox[
      RowBox[{"1", "-", \(x\ \((\(-1\) + x + x\^2 + x\^3)\)\), "+", 
        RowBox[{"4", " ", \(x\^2\), " ", 
          RowBox[{"(", 
            RowBox[{\(\(-3\)\ AX[x]\), "+", 
              RowBox[{"M", " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{
                      SuperscriptBox["AX", "\[Prime]",
                        MultilineFunction->None], "[", "x", "]"}], "+", 
                    RowBox[{\((\(-1\) + x)\), " ", "x", " ", 
                      RowBox[{
                        SuperscriptBox["AX", "\[Prime]\[Prime]",
                          MultilineFunction->None], "[", "x", "]"}]}]}], 
                  ")"}]}]}], ")"}]}]}], \(8\ x\^4\)]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sol1Xbz = 
      FullSimplify[\(DSolve[fund1myR \[Equal] 0, AX[x], x]\)[\([1, 1, 
            2]\)]]\)], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(sol1Xbz\)\" is similar \
to existing symbol \"\!\(sol1Ybz\)\"."\)], "Message"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(lim2m = Limit[sol1Xbz, xn \[Rule] 2]\), "\[IndentingNewLine]", 
    \(lim2m[\([1]\)]\), "\[IndentingNewLine]", 
    \(FullSimplify[
      lim2m[\([1]\)] //. {W0 \[Rule] 1/8}]\), "\[IndentingNewLine]", 
    \(myc2 = \(Solve[lim2m[\([1]\)] \[Equal] 0, 
          C[2]]\)[\([1]\)]\), "\[IndentingNewLine]", 
    \(new1sol1Xbz = sol1Xbz //. myc2\)}], "Input"],

Cell[BoxData[
    \(DirectedInfinity[35 + 56\ W0 - 12\ C[2] + Log[64]]\)], "Output"],

Cell[BoxData[
    \(35 + 56\ W0 - 12\ C[2] + Log[64]\)], "Output"],

Cell[BoxData[
    \(6\ \((7 - 2\ C[2] + Log[2])\)\)], "Output"],

Cell[BoxData[
    \({C[2] \[Rule] 1\/12\ \((35 + 56\ W0 + Log[64])\)}\)], "Output"],

Cell[BoxData[
    \(\(\(1\/\(144\ xn\)\)\((48 + 
        xn\ \((106 - xn\^3\ \((31 + 904\ W0 - 144\ C[1] + 108\ Log[2])\) + 
              72\ xn\ \((4 + 4\ W0 + 
                    1\/12\ \((\(-35\) - 56\ W0 - Log[64])\))\) - 
              2\ \((35 + 56\ W0 + Log[64])\) + 
              9\ xn\^2\ \((\(-49\) + 72\ W0 - 24\ C[1] + 18\ Log[2] + 
                    4\/3\ \((35 + 56\ W0 + Log[64])\))\))\) + 
        3\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[64]\ Log[\(-2\) + xn] + 
        3\ xn\ Log[
            xn]\ \((4 + 
              xn\ \((12 + 
                    xn\ \((\(-129\) + 56\ W0\ \((\(-3\) + 2\ xn)\) + 
                          3\ \((35 + 56\ W0 + Log[64])\) + 
                          xn\ \((70 - 
                                2\ \((35 + 56\ W0 + Log[64])\))\))\))\) + 
              3\ xn\^2\ \((\(-3\) + 2\ xn)\)\ \((\(-2\)\ Log[2 - xn] + 
                    Log[4\ xn])\))\) + 
        18\ \((3 - 2\ xn)\)\ xn\^3\ PolyLog[2, xn\/2])\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(myc1 = \(Solve[
          FullSimplify[Limit[new1sol1Xbz, xn \[Rule] 2]] \[Equal] HORC, 
          C[1]]\)[\([1]\)]\)], "Input"],

Cell[BoxData[
    \({C[1] \[Rule] 
        1\/72\ \((29 + 36\ HORC + 3\ \[Pi]\^2 + 540\ W0 + 54\ Log[2] + 
              18\ \[ImaginaryI]\ \[Pi]\ Log[2] - 9\ Log[2]\^2)\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(new2sol1Xbz = FullSimplify[new1sol1Xbz //. myc1]\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(144\ xn\)\)\((48 + 
        xn\ \((36 + 
              4\ W0\ \((\(-2\) + xn)\)\ \((14 + xn\ \((13 + 44\ xn)\))\) - 
              2\ Log[64] + 
              3\ xn\ \((26 - 2\ Log[64] + 
                    xn\ \((\(-36\) + 9\ xn + 
                          12\ HORC\ \((\(-3\) + 2\ xn)\) + \((\(-3\) + 
                                2\ xn)\)\ \((\[Pi]\^2 + 
                                6\ \[ImaginaryI]\ \[Pi]\ Log[2] - 
                                3\ Log[2]\^2)\) + 4\ Log[64])\))\))\) + 
        3\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[64]\ Log[\(-2\) + xn] + 
        3\ xn\ Log[
            xn]\ \((4 + 12\ \((1 - 2\ xn)\)\ xn + 
              3\ xn\^2\ \((\(-3\) + 2\ xn)\)\ \((\(-2\)\ Log[2 - xn] + 
                    Log[xn])\))\) + 
        18\ \((3 - 2\ xn)\)\ xn\^3\ PolyLog[2, xn\/2])\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ check\ *) \)\(\[IndentingNewLine]\)\(FullSimplify[
      Limit[new2sol1Xbz, xn \[Rule] 2]]\)\)\)], "Input"],

Cell[BoxData[
    \(HORC\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullSimplify[Limit[new2sol1Xbz, xn \[Rule] Infinity]]\)], "Input"],

Cell[BoxData[
    \(Indeterminate\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Plot[Re[Log[\((\(-2\) + xn)\)\^2]], {xn, \(-5\), 5}]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.0952381 0.47033 0.0341714 [
[.11905 .45783 -6 -9 ]
[.11905 .45783 6 0 ]
[.30952 .45783 -6 -9 ]
[.30952 .45783 6 0 ]
[.69048 .45783 -3 -9 ]
[.69048 .45783 3 0 ]
[.88095 .45783 -3 -9 ]
[.88095 .45783 3 0 ]
[.4875 .04319 -30 -4.5 ]
[.4875 .04319 0 4.5 ]
[.4875 .12862 -18 -4.5 ]
[.4875 .12862 0 4.5 ]
[.4875 .21404 -24 -4.5 ]
[.4875 .21404 0 4.5 ]
[.4875 .29947 -12 -4.5 ]
[.4875 .29947 0 4.5 ]
[.4875 .3849 -24 -4.5 ]
[.4875 .3849 0 4.5 ]
[.4875 .55576 -18 -4.5 ]
[.4875 .55576 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.11905 .47033 m
.11905 .47658 L
s
[(-4)] .11905 .45783 0 1 Mshowa
.30952 .47033 m
.30952 .47658 L
s
[(-2)] .30952 .45783 0 1 Mshowa
.69048 .47033 m
.69048 .47658 L
s
[(2)] .69048 .45783 0 1 Mshowa
.88095 .47033 m
.88095 .47658 L
s
[(4)] .88095 .45783 0 1 Mshowa
.125 Mabswid
.16667 .47033 m
.16667 .47408 L
s
.21429 .47033 m
.21429 .47408 L
s
.2619 .47033 m
.2619 .47408 L
s
.35714 .47033 m
.35714 .47408 L
s
.40476 .47033 m
.40476 .47408 L
s
.45238 .47033 m
.45238 .47408 L
s
.54762 .47033 m
.54762 .47408 L
s
.59524 .47033 m
.59524 .47408 L
s
.64286 .47033 m
.64286 .47408 L
s
.7381 .47033 m
.7381 .47408 L
s
.78571 .47033 m
.78571 .47408 L
s
.83333 .47033 m
.83333 .47408 L
s
.07143 .47033 m
.07143 .47408 L
s
.02381 .47033 m
.02381 .47408 L
s
.92857 .47033 m
.92857 .47408 L
s
.97619 .47033 m
.97619 .47408 L
s
.25 Mabswid
0 .47033 m
1 .47033 L
s
.5 .04319 m
.50625 .04319 L
s
[(-12.5)] .4875 .04319 1 0 Mshowa
.5 .12862 m
.50625 .12862 L
s
[(-10)] .4875 .12862 1 0 Mshowa
.5 .21404 m
.50625 .21404 L
s
[(-7.5)] .4875 .21404 1 0 Mshowa
.5 .29947 m
.50625 .29947 L
s
[(-5)] .4875 .29947 1 0 Mshowa
.5 .3849 m
.50625 .3849 L
s
[(-2.5)] .4875 .3849 1 0 Mshowa
.5 .55576 m
.50625 .55576 L
s
[(2.5)] .4875 .55576 1 0 Mshowa
.125 Mabswid
.5 .06027 m
.50375 .06027 L
s
.5 .07736 m
.50375 .07736 L
s
.5 .09444 m
.50375 .09444 L
s
.5 .11153 m
.50375 .11153 L
s
.5 .1457 m
.50375 .1457 L
s
.5 .16279 m
.50375 .16279 L
s
.5 .17987 m
.50375 .17987 L
s
.5 .19696 m
.50375 .19696 L
s
.5 .23113 m
.50375 .23113 L
s
.5 .24822 m
.50375 .24822 L
s
.5 .2653 m
.50375 .2653 L
s
.5 .28239 m
.50375 .28239 L
s
.5 .31656 m
.50375 .31656 L
s
.5 .33364 m
.50375 .33364 L
s
.5 .35073 m
.50375 .35073 L
s
.5 .36782 m
.50375 .36782 L
s
.5 .40199 m
.50375 .40199 L
s
.5 .41907 m
.50375 .41907 L
s
.5 .43616 m
.50375 .43616 L
s
.5 .45324 m
.50375 .45324 L
s
.5 .48742 m
.50375 .48742 L
s
.5 .5045 m
.50375 .5045 L
s
.5 .52159 m
.50375 .52159 L
s
.5 .53867 m
.50375 .53867 L
s
.5 .0261 m
.50375 .0261 L
s
.5 .00902 m
.50375 .00902 L
s
.5 .57284 m
.50375 .57284 L
s
.5 .58993 m
.50375 .58993 L
s
.5 .60702 m
.50375 .60702 L
s
.25 Mabswid
.5 0 m
.5 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .60332 m
.06244 .59924 L
.10458 .59449 L
.14415 .58971 L
.18221 .58478 L
.22272 .5791 L
.26171 .57315 L
.30316 .56621 L
.34309 .55877 L
.3815 .55076 L
.42237 .54107 L
.46172 .53022 L
.49955 .51786 L
.53984 .50166 L
.57861 .48133 L
.59975 .46702 L
.61984 .44991 L
.62942 .43994 L
.63964 .42743 L
.65803 .39674 L
.66774 .37243 L
.67263 .35587 L
.678 .3314 L
.68081 .31396 L
.68236 .30205 L
.68382 .28845 L
.68518 .2728 L
.6859 .26284 L
.68667 .25037 L
.68731 .23781 L
.68801 .22059 L
.68926 .17249 L
.68991 .12008 L
.6906 .01472 L
.69183 .17947 L
.69251 .20752 L
.69315 .22614 L
.69385 .24203 L
.6946 .25571 L
.69595 .27509 L
.69722 .28941 L
.69961 .31011 L
.70192 .32554 L
.70447 .33926 L
.70961 .36066 L
.71438 .37585 L
.71884 .38754 L
.72888 .40827 L
.73968 .42519 L
.76085 .44965 L
Mistroke
.78095 .46683 L
.8192 .49092 L
.8599 .5097 L
.89908 .52391 L
.94071 .53635 L
.97619 .54541 L
Mfstroke
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005X0000gR000`400?l00000o`00003o/`3oool0
0`000000oooo0?ooo`2b0?ooo`00/`3oool00`000000oooo0?ooo`2b0?ooo`00/`3oool00`000000
oooo0?ooo`2b0?ooo`00/`3oool200000;<0oooo002c0?ooo`030000003oool0oooo0;80oooo002c
0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0KP3oool00;<0oooo00<000000?oo
o`3oool0@@3oool00`000000oooo0?ooo`1^0?ooo`00/`3oool00`000000oooo0?ooo`110?ooo`03
0000003oool0oooo06h0oooo002c0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0
KP3oool00;<0oooo0P0000120?ooo`030000003oool0oooo06h0oooo002c0?ooo`030000003oool0
oooo0440oooo00<000000?ooo`3oool0KP3oool00;<0oooo00<000000?ooo`3oool0@@3oool00`00
0000oooo0?ooo`1^0?ooo`00/`3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo06h0
oooo002A0?ooo`D000000P3oool5000000D0oooo0P0000050?ooo`@000001P3oool00`000000oooo
0?ooo`110?ooo`030000003oool0oooo06h0oooo002C0?ooo`030000003oool0oooo0080oooo00D0
00000?ooo`3oool0oooo000000050?ooo`800000103oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo00<0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`1^0?ooo`00T`3o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool00`3o
ool00`000000oooo0?ooo`110?ooo`030000003oool0oooo06h0oooo00280?ooo`H000001@3oool0
0`000000oooo0?ooo`040?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool00`3oool3
00000440oooo00<000000?ooo`3oool0KP3oool009<0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`0;0?ooo`@000001P3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo
06h0oooo002C0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02P3oool00`000000
oooo0?ooo`070?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0KP3oool00940oooo
0`0000040?ooo`050000003oool0oooo0?ooo`000000303oool00`000000oooo0?ooo`070?ooo`03
0000003oool0oooo0440oooo00<000000?ooo`3oool0KP3oool009<0oooo00<000000?ooo`3oool0
0`3oool3000000d0oooo1@0000050?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0
KP3oool00;<0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`1^0?ooo`00/`3oool2
00000480oooo00<000000?ooo`3oool0KP3oool00;<0oooo00<000000?ooo`3oool0@@3oool00`00
0000oooo0?ooo`1^0?ooo`00/`3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo06h0
oooo002c0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0KP3oool00;<0oooo00<0
00000?ooo`3oool0@@3oool00`000000oooo0?ooo`1^0?ooo`00/`3oool00`000000oooo0?ooo`11
0?ooo`030000003oool0oooo06h0oooo002c0?ooo`800000@P3oool00`000000oooo0?ooo`1^0?oo
o`00/`3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo06h0oooo002c0?ooo`030000
003oool0oooo0440oooo00<000000?ooo`3oool0KP3oool00;<0oooo00<000000?ooo`3oool0@@3o
ool00`000000oooo0?ooo`1^0?ooo`00/`3oool00`000000oooo0?ooo`110?ooo`030000003oool0
oooo06h0oooo002c0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0KP3oool00;<0
oooo0P0000120?ooo`030000003oool0oooo06h0oooo002c0?ooo`030000003oool0oooo0440oooo
0P00001_0?ooo`00/`3oool00`000000oooo0?ooo`110?ooo`800000K`3oool00;<0oooo00<00000
0?ooo`3oool0@@3oool2000006l0oooo002c0?ooo`030000003oool0oooo0440oooo0P00001_0?oo
o`00/`3oool00`000000oooo0?ooo`110?ooo`800000K`3oool00;<0oooo0P0000120?ooo`800000
K`3oool00;<0oooo00<000000?ooo`3oool0@@3oool2000006l0oooo002c0?ooo`030000003oool0
oooo0440oooo0P00001_0?ooo`00X@3oool5000000<0oooo100000060?ooo`030000003oool0oooo
0440oooo0P00001_0?ooo`00X`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`110?ooo`800000K`3oool00:<0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool0@@3oool2000006l0oooo002H0?ooo`H000001@3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool300000440oooo0P00
001_0?ooo`00X`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`110?ooo`800000K`3oool00:<0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool0@@3oool2000006l0oooo002Q0?ooo`<00000103oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool0@@3oool2000006l0oooo002S0?ooo`030000
003oool0oooo00<0oooo100000060?ooo`030000003oool0oooo0440oooo0P00001_0?ooo`00/`3o
ool00`000000oooo0?ooo`110?ooo`800000K`3oool00;<0oooo0P0000120?ooo`800000K`3oool0
0;<0oooo00<000000?ooo`3oool0@@3oool2000006l0oooo002c0?ooo`030000003oool0oooo0440
oooo0P00001_0?ooo`00/`3oool00`000000oooo0?ooo`110?ooo`800000K`3oool00;<0oooo00<0
00000?ooo`3oool0@@3oool2000006l0oooo002c0?ooo`030000003oool0oooo0440oooo0P00001_
0?ooo`00/`3oool200000480oooo0P00001_0?ooo`00/`3oool00`000000oooo0?ooo`110?ooo`80
0000K`3oool00;<0oooo00<000000?ooo`3oool0@@3oool2000006l0oooo002c0?ooo`030000003o
ool0oooo0440oooo0P00001_0?ooo`00/`3oool00`000000oooo0?ooo`110?ooo`800000K`3oool0
0;<0oooo00<000000?ooo`3oool0@@3oool2000006l0oooo002c0?ooo`030000003oool0oooo0440
oooo0P00001_0?ooo`00/`3oool200000480oooo0P00001_0?ooo`00/`3oool00`000000oooo0?oo
o`110?ooo`800000K`3oool00;<0oooo00<000000?ooo`3oool0@@3oool2000006l0oooo002c0?oo
o`030000003oool0oooo0440oooo0P00001_0?ooo`00/`3oool00`000000oooo0?ooo`110?ooo`80
0000K`3oool00;<0oooo00<000000?ooo`3oool0@@3oool2000006l0oooo002c0?ooo`800000@@3o
ool00`000000oooo0000001_0?ooo`00/`3oool00`000000oooo0?ooo`100?ooo`030000003oool0
000006l0oooo002c0?ooo`030000003oool0oooo0400oooo00<000000?ooo`000000K`3oool009/0
oooo00<000000?ooo`3oool0103oool2000000D0oooo100000060?ooo`030000003oool0oooo0400
oooo00<000000?ooo`000000K`3oool009/0oooo00<000000?ooo`3oool0103oool2000000@0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0400oooo
00<000000?ooo`000000K`3oool009/0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo0400oooo00<000000?ooo`000000K`3oool00900oooo1P000006
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool00`3oool300000400oooo00<00000
0?ooo`000000K`3oool009`0oooo00<000000?ooo`3oool02P3oool4000000H0oooo00<000000?oo
o`3oool0@03oool00`000000oooo0000001_0?ooo`00W@3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo00L0oooo00<000000?ooo`3oool0@03oool00`000000oooo0000001_0?ooo`00
V03oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
1`3oool00`000000oooo0?ooo`100?ooo`030000003oool0000006l0oooo002H0?ooo`H000002`3o
ool5000000D0oooo00<000000?ooo`3oool0@03oool00`000000oooo0000001_0?ooo`00/`3oool0
0`000000oooo0?ooo`100?ooo`030000003oool0000006l0oooo002c0?ooo`800000@@3oool00`00
0000oooo0000001_0?ooo`00/`3oool00`000000oooo0?ooo`100?ooo`030000003oool0000006l0
oooo002c0?ooo`030000003oool0oooo0400oooo00<000000?ooo`000000K`3oool00;<0oooo00<0
00000?ooo`3oool0@03oool00`000000oooo0000001_0?ooo`00/`3oool00`000000oooo0?ooo`10
0?ooo`030000003oool0000006l0oooo002c0?ooo`030000003oool0oooo0400oooo00<000000?oo
o`000000K`3oool00;<0oooo0P0000110?ooo`030000003oool0000006l0oooo002c0?ooo`030000
003oool0oooo0400oooo00@000000?ooo`3oool00000KP3oool00;<0oooo00<000000?ooo`3oool0
@03oool010000000oooo0?ooo`00001^0?ooo`00/`3oool00`000000oooo0?ooo`100?ooo`040000
003oool0oooo000006h0oooo002c0?ooo`030000003oool0oooo0400oooo00@000000?ooo`3oool0
0000KP3oool00;<0oooo00<000000?ooo`3oool0@03oool010000000oooo0?ooo`00001^0?ooo`00
/`3oool200000440oooo00@000000?ooo`3oool00000KP3oool00;<0oooo00<000000?ooo`3oool0
?`3oool01@000000oooo0?ooo`3oool0000006h0oooo002c0?ooo`030000003oool0oooo03l0oooo
00D000000?ooo`3oool0oooo0000001^0?ooo`00/`3oool00`000000oooo0?ooo`0o0?ooo`050000
003oool0oooo0?ooo`000000KP3oool00;<0oooo00<000000?ooo`3oool0?`3oool01@000000oooo
0?ooo`3oool0000006h0oooo002c0?ooo`030000003oool0oooo03l0oooo00D000000?ooo`3oool0
oooo0000001^0?ooo`00/`3oool200000400oooo00D000000?ooo`3oool0oooo0000001^0?ooo`00
/`3oool00`000000oooo0?ooo`0o0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
J`3oool00;<0oooo00<000000?ooo`3oool0?`3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo06/0oooo002Y0?ooo`@000001P3oool00`000000oooo0?ooo`0o0?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0J`3oool00:P0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`030?ooo`030000003oool0oooo03l0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`1[0?ooo`00[@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo03h0
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`1[0?ooo`00X03oool6000000L0oooo
00<000000?ooo`3oool00`3oool3000003h0oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`1[0?ooo`00Z@3oool4000000H0oooo00<000000?ooo`3oool0?P3oool00`000000oooo0?oo
o`040?ooo`030000003oool0oooo06X0oooo002Y0?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool0?P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo06X0oooo002Y0?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool0?P3oool00`000000oooo0?ooo`040?oo
o`030000003oool0oooo06X0oooo002Y0?ooo`D000001@3oool00`000000oooo0?ooo`0n0?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool0JP3oool00;<0oooo00<000000?ooo`3oool0
?P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo06X0oooo002c0?ooo`030000003o
ool0oooo03h0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`1Z0?ooo`00/`3oool2
000003l0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`1Z0?ooo`00/`3oool00`00
0000oooo0?ooo`0n0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0JP3oool00;<0
oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo06X0
oooo002c0?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`1Z0?ooo`00/`3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo00D0oooo00<0
00000?ooo`3oool0JP3oool00;<0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo06X0oooo002c0?ooo`800000?P3oool00`000000oooo0?ooo`060?oo
o`030000003oool0oooo06T0oooo002c0?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3o
ool01P3oool00`000000oooo0?ooo`1Y0?ooo`00/`3oool00`000000oooo0?ooo`0l0?ooo`030000
003oool0oooo00L0oooo00<000000?ooo`3oool0J@3oool00;<0oooo00<000000?ooo`3oool0?03o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo06T0oooo002c0?ooo`030000003oool0
oooo03`0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`1X0?ooo`00/`3oool00`00
0000oooo0?ooo`0l0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0J03oool00;<0
oooo0P00000l0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0J03oool00;<0oooo
00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo06P0oooo
002c0?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?oo
o`1W0?ooo`00/`3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo00X0oooo00<00000
0?ooo`3oool0I`3oool00;<0oooo00<000000?ooo`3oool0>P3oool00`000000oooo0?ooo`0;0?oo
o`030000003oool0oooo06L0oooo002c0?ooo`030000003oool0oooo03X0oooo00<000000?ooo`3o
ool0303oool00`000000oooo0?ooo`1V0?ooo`00/`3oool2000003/0oooo00<000000?ooo`3oool0
303oool00`000000oooo0?ooo`1V0?ooo`00/`3oool00`000000oooo0?ooo`0i0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool0IP3oool00;<0oooo00<000000?ooo`3oool0>@3oool0
0`000000oooo0?ooo`0>0?ooo`030000003oool0oooo06D0oooo002H0?ooo`D000001@3oool20000
00D0oooo100000060?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool03P3oool00`00
0000oooo0?ooo`1U0?ooo`00V03oool01@000000oooo0?ooo`3oool0000000D0oooo0P0000040?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0h0?oo
o`030000003oool0oooo00l0oooo00<000000?ooo`3oool0I@3oool009T0oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3o
ool03`3oool00`000000oooo0?ooo`1U0?ooo`00T03oool6000000@0oooo00<000000?ooo`3oool0
403oool00`000000oooo0?ooo`030?ooo`<00000=`3oool00`000000oooo0?ooo`0A0?ooo`030000
003oool0oooo06@0oooo002K0?ooo`030000003oool0oooo00/0oooo100000060?ooo`030000003o
ool0oooo03L0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`1T0?ooo`00W03oool0
0`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0=`3oool0
0`000000oooo0?ooo`0B0?ooo`030000003oool0oooo06<0oooo002H0?ooo`050000003oool0oooo
0?ooo`000000303oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo03H0oooo00<00000
0?ooo`3oool04`3oool00`000000oooo0?ooo`1S0?ooo`00V@3oool3000000d0oooo1@0000050?oo
o`030000003oool0oooo03H0oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`1R0?oo
o`00/`3oool00`000000oooo0?ooo`0e0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3o
ool0HP3oool00;<0oooo0P00000f0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool0
H@3oool00;<0oooo00<000000?ooo`3oool0=03oool00`000000oooo0?ooo`0G0?ooo`030000003o
ool0oooo0640oooo002c0?ooo`030000003oool0oooo03<0oooo00<000000?ooo`3oool06@3oool0
0`000000oooo0?ooo`1P0?ooo`00/`3oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo
01X0oooo00<000000?ooo`3oool0G`3oool00;<0oooo00<000000?ooo`3oool0<P3oool00`000000
oooo0?ooo`0K0?ooo`030000003oool0oooo05l0oooo002c0?ooo`030000003oool0oooo0380oooo
00<000000?ooo`3oool0703oool00`000000oooo0?ooo`1N0?ooo`00/`3oool200000380oooo00<0
00000?ooo`3oool07P3oool00`000000oooo0?ooo`1M0?ooo`00/`3oool00`000000oooo0?ooo`0`
0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0G@3oool00;<0oooo00<000000?oo
o`3oool0<03oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo05`0oooo000_0?ooo`<0
0000?P3oool5000003h0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`0<0?ooo`D0
00004@3oool00`000000oooo0?ooo`0^0?ooo`<00000:P3oool00300oooo00<000000?ooo`3oool0
?@3oool01@000000oooo0?ooo`3oool0000003h0oooo00<000000?ooo`3oool0;P3oool00`000000
oooo0?ooo`0=0?ooo`050000003oool0oooo0?ooo`0000004P3oool00`000000oooo0?ooo`0^0?oo
o`030000003oool0oooo02T0oooo000`0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3o
ool0?`3oool00`000000oooo0?ooo`0]0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3o
ool04`3oool00`000000oooo0?ooo`0^0?ooo`030000003oool0oooo02T0oooo000T0?ooo`H00000
0P3oool6000003H0oooo1P0000040?ooo`030000003oool0oooo03h0oooo0P00000^0?ooo`030000
003oool0oooo0100oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`0Y0?ooo`H00000
:P3oool002d0oooo00@000000?ooo`3oool00000@P3oool00`000000oooo0?ooo`0m0?ooo`030000
003oool0oooo02`0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0C0?ooo`030000
003oool0oooo02T0oooo00@000000?ooo`3oool00000:`3oool002d0oooo00@000000?ooo`3oool0
0000@`3oool00`000000oooo0?ooo`0l0?ooo`030000003oool0oooo02/0oooo00<000000?ooo`3o
ool0503oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo02P0oooo00@000000?ooo`3o
ool00000:`3oool002h0oooo00<000000?ooo`000000?`3oool01@000000oooo0?ooo`3oool00000
03h0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`0A0?ooo`050000003oool0oooo
0?ooo`0000005@3oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0000002/0oooo000_0?oo
o`800000@03oool3000003l0oooo00<000000?ooo`3oool0:@3oool00`000000oooo0?ooo`0C0?oo
o`<000005`3oool00`000000oooo0?ooo`0Y0?ooo`800000:`3oool00;<0oooo00<000000?ooo`3o
ool0:03oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo05D0oooo002c0?ooo`800000
:03oool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo05@0oooo002c0?ooo`030000003o
ool0oooo02H0oooo00<000000?ooo`3oool0<`3oool2000005@0oooo002c0?ooo`030000003oool0
oooo02@0oooo0P00000h0?ooo`030000003oool0oooo0540oooo002c0?ooo`030000003oool0oooo
02<0oooo00<000000?ooo`3oool0>@3oool00`000000oooo0?ooo`1@0?ooo`00/`3oool00`000000
oooo0?ooo`0R0?ooo`030000003oool0oooo03/0oooo0P00001@0?ooo`00/`3oool00`000000oooo
0?ooo`0Q0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3oool0C@3oool00;<0oooo00<0
00000?ooo`3oool0803oool00`000000oooo0?ooo`100?ooo`800000C@3oool00?l00000J0000001
0?ooo`00203oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00l0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool0303oool00`000000oooo0000000@0?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00800000303oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool03P3oool00`00
0000oooo0?ooo`070?ooo`00:`3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo0440
oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo02@0
oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0Z0?ooo`00/`3oool00`000000oooo
0?ooo`0J0?ooo`800000C@3oool00`000000oooo0?ooo`160?ooo`00/`3oool00`000000oooo0?oo
o`0I0?ooo`030000003oool0oooo04h0oooo0P0000160?ooo`00/`3oool00`000000oooo0?ooo`0G
0?ooo`800000D`3oool00`000000oooo0?ooo`130?ooo`00/`3oool2000001H0oooo0P00001F0?oo
o`800000@`3oool00;<0oooo00<000000?ooo`3oool04`3oool2000005X0oooo0P0000110?ooo`00
/`3oool00`000000oooo0?ooo`0A0?ooo`800000GP3oool2000003l0oooo002c0?ooo`030000003o
ool0oooo00l0oooo0P00001R0?ooo`800000?@3oool00;<0oooo00<000000?ooo`3oool03@3oool2
000006H0oooo0P00000k0?ooo`00/`3oool00`000000oooo0?ooo`0:0?ooo`<00000JP3oool20000
03T0oooo002c0?ooo`8000002@3oool2000006l0oooo0P00000g0?ooo`00/`3oool00`000000oooo
0?ooo`060?ooo`800000L`3oool2000003D0oooo002c0?ooo`030000003oool0oooo00<0oooo0`00
001g0?ooo`<00000<P3oool00;<0oooo00@000000?ooo`3oool0oooo0P00001m0?ooo`<00000;`3o
ool00;<0oooo00@000000?ooo`0000000000PP3oool2000002d0oooo002b0?ooo`<00000QP3oool3
000002X0oooo002^0?ooo`@0000000<0oooo000000000000R@3oool3000002L0oooo002[0?ooo`<0
00001@3oool00`000000oooo0?ooo`2;0?ooo`<00000903oool00:L0oooo100000080?ooo`030000
003oool0oooo08h0oooo1000000P0?ooo`00Y03oool3000000`0oooo00<000000?ooo`3oool0TP3o
ool4000001`0oooo002P0?ooo`@000003`3oool00`000000oooo0?ooo`2F0?ooo`@00000603oool0
09d0oooo0`00000C0?ooo`030000003oool0oooo09X0oooo1000000D0?ooo`00V@3oool4000001H0
oooo0P00002O0?ooo`@00000403oool009D0oooo1000000J0?ooo`030000003oool0oooo0:80oooo
1000000<0?ooo`00T@3oool4000001h0oooo00<000000?ooo`3oool0YP3oool3000000T0oooo002<
0?ooo`D000001`3oool5000000D0oooo0P0000050?ooo`@000001P3oool00`000000oooo0?ooo`2b
0?ooo`00Q`3oool5000000`0oooo00D000000?ooo`3oool0oooo000000050?ooo`800000103oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0/P3oool0
08<0oooo1000000B0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`2b0?ooo`00OP3oool5000001L0oooo00<000000?ooo`3oool0403oool00`000000
oooo0?ooo`030?ooo`<00000/P3oool007T0oooo1@00000M0?ooo`030000003oool0oooo00/0oooo
100000060?ooo`030000003oool0oooo0;80oooo001d0?ooo`D000008`3oool00`000000oooo0?oo
o`0:0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0/P3oool006l0oooo1@00000T
0?ooo`050000003oool0oooo0?ooo`000000303oool00`000000oooo0?ooo`070?ooo`030000003o
ool0oooo0;80oooo001Y0?ooo`H00000:P3oool3000000d0oooo1@0000050?ooo`030000003oool0
oooo0;80oooo001R0?ooo`L00000BP3oool00`000000oooo0?ooo`2b0?ooo`00G03oool600000540
oooo0P00002c0?ooo`00F03oool4000005L0oooo00<000000?ooo`3oool0/P3oool005<0oooo1@00
001K0?ooo`030000003oool0oooo0;80oooo001=0?ooo`H00000H03oool00`000000oooo0?ooo`2b
0?ooo`00A@3oool8000006H0oooo00<000000?ooo`3oool0/P3oool003/0oooo2P00001^0?ooo`03
0000003oool0oooo0;80oooo000a0?ooo`X00000N03oool200000;<0oooo000Y0?ooo`P00000PP3o
ool00`000000oooo0?ooo`2b0?ooo`008P3oool7000008X0oooo00<000000?ooo`3oool0/P3oool0
01X0oooo2000002A0?ooo`030000003oool0oooo0;80oooo000@0?ooo`X00000V@3oool00`000000
oooo0?ooo`2b0?ooo`00203oool800000:<0oooo00<000000?ooo`3oool0/P3oool00;<0oooo00<0
00000?ooo`3oool0/P3oool00;<0oooo0P00002c0?ooo`00/`3oool00`000000oooo0?ooo`2b0?oo
o`00/`3oool00`000000oooo0?ooo`2b0?ooo`00/`3oool00`000000oooo0?ooo`2b0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {-5.26186, -13.7639, \
0.0366425, 0.102125}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(new3sol1Xbz = 
      Simplify[Re[ComplexExpand[new2sol1Xbz]], {xn > 0, Im[HORC] \[Equal] 0, 
            Im[W0] \[Equal] 0}] //. {\ 
          Re[Log[\((\(-2\) + xn)\)\^2]] -> \ Log[\((\(-2\) + xn)\)\^2], 
          Re[PolyLog[2, xn\/2]] -> \((Pi^2/3 - Log[xn/2]^2/2 - 
                PolyLog[2, 2\/xn])\)}\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(288\ xn\)\)\((3\ xn\^3\ \((\(-3\) + 
              2\ xn)\)\ Log[\((\(-2\) + xn)\)\^2]\ \((Log[64] - 
              6\ Log[xn])\) + 
        2\ \((48 + 36\ xn - 112\ W0\ xn + 78\ xn\^2 - 48\ W0\ xn\^2 - 
              108\ xn\^3 - 108\ HORC\ xn\^3 - 9\ \[Pi]\^2\ xn\^3 - 
              300\ W0\ xn\^3 + 27\ xn\^4 + 72\ HORC\ xn\^4 + 
              6\ \[Pi]\^2\ xn\^4 + 176\ W0\ xn\^4 + 27\ xn\^3\ Log[2]\^2 - 
              18\ xn\^4\ Log[2]\^2 - 2\ xn\ Log[64] - 6\ xn\^2\ Log[64] + 
              12\ xn\^3\ Log[64] + 
              12\ xn\ \((1 + 3\ xn - 6\ xn\^2)\)\ Log[xn] + 
              9\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[xn]\^2 + 
              18\ \((3 - 2\ xn)\)\ xn\^3\ \((\[Pi]\^2\/3 - 
                    1\/2\ Log[xn\/2]\^2 - 
                    PolyLog[2, 2\/xn])\))\))\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(new4sol1Xbz = FullSimplify[new3sol1Xbz, {xn > 0}]\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(144\ xn\)\)\((48 + 
        xn\ \((36 + 
              4\ W0\ \((\(-2\) + xn)\)\ \((14 + xn\ \((13 + 44\ xn)\))\) + 
              3\ xn\ \((26 + 
                    xn\ \((\[Pi]\^2\ \((3 - 2\ xn)\) + 9\ \((\(-4\) + xn)\) + 
                          12\ HORC\ \((\(-3\) + 2\ xn)\))\))\) + 
              12\ \((\(-1\) - 3\ xn + 6\ xn\^2)\)\ Log[2])\) + 
        9\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[\((\(-2\) + xn)\)\^2]\ Log[
            2\/xn] + 
        6\ xn\ Log[
            xn]\ \((2 + 
              3\ xn\ \((2 + xn\ \((\(-4\) - xn\ Log[4] + Log[8])\))\) + 
              3\ xn\^2\ \((\(-3\) + 2\ xn)\)\ Log[xn])\) + 
        18\ xn\^3\ \((\(-3\) + 2\ xn)\)\ PolyLog[2, 2\/xn])\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ check\ again\ *) \)\(\[IndentingNewLine]\)\(FullSimplify[
      Limit[new4sol1Xbz, xn \[Rule] 2]]\)\)\)], "Input"],

Cell[BoxData[
    \(HORC\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(test = 
      FullSimplify[
        new4sol1Xbz //. {W0 \[Rule] 1/8}]\), "\[IndentingNewLine]", 
    \(Limit[test, xn \[Rule] Infinity]\)}], "Input"],

Cell[BoxData[
    \(\(\(1\/\(288\ xn\)\)\((\((\(-3\) + 2\ xn)\)\ \((\(-32\) + 
              xn\ \((\(-36\) + 
                    xn\ \((\(-72\) + \((49 + 72\ HORC - 
                                6\ \[Pi]\^2)\)\ xn)\))\))\) + 
        24\ xn\ \((\(-1\) - 3\ xn + 6\ xn\^2)\)\ Log[2] + 
        18\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[\((\(-2\) + xn)\)\^2]\ Log[
            2\/xn] + 
        12\ xn\ Log[
            xn]\ \((2 + 
              3\ xn\ \((2 + xn\ \((\(-4\) - xn\ Log[4] + Log[8])\))\) + 
              3\ xn\^2\ \((\(-3\) + 2\ xn)\)\ Log[xn])\) + 
        36\ xn\^3\ \((\(-3\) + 2\ xn)\)\ PolyLog[2, 2\/xn])\)\)\)], "Output"],

Cell[BoxData[
    \(DirectedInfinity[49 + 72\ HORC - 6\ \[Pi]\^2]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(liminf = 
      FullSimplify[
        Limit[new4sol1Xbz, xn \[Rule] Infinity]]\), "\[IndentingNewLine]", 
    \(liminf[\([1]\)]\), "\[IndentingNewLine]", 
    \(myHORC = \(Solve[0 == liminf[\([1]\)], 
          HORC]\)[\([1]\)]\), "\[IndentingNewLine]", 
    \(myHORC //. {W0 \[Rule] 1/8}\)}], "Input"],

Cell[BoxData[
    \(DirectedInfinity[27 + 72\ HORC - 6\ \[Pi]\^2 + 176\ W0]\)], "Output"],

Cell[BoxData[
    \(27 + 72\ HORC - 6\ \[Pi]\^2 + 176\ W0\)], "Output"],

Cell[BoxData[
    \({HORC \[Rule] 1\/72\ \((\(-27\) + 6\ \[Pi]\^2 - 176\ W0)\)}\)], "Output"],

Cell[BoxData[
    \({HORC \[Rule] 1\/72\ \((\(-49\) + 6\ \[Pi]\^2)\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(new5sol1Xbz = FullSimplify[new4sol1Xbz //. myHORC]\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(288\ xn\)\)\((96 - 9\ xn\^3\ \((15 + 8\ W0 - 16\ Log[2])\) - 
        8\ xn\ \((\(-9\) + 28\ W0 + Log[8])\) - 
        12\ xn\^2\ \((\(-13\) + 8\ W0 + Log[64])\) + 
        6\ xn\ \((4\ Log[xn] + 
              xn\ \((3\ xn\ \((\(-3\) + 
                          2\ xn)\)\ Log[\((\(-2\) + xn)\)\^2]\ Log[2\/xn] + 
                    6\ Log[xn]\ \((2 + 
                          xn\ \((\(-4\) - xn\ Log[4] + Log[8])\) + 
                          xn\ \((\(-3\) + 2\ xn)\)\ Log[xn])\))\))\) + 
        36\ xn\^3\ \((\(-3\) + 2\ xn)\)\ PolyLog[2, 2\/xn])\)\)\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \( (*\ \(check!!\)*) \)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(FullSimplify[
      Limit[new5sol1Xbz, xn \[Rule] 2]]\), "\[IndentingNewLine]", 
    \(FullSimplify[% //. {W0 \[Rule] 1/8}]\), "\[IndentingNewLine]", 
    \(Limit[new5sol1Xbz, xn \[Rule] Infinity]\), "\[IndentingNewLine]", 
    \(test = new5sol1Xbz //. {W0 \[Rule] 1/8}\), "\[IndentingNewLine]", 
    \(Limit[test, xn \[Rule] Infinity]\)}], "Input"],

Cell[BoxData[
    \(1\/72\ \((\(-27\) + 6\ \[Pi]\^2 - 176\ W0)\)\)], "Output"],

Cell[BoxData[
    \(1\/72\ \((\(-49\) + 6\ \[Pi]\^2)\)\)], "Output"],

Cell[BoxData[
    \(Divide::"infy" \(\(:\)\(\ \)\) 
      "Infinite expression \!\(1\/0\) encountered."\)], "Message"],

Cell[BoxData[
    \(Divide::"infy" \(\(:\)\(\ \)\) 
      "Infinite expression \!\(1\/0\) encountered."\)], "Message"],

Cell[BoxData[
    \(Divide::"infy" \(\(:\)\(\ \)\) 
      "Infinite expression \!\(1\/0\) encountered."\)], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Divide :: \\\"infy\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \(ComplexInfinity\)], "Output"],

Cell[BoxData[
    \(\(\(1\/\(288\ xn\)\)\((96 - 9\ xn\^3\ \((16 - 16\ Log[2])\) - 
        8\ xn\ \((\(-\(11\/2\)\) + Log[8])\) - 
        12\ xn\^2\ \((\(-12\) + Log[64])\) + 
        6\ xn\ \((4\ Log[xn] + 
              xn\ \((3\ xn\ \((\(-3\) + 
                          2\ xn)\)\ Log[\((\(-2\) + xn)\)\^2]\ Log[2\/xn] + 
                    6\ Log[xn]\ \((2 + 
                          xn\ \((\(-4\) - xn\ Log[4] + Log[8])\) + 
                          xn\ \((\(-3\) + 2\ xn)\)\ Log[xn])\))\))\) + 
        36\ xn\^3\ \((\(-3\) + 2\ xn)\)\ PolyLog[2, 2\/xn])\)\)\)], "Output"],

Cell[BoxData[
    \(Divide::"infy" \(\(:\)\(\ \)\) 
      "Infinite expression \!\(1\/0\) encountered."\)], "Message"],

Cell[BoxData[
    \(0\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(new6sol1Xbz = FullSimplify[new5sol1Xbz //. {W0 \[Rule] 1/8}]\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(144\ xn\)\)\((48 + 
        2\ xn\ \((11 - 6\ Log[2] + 
              18\ xn\ \((2 - Log[2] + xn\ \((\(-2\) + Log[4])\))\))\) + 
        9\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[\((\(-2\) + xn)\)\^2]\ Log[
            2\/xn] + 
        6\ xn\ Log[
            xn]\ \((2 + 
              3\ xn\ \((2 + xn\ \((\(-4\) - xn\ Log[4] + Log[8])\))\) + 
              3\ xn\^2\ \((\(-3\) + 2\ xn)\)\ Log[xn])\) + 
        18\ xn\^3\ \((\(-3\) + 2\ xn)\)\ PolyLog[2, 2\/xn])\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(finalsol1Xbz = 
      FullSimplify[new6sol1Xbz //. {xn \[Rule] x/M}]\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(144\ M\^3\ x\)\)\((2\ M\ \((24\ M\^3 - 
              18\ M\ x\^2\ \((\(-2\) + Log[2])\) + 
              18\ x\^3\ \((\(-2\) + Log[4])\) - 
              M\^2\ x\ \((\(-11\) + Log[64])\))\) + 
        6\ x\ Log[
            x\/M]\ \((2\ M\^3 + 6\ M\^2\ x - 3\ x\^3\ Log[4] + 
              3\ M\ x\^2\ \((\(-4\) + Log[8])\) + 
              3\ x\^2\ \((\(-3\)\ M + 2\ x)\)\ Log[x\/M])\) + 
        9\ x\^3\ \((\(-3\)\ M + 
              2\ x)\)\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] + 
        18\ x\^3\ \((\(-3\)\ M + 2\ x)\)\ PolyLog[
            2, \(2\ M\)\/x])\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(mynewb\)], "Input"],

Cell[BoxData[
    \(\(-\(\(C\ \((2\ M + x - 4\ x\ W[y])\)\)\/\(4\ x\^3\)\)\)\)], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(gammiesolution = \((\((Re[PolyLog[2, r/2]] + 1/2*Log[r]^2 + 
                  Log[r/2]*Log[1 - 2/r])\) 
              r^2 \((3 - 2*r)\)/8\ \[IndentingNewLine]\(+\ 11\)/72 - 
            Log[2]/12 + 1/\((3*r)\) + Log[r]/12 + 
            r/2*\((1 - Log[2]/2 + Log[r]/2)\)\[IndentingNewLine]\(+r^2\)/
                2*\((\(-1\) + Pi^2/4 + Log[2] + 3  Log[2]^2/8 - Log[r] - 
                  3*Log[2]*Log[r]/4)\)\[IndentingNewLine] + 
            r^3/4*\((Pi^2/3 - Log[2]^2/2 + Log[2]*Log[r])\))\) //. {r \[Rule] 
            xn}\)], "Input"],

Cell[BoxData[
    \(1\/\(3\ xn\) - Log[2]\/12 + Log[xn]\/12 + 
      1\/4\ xn\^3\ \((1 - Log[2]\/2 + 
            Log[xn]\/2)\)\ \((\(-1\) + \[Pi]\^2\/4 + 
            Log[2] + \(3\ Log[2]\^2\)\/8 - Log[xn] - 
            3\/4\ Log[2]\ Log[xn])\) + 
      1\/4\ xn\^3\ \((\[Pi]\^2\/3 - Log[2]\^2\/2 + Log[2]\ Log[xn])\) + 
      11\/576\ \((3 - 2\ xn)\)\ xn\^2\ \((Log[1 - 2\/xn]\ Log[xn\/2] + 
            Log[xn]\^2\/2 + Re[PolyLog[2, xn\/2]])\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(jonsolution = new6sol1Xbz\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(144\ xn\)\)\((48 + 
        2\ xn\ \((11 - 6\ Log[2] + 
              18\ xn\ \((2 - Log[2] + xn\ \((\(-2\) + Log[4])\))\))\) + 
        9\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[\((\(-2\) + xn)\)\^2]\ Log[
            2\/xn] + 
        6\ xn\ Log[
            xn]\ \((2 + 
              3\ xn\ \((2 + xn\ \((\(-4\) - xn\ Log[4] + Log[8])\))\) + 
              3\ xn\^2\ \((\(-3\) + 2\ xn)\)\ Log[xn])\) + 
        18\ xn\^3\ \((\(-3\) + 2\ xn)\)\ PolyLog[2, 2\/xn])\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(jonprintsolution = 
      jonsolution //. {xn \[Rule] r}\), "\[IndentingNewLine]", 
    \(TeXForm[jonprintsolution]\)}], "Input"],

Cell[BoxData[
    \(\(\(1\/\(144\ r\)\)\((48 + 
        2\ r\ \((11 - 6\ Log[2] + 
              18\ r\ \((2 - Log[2] + r\ \((\(-2\) + Log[4])\))\))\) + 
        9\ r\^3\ \((\(-3\) + 2\ r)\)\ Log[\((\(-2\) + r)\)\^2]\ Log[2\/r] + 
        6\ r\ Log[
            r]\ \((2 + 3\ r\ \((2 + r\ \((\(-4\) - r\ Log[4] + Log[8])\))\) + 
              3\ r\^2\ \((\(-3\) + 2\ r)\)\ Log[r])\) + 
        18\ r\^3\ \((\(-3\) + 2\ r)\)\ PolyLog[2, 2\/r])\)\)\)], "Output"],

Cell["\<\
\\frac{48 + 2\\,r\\,\\left( 11 - 6\\,\\log (2) + 
       18\\,r\\,\\left( 2 - \\log (2) + 
          r\\,\\left( -2 + \\log (4) \\right)  \\right)  \\right)  + 
    9\\,r^3\\,\\left( -3 + 2\\,r \\right) \\,
     \\log ({\\left( -2 + r \\right) }^2)\\,\\log (\\frac{2}{r}) + 
    6\\,r\\,\\log (r)\\,\\left( 2 + 
       3\\,r\\,\\left( 2 + r\\,
           \\left( -4 - \\Mfunction{r}\\,\\log (4) + \\log (8) \\right) 
          \\right)  + 3\\,r^2\\,\\left( -3 + 2\\,r \\right) \\,\\log (r)
       \\right)  + 18\\,r^3\\,\\left( -3 + 2\\,r \\right) \\,
     \\Mfunction{PolyLog}(2,\\frac{2}{r})}{144\\,r}\
\>", "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Limit[gammiesolution, xn \[Rule] 2]\)], "Input"],

Cell[BoxData[
    \(1\/864\ \((\(-1584\) + 997\ \[Pi]\^2 + 183\ Log[2]\^2)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Series[gammiesolution, {xn, Infinity, 3}]\), "\[IndentingNewLine]", 
    \(Series[jonsolution, {xn, Infinity, 3}]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(\[Infinity]::"indet"\), \(\(:\)\(\ \)\), "\<\"Indeterminate \
expression \\!\\(ComplexInfinity\\^0\\) encountered. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::indet\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(\[Infinity]::"indet"\), \(\(:\)\(\ \)\), "\<\"Indeterminate \
expression \\!\\(0\\\\ \\(\\((\\(-\[Infinity]\\))\\)\\)\\) encountered. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::indet\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(\[Infinity]::"indet"\), \(\(:\)\(\ \)\), "\<\"Indeterminate \
expression \\!\\(0\\\\ ComplexInfinity\\) encountered. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::indet\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(\[Infinity] :: \\\"indet\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{\(Indeterminate\/\((1\/xn)\)\^3\), 
        "+", \(Indeterminate\/\((1\/xn)\)\^2\), 
        "+", \(\(\(11\ Log[2]\)\/288 + 11\/288\ Log[1\/xn]\)\/\(1\/xn\)\), 
        "+", \((\(-\(\(61\ Log[2]\)\/864\)\) - 61\/864\ Log[1\/xn])\), 
        "+", \(1\/\(3\ xn\)\), 
        "+", \(\((\(-\(\(11\ Log[2]\)\/720\)\) - 
              11\/720\ Log[1\/xn])\)\ \((1\/xn)\)\^2\), 
        "+", \(\((\(-\(\(11\ Log[2]\)\/270\)\) - 
              11\/270\ Log[1\/xn])\)\ \((1\/xn)\)\^3\), "+", 
        InterpretationBox[\(O[1\/xn]\^4\),
          SeriesData[ xn, 
            DirectedInfinity[ 1], {}, -3, 4, 1],
          Editable->False]}],
      SeriesData[ xn, 
        DirectedInfinity[ 1], {Indeterminate, Indeterminate, 
        Plus[ 
          Times[ 
            Rational[ 11, 288], 
            Log[ 2]], 
          Times[ 
            Rational[ 11, 288], 
            Log[ 
              Power[ xn, -1]]]], 
        Plus[ 
          Times[ 
            Rational[ -61, 864], 
            Log[ 2]], 
          Times[ 
            Rational[ -61, 864], 
            Log[ 
              Power[ xn, -1]]]], 
        Rational[ 1, 3], 
        Plus[ 
          Times[ 
            Rational[ -11, 720], 
            Log[ 2]], 
          Times[ 
            Rational[ -11, 720], 
            Log[ 
              Power[ xn, -1]]]], 
        Plus[ 
          Times[ 
            Rational[ -11, 270], 
            Log[ 2]], 
          Times[ 
            Rational[ -11, 270], 
            Log[ 
              Power[ xn, -1]]]]}, -3, 4, 1],
      Editable->False]], "Output"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{\(\(\(-\(1\/4\)\)\ Log[2]\ Log[1\/xn] + 
              1\/8\ Log[4]\ Log[1\/xn]\)\/\((1\/xn)\)\^3\), 
        "+", \(\(\(-\(Log[2]\/2\)\) + Log[4]\/4 + 3\/8\ Log[2]\ Log[1\/xn] - 
              1\/8\ Log[8]\ Log[1\/xn]\)\/\((1\/xn)\)\^2\), 
        "+", \(1\/\(4\ xn\)\), 
        "+", \(\((\(-\(11\/200\)\) - Log[2]\/10 - 
              1\/10\ Log[1\/xn])\)\ \((1\/xn)\)\^2\), 
        "+", \(\((\(-\(8\/225\)\) - \(4\ Log[2]\)\/15 - 
              4\/15\ Log[1\/xn])\)\ \((1\/xn)\)\^3\), "+", 
        InterpretationBox[\(O[1\/xn]\^4\),
          SeriesData[ xn, 
            DirectedInfinity[ 1], {}, -3, 4, 1],
          Editable->False]}],
      SeriesData[ xn, 
        DirectedInfinity[ 1], {
        Plus[ 
          Times[ 
            Rational[ -1, 4], 
            Log[ 2], 
            Log[ 
              Power[ xn, -1]]], 
          Times[ 
            Rational[ 1, 8], 
            Log[ 4], 
            Log[ 
              Power[ xn, -1]]]], 
        Plus[ 
          Times[ 
            Rational[ -1, 2], 
            Log[ 2]], 
          Times[ 
            Rational[ 1, 4], 
            Log[ 4]], 
          Times[ 
            Rational[ 3, 8], 
            Log[ 2], 
            Log[ 
              Power[ xn, -1]]], 
          Times[ 
            Rational[ -1, 8], 
            Log[ 8], 
            Log[ 
              Power[ xn, -1]]]], 0, 0, 
        Rational[ 1, 4], 
        Plus[ 
          Rational[ -11, 200], 
          Times[ 
            Rational[ -1, 10], 
            Log[ 2]], 
          Times[ 
            Rational[ -1, 10], 
            Log[ 
              Power[ xn, -1]]]], 
        Plus[ 
          Rational[ -8, 225], 
          Times[ 
            Rational[ -4, 15], 
            Log[ 2]], 
          Times[ 
            Rational[ -4, 15], 
            Log[ 
              Power[ xn, -1]]]]}, -3, 4, 1],
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Plot[jonsolution, {xn, 2, 100}]\), "\[IndentingNewLine]", 
    \(Plot[gammiesolution, {xn, 2, 10}]\)}], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.00952381 0.0147151 4.14769 [
[.21429 .00222 -6 -9 ]
[.21429 .00222 6 0 ]
[.40476 .00222 -6 -9 ]
[.40476 .00222 6 0 ]
[.59524 .00222 -6 -9 ]
[.59524 .00222 6 0 ]
[.78571 .00222 -6 -9 ]
[.78571 .00222 6 0 ]
[.97619 .00222 -9 -9 ]
[.97619 .00222 9 0 ]
[.01131 .09767 -24 -4.5 ]
[.01131 .09767 0 4.5 ]
[.01131 .18062 -24 -4.5 ]
[.01131 .18062 0 4.5 ]
[.01131 .26358 -24 -4.5 ]
[.01131 .26358 0 4.5 ]
[.01131 .34653 -24 -4.5 ]
[.01131 .34653 0 4.5 ]
[.01131 .42948 -18 -4.5 ]
[.01131 .42948 0 4.5 ]
[.01131 .51244 -24 -4.5 ]
[.01131 .51244 0 4.5 ]
[.01131 .59539 -24 -4.5 ]
[.01131 .59539 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.21429 .01472 m
.21429 .02097 L
s
[(20)] .21429 .00222 0 1 Mshowa
.40476 .01472 m
.40476 .02097 L
s
[(40)] .40476 .00222 0 1 Mshowa
.59524 .01472 m
.59524 .02097 L
s
[(60)] .59524 .00222 0 1 Mshowa
.78571 .01472 m
.78571 .02097 L
s
[(80)] .78571 .00222 0 1 Mshowa
.97619 .01472 m
.97619 .02097 L
s
[(100)] .97619 .00222 0 1 Mshowa
.125 Mabswid
.07143 .01472 m
.07143 .01847 L
s
.11905 .01472 m
.11905 .01847 L
s
.16667 .01472 m
.16667 .01847 L
s
.2619 .01472 m
.2619 .01847 L
s
.30952 .01472 m
.30952 .01847 L
s
.35714 .01472 m
.35714 .01847 L
s
.45238 .01472 m
.45238 .01847 L
s
.5 .01472 m
.5 .01847 L
s
.54762 .01472 m
.54762 .01847 L
s
.64286 .01472 m
.64286 .01847 L
s
.69048 .01472 m
.69048 .01847 L
s
.7381 .01472 m
.7381 .01847 L
s
.83333 .01472 m
.83333 .01847 L
s
.88095 .01472 m
.88095 .01847 L
s
.92857 .01472 m
.92857 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
.02381 .09767 m
.03006 .09767 L
s
[(0.02)] .01131 .09767 1 0 Mshowa
.02381 .18062 m
.03006 .18062 L
s
[(0.04)] .01131 .18062 1 0 Mshowa
.02381 .26358 m
.03006 .26358 L
s
[(0.06)] .01131 .26358 1 0 Mshowa
.02381 .34653 m
.03006 .34653 L
s
[(0.08)] .01131 .34653 1 0 Mshowa
.02381 .42948 m
.03006 .42948 L
s
[(0.1)] .01131 .42948 1 0 Mshowa
.02381 .51244 m
.03006 .51244 L
s
[(0.12)] .01131 .51244 1 0 Mshowa
.02381 .59539 m
.03006 .59539 L
s
[(0.14)] .01131 .59539 1 0 Mshowa
.125 Mabswid
.02381 .03545 m
.02756 .03545 L
s
.02381 .05619 m
.02756 .05619 L
s
.02381 .07693 m
.02756 .07693 L
s
.02381 .11841 m
.02756 .11841 L
s
.02381 .13915 m
.02756 .13915 L
s
.02381 .15988 m
.02756 .15988 L
s
.02381 .20136 m
.02756 .20136 L
s
.02381 .2221 m
.02756 .2221 L
s
.02381 .24284 m
.02756 .24284 L
s
.02381 .28432 m
.02756 .28432 L
s
.02381 .30505 m
.02756 .30505 L
s
.02381 .32579 m
.02756 .32579 L
s
.02381 .36727 m
.02756 .36727 L
s
.02381 .38801 m
.02756 .38801 L
s
.02381 .40875 m
.02756 .40875 L
s
.02381 .45022 m
.02756 .45022 L
s
.02381 .47096 m
.02756 .47096 L
s
.02381 .4917 m
.02756 .4917 L
s
.02381 .53318 m
.02756 .53318 L
s
.02381 .55392 m
.02756 .55392 L
s
.02381 .57465 m
.02756 .57465 L
s
.02381 .61613 m
.02756 .61613 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.04286 .60332 m
.04506 .53969 L
.04741 .48506 L
.05165 .41041 L
.0567 .34725 L
.06129 .30488 L
.06608 .27069 L
.07128 .24157 L
.08072 .20257 L
.08568 .18696 L
.09114 .17248 L
.10219 .1495 L
.11242 .13343 L
.12201 .12147 L
.14185 .10301 L
.16001 .09092 L
.17861 .08152 L
.19892 .07358 L
.21981 .06716 L
.23876 .06243 L
.2771 .05506 L
.31637 .04954 L
.35415 .04548 L
.39433 .04209 L
.43303 .03946 L
.47024 .03736 L
.50986 .03549 L
.54799 .03396 L
.58852 .03256 L
.62757 .03139 L
.66513 .0304 L
.7051 .02947 L
.74358 .02867 L
.78058 .02798 L
.81997 .02731 L
.85789 .02674 L
.8982 .02618 L
.93704 .02568 L
.97438 .02525 L
.97619 .02523 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005X0000gR000`400?l00000o`00003oo`3ooomY
0?ooo`00o`3ooomY0?ooo`00o`3ooomY0?ooo`00o`3ooomY0?ooo`00F@3oool5000000@0oooo1000
000e0?ooo`<000000`3oool4000003@0oooo0`0000040?ooo`@00000<`3oool4000000@0oooo1000
000^0?ooo`D000000`3oool4000000@0oooo100000030?ooo`00F@3oool01@000000oooo0?ooo`3o
ool0000000<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0c0?ooo`050000003o
ool0oooo0?ooo`000000103oool00`000000oooo0?ooo`0`0?ooo`050000003oool0oooo0?ooo`00
00000P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3o
ool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo02d0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo0@000001
0?ooo`40oooo001J0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`0c0?ooo`050000003oool0oooo0?ooo`000000103oool00`000000oooo0?ooo`0`
0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo02l0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000
003oool0oooo02d0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`040000
003oool0oooo000000@0oooo0@0000010?ooo`40oooo001K0?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0_0?ooo`H000000P3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo0300oooo00D000000?ooo`3oool0oooo000000020?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`020?ooo`04
0000003oool0oooo000000@0oooo00<000000?ooo`3oool0;@3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool100000040oooo0@3oool0
05`0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo
0300oooo00@000000?ooo`3oool000000`3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo0300oooo100000030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0<03oool4
000000<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0]0?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`4000000@3o
ool10?ooo`00G@3oool01@000000oooo0?ooo`3oool0000000@0oooo00<000000?ooo`3oool0<03o
ool010000000oooo0?ooo`0000030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
<03oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
;`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3o
ool0;@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080oooo00@000000?ooo`3o
ool00000103oool100000040oooo0@3oool005T0oooo00D000000?ooo`3oool0oooo000000030?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0<@3oool00`000000oooo000000030?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`030?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`020?oo
o`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0:`3oool3000000@0oooo00<00000
0?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`4000000@3oool10?ooo`00FP3oool3
000000D0oooo1000000e0?ooo`800000103oool4000003D0oooo0`0000030?ooo`@00000<`3oool4
000000@0oooo1000000`0?ooo`030000003oool0oooo00<0oooo100000040?ooo`@000000`3oool0
0?l0ooooJ@3oool00?l0ooooJ@3oool00280oooo00<000000?ooo`3oool0o`3ooom40?ooo`008P3o
ool00`000000oooo0?ooo`3o0?oood@0oooo000R0?ooo`030000003oool0oooo0?l0ooooA03oool0
0280oooo00<000000?ooo`3oool0o`3ooom40?ooo`008P3oool00`000000oooo0?ooo`3o0?oood@0
oooo000J0?ooool00000B`0000040?ooo`008P3oool00`000000oooo0?ooo`0<0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0<0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0<0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0<0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0<0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0=0?ooo`030000003o
ool0oooo00`0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0=0?ooo`030000003o
ool0oooo00`0oooo00<000000?ooo`3oool02P3oool00280oooo00<000000?ooo`3oool0>`3oool0
0`000000oooo0?ooo`0l0?ooo`030000003oool0oooo03`0oooo00<000000?ooo`3oool0?03oool0
0`000000oooo0?ooo`0k0?ooo`030000003oool0oooo00X0oooo000R0?ooo`030000003oool0oooo
0?l0ooooA03oool00280oooo00<000000?ooo`3oool0o@3ooolj000000`0oooo000R0?ooo`030000
003oool0oooo0<X0oooo<`0000160?ooo`008P3oool00`000000oooo0?ooo`2T0?ooobH00000N@3o
ool00280oooo0P00002H0?ooo`d00000W`3oool00280oooo00<000000?ooo`3oool0OP3ooolI0000
0:`0oooo000R0?ooo`030000003oool0oooo0740oooo3@0000350?ooo`008P3oool00`000000oooo
0?ooo`1W0?ooo`X00000dP3oool00280oooo00<000000?ooo`3oool0H@3oool600000=`0oooo000R
0?ooo`030000003oool0oooo05L0oooo2P00003R0?ooo`008P3oool00`000000oooo0?ooo`1>0?oo
o`T00000k03oool00280oooo0P00001;0?ooo`@00000m@3oool00280oooo00<000000?ooo`3oool0
AP3oool400000?T0oooo000R0?ooo`030000003oool0oooo0440oooo1@00003m0?ooo`008P3oool0
0`000000oooo0?ooo`0l0?ooo`D00000o`3oool30?ooo`008P3oool00`000000oooo0?ooo`0j0?oo
o`800000o`3oool80?ooo`008P3oool00`000000oooo0?ooo`0h0?ooo`800000o`3oool:0?ooo`00
8P3oool00`000000oooo0?ooo`0e0?ooo`<00000o`3oool<0?ooo`008P3oool2000003<0oooo0`00
003o0?ooo`l0oooo000R0?ooo`030000003oool0oooo02l0oooo0`00003o0?oooa80oooo000R0?oo
o`030000003oool0oooo02d0oooo0P00003o0?oooaD0oooo0004000000D0oooo0P0000050?ooo`@0
00000`3oool5000000H0oooo00<000000?ooo`3oool0:`3oool200000?l0oooo5`3oool000@0oooo
00<000000?ooo`3oool00P3oool2000000@0oooo00<000000?ooo`3oool00P3oool010000000oooo
0?ooo`0000030?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0:@3oool200000?l0
oooo6@3oool000@0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`020?ooo`050000
003oool0oooo0?ooo`0000002@3oool00`000000oooo0?ooo`0W0?ooo`800000o`3ooolK0?ooo`00
103oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
0P3oool00`000000oooo0?ooo`060?ooo`<000009P3oool00`000000oooo0?ooo`3o0?oooa/0oooo
00040?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0903oool200000?l0oooo7P3o
ool000@0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0S0?ooo`030000003oool0
oooo0?l0oooo7P3oool000@0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`020?oo
o`040000003oool0oooo000000<0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0R
0?ooo`030000003oool0oooo0?l0oooo7`3oool000@00000303oool4000000@0oooo0`0000070?oo
o`030000003oool0oooo0240oooo00<000000?ooo`3oool0o`3ooolP0?ooo`008P3oool00`000000
oooo0?ooo`0P0?ooo`030000003oool0oooo0?l0oooo8@3oool00280oooo00<000000?ooo`3oool0
7`3oool00`000000oooo0?ooo`3o0?ooob80oooo000R0?ooo`8000007`3oool00`000000oooo0?oo
o`3o0?ooob<0oooo000R0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3oool0o`3ooolT
0?ooo`008P3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo0?l0oooo9@3oool00280
oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`3o0?ooobH0oooo000R0?ooo`030000
003oool0oooo01/0oooo00<000000?ooo`3oool0o`3ooolV0?ooo`008P3oool00`000000oooo0?oo
o`0J0?ooo`030000003oool0oooo0?l0oooo9`3oool00280oooo00<000000?ooo`3oool06@3oool0
0`000000oooo0?ooo`3o0?ooobP0oooo000R0?ooo`8000006P3oool00`000000oooo0?ooo`3o0?oo
obP0oooo000R0?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool0o`3ooolY0?ooo`00
8P3oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo0?l0oooo:P3oool00280oooo00<0
00000?ooo`3oool05`3oool00`000000oooo0?ooo`3o0?ooobX0oooo000R0?ooo`030000003oool0
oooo01H0oooo00<000000?ooo`3oool0o`3oool[0?ooo`008P3oool00`000000oooo0?ooo`0F0?oo
o`030000003oool0oooo0?l0oooo:`3oool00280oooo00<000000?ooo`3oool05@3oool00`000000
oooo0?ooo`3o0?ooob`0oooo000R0?ooo`8000005P3oool00`000000oooo0?ooo`3o0?ooob`0oooo
000R0?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool0o`3oool]0?ooo`008P3oool0
0`000000oooo0?ooo`0D0?ooo`030000003oool0oooo0?l0oooo;@3oool00280oooo00<000000?oo
o`3oool04`3oool00`000000oooo0?ooo`3o0?ooobh0oooo0004000000D0oooo0P0000050?ooo`@0
00001P3oool3000000D0oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`3o0?ooobh0
oooo00040?ooo`030000003oool0oooo0080oooo0P0000040?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool0103oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01<0oooo
00<000000?ooo`3oool0o`3oool^0?ooo`00103oool00`000000oooo0?ooo`080?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo0180oooo00<000000?ooo`3oool0o`3oool_0?ooo`00103oool00`000000oooo0?ooo`08
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool01P0000050?ooo`<000004P3oool0
0`000000oooo0?ooo`3o0?ooobl0oooo00040?ooo`030000003oool0oooo00P0oooo00<000000?oo
o`3oool00P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0?l0oooo<03oool000@0oooo00<000000?oo
o`3oool0203oool00`000000oooo0?ooo`020?ooo`050000003oool0oooo0?ooo`0000000P3oool0
0`000000oooo0?ooo`040?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0o`3oool`
0?ooo`00103oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0080oooo00<000000?oo
o`3oool00P3oool00`000000oooo000000060?ooo`030000003oool0oooo0140oooo00<000000?oo
o`3oool0o`3oool`0?ooo`001000000<0?ooo`@000001P3oool2000000H0oooo00<000000?ooo`3o
ool0403oool00`000000oooo0?ooo`3o0?oooc40oooo000R0?ooo`030000003oool0oooo0100oooo
00<000000?ooo`3oool0o`3ooola0?ooo`008P3oool00`000000oooo0?ooo`0?0?ooo`030000003o
ool0oooo0?l0oooo<P3oool00280oooo0P00000@0?ooo`030000003oool0oooo0?l0oooo<P3oool0
0280oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`3o0?oooc80oooo000R0?ooo`03
0000003oool0oooo00l0oooo00<000000?ooo`3oool0o`3ooolb0?ooo`008P3oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo0?l0oooo<`3oool00280oooo00<000000?ooo`3oool03P3o
ool00`000000oooo0?ooo`3o0?oooc<0oooo000R0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool0o`3ooolc0?ooo`008P3oool2000000l0oooo00<000000?ooo`3oool0o`3ooolc0?oo
o`008P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo0?l0oooo=03oool00280oooo
00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`3o0?oooc@0oooo000R0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool0o`3ooold0?ooo`008P3oool00`000000oooo0?ooo`0=
0?ooo`030000003oool0oooo0?l0oooo=03oool00280oooo00<000000?ooo`3oool0303oool00`00
0000oooo0?ooo`3o0?ooocD0oooo000R0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3o
ool0o`3ooole0?ooo`008P3oool2000000d0oooo00<000000?ooo`3oool0o`3ooole0?ooo`008P3o
ool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0?l0oooo=@3oool00280oooo00<00000
0?ooo`3oool0303oool00`000000oooo0?ooo`3o0?ooocD0oooo000R0?ooo`030000003oool0oooo
00`0oooo00<000000?ooo`3oool0o`3ooole0?ooo`00100000050?ooo`8000001@3oool4000000D0
oooo0`0000060?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0o`3ooole0?ooo`00
103oool00`000000oooo0?ooo`020?ooo`800000103oool00`000000oooo0?ooo`020?ooo`050000
003oool0oooo0?ooo`0000000`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00/0
oooo00<000000?ooo`3oool0o`3ooolf0?ooo`00103oool00`000000oooo0?ooo`080?ooo`030000
003oool0oooo0080oooo00D000000?ooo`3oool0oooo000000030?ooo`030000003oool0oooo00<0
oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`3o0?ooocH0oooo00040?ooo`030000
003oool0oooo00P0oooo00<000000?ooo`3oool00P3oool01@000000oooo0?ooo`3oool0000000<0
oooo00<000000?ooo`3oool00`3oool3000000/0oooo00<000000?ooo`3oool0o`3ooolf0?ooo`00
103oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool0
oooo100000060?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0o`3ooolf0?ooo`00
103oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0080oooo00D000000?ooo`3oool0
oooo000000090?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0o`3ooolf0?ooo`00
103oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
0P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0
o`3ooolf0?ooo`001000000<0?ooo`@000001P3oool3000000D0oooo00<000000?ooo`3oool02`3o
ool00`000000oooo0?ooo`3o0?ooocH0oooo000R0?ooo`030000003oool0oooo00X0oooo00<00000
0?ooo`3oool0o`3ooolg0?ooo`008P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo
0?l0oooo=`3oool00280oooo0P00000;0?ooo`030000003oool0oooo0?l0oooo=`3oool00280oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`3o0?ooocL0oooo000R0?ooo`030000003o
ool0oooo00X0oooo00<000000?ooo`3oool0o`3ooolg0?ooo`008P3oool00`000000oooo0?ooo`0:
0?ooo`030000003oool0oooo0?l0oooo=`3oool00280oooo00<000000?ooo`3oool02@3oool00`00
0000oooo0?ooo`3o0?ooocP0oooo000R0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool0o`3ooolh0?ooo`008P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo0?l0oooo
>03oool00280oooo0P00000:0?ooo`030000003oool0oooo0?l0oooo>03oool00280oooo00<00000
0?ooo`3oool02@3oool00`000000oooo0?ooo`3o0?ooocP0oooo000R0?ooo`030000003oool0oooo
00T0oooo00<000000?ooo`3oool0o`3ooolh0?ooo`008P3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo0?l0oooo>03oool00280oooo00<000000?ooo`3oool0203oool00`000000oooo
0?ooo`3o0?ooocT0oooo000R0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0o`3o
ooli0?ooo`008P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0?l0oooo>@3oool0
0280oooo0P0000090?ooo`030000003oool0oooo0?l0oooo>@3oool00280oooo00<000000?ooo`3o
ool0203oool00`000000oooo0?ooo`3o0?ooocT0oooo000R0?ooo`030000003oool0oooo00P0oooo
00<000000?ooo`3oool0o`3oooli0?ooo`00100000050?ooo`8000001@3oool4000000@0oooo1000
00060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0o`3oooli0?ooo`00103oool0
0`000000oooo0?ooo`020?ooo`800000103oool00`000000oooo0?ooo`020?ooo`040000003oool0
oooo000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`070?ooo`030000003o
ool0oooo0?l0oooo>P3oool000@0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`02
0?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?oo
o`070?ooo`030000003oool0oooo0?l0oooo>P3oool000@0oooo00<000000?ooo`3oool0203oool0
0`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3o
ool3000000L0oooo00<000000?ooo`3oool0o`3ooolj0?ooo`00103oool00`000000oooo0?ooo`08
0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool0oooo100000060?ooo`030000003o
ool0oooo00L0oooo00<000000?ooo`3oool0o`3ooolj0?ooo`00103oool00`000000oooo0?ooo`08
0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0o`3ooolj0?ooo`00103oool0
0`000000oooo0?ooo`080?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0o`3o
oolj0?ooo`001000000<0?ooo`@00000103oool4000000H0oooo00<000000?ooo`3oool01`3oool0
0`000000oooo0?ooo`3o0?ooocX0oooo000R0?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool0o`3ooolj0?ooo`008P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0?l0
oooo>P3oool00280oooo0P0000080?ooo`030000003oool0oooo0?l0oooo>P3oool00280oooo00<0
00000?ooo`3oool01`3oool00`000000oooo0?ooo`3o0?ooocX0oooo000R0?ooo`030000003oool0
oooo00L0oooo00<000000?ooo`3oool0o`3ooolj0?ooo`008P3oool00`000000oooo0?ooo`070?oo
o`030000003oool0oooo0?l0oooo>P3oool00280oooo00<000000?ooo`3oool01P3oool00`000000
oooo0?ooo`3o0?oooc/0oooo000R0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0
o`3ooolk0?ooo`008P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0?l0oooo>`3o
ool00280oooo0P0000070?ooo`030000003oool0oooo0?l0oooo>`3oool00280oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`3o0?oooc/0oooo000R0?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool0o`3ooolk0?ooo`008P3oool00`000000oooo0?ooo`060?ooo`030000
003oool0oooo0?l0oooo>`3oool00280oooo00<000000?ooo`3oool01P3oool00`000000oooo0?oo
o`3o0?oooc/0oooo000R0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0o`3ooolk
0?ooo`008P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0?l0oooo>`3oool00280
oooo0P0000070?ooo`030000003oool0oooo0?l0oooo>`3oool00280oooo00<000000?ooo`3oool0
1P3oool00`000000oooo0?ooo`3o0?oooc/0oooo000R0?ooo`030000003oool0oooo00H0oooo00<0
00000?ooo`3oool0o`3ooolk0?ooo`008P3oool00`000000oooo0?ooo`060?ooo`030000003oool0
oooo0?l0oooo>`3oool000P0oooo100000050?ooo`8000001@3oool5000000D0oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`3o0?oooc/0oooo00070?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool00P3oool2000000L0oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`060?ooo`030000003oool0oooo0?l0oooo>`3oool000L0oooo00<000000?ooo`3oool0
0P3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0
1P3oool00`000000oooo0?ooo`3o0?oooc/0oooo00070?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool02`3oool00`000000oooo0?ooo`050?ooo`<000001@3oool00`000000oooo0?oo
o`3o0?oooc`0oooo00070?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool02`3oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0o`3oooll
0?ooo`001`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00/0oooo00<000000?oo
o`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0?l0oooo?03oool000L0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`090?ooo`<000001`3oool00`000000
oooo0?ooo`050?ooo`030000003oool0oooo0?l0oooo?03oool000P0oooo1000000>0?ooo`030000
003oool0oooo00D0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`3o0?oooc`0oooo
000R0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0o`3oooll0?ooo`008P3oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo0?l0oooo?03oool00280oooo0P0000060?oo
o`030000003oool0oooo0?l0oooo?03oool00280oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`3o0?oooc`0oooo000R0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0
o`3oooll0?ooo`008P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0?l0oooo?03o
ool00280oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`3o0?oooc`0oooo000R0?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3ooolm0?ooo`008P3oool2000000D0
oooo00<000000?ooo`3oool0o`3ooolm0?ooo`008P3oool00`000000oooo0?ooo`040?ooo`030000
003oool0oooo0?l0oooo?@3oool00280oooo00<000000?ooo`3oool0103oool00`000000oooo0?oo
o`3o0?ooocd0oooo000R0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3ooolm
0?ooo`008P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0?l0oooo?@3oool00280
oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`3o0?ooocd0oooo000R0?ooo`030000
003oool0oooo00@0oooo00<000000?ooo`3oool0o`3ooolm0?ooo`008P3oool2000000D0oooo00<0
00000?ooo`3oool0o`3ooolm0?ooo`008P3oool00`000000oooo0?ooo`040?ooo`030000003oool0
oooo0?l0oooo?@3oool00280oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`3o0?oo
ocd0oooo000R0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3ooolm0?ooo`00
100000050?ooo`8000001@3oool500000080oooo1@0000060?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool0o`3ooolm0?ooo`00103oool00`000000oooo0?ooo`020?ooo`8000001`3o
ool00`000000oooo0?ooo`020?ooo`050000003oool0oooo0?ooo`0000001P3oool00`000000oooo
0?ooo`040?ooo`030000003oool0oooo0?l0oooo?@3oool000@0oooo00<000000?ooo`3oool02`3o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0103o
ool00`000000oooo0?ooo`3o0?ooocd0oooo00040?ooo`030000003oool0oooo00/0oooo00<00000
0?ooo`3oool0103oool00`000000oooo0?ooo`060?ooo`<00000103oool00`000000oooo0?ooo`3o
0?ooocd0oooo00040?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`050?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3ooolm0?oo
o`00103oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3o
ool0103oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0?l0oooo?@3oool000@0oooo
00<000000?ooo`3oool02@3oool3000000@0oooo00D000000?ooo`3oool0oooo000000060?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3ooolm0?ooo`001000000>0?ooo`030000
003oool0oooo00<0oooo0`0000070?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0
o`3ooolm0?ooo`008P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0?l0oooo?@3o
ool00280oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`3o0?ooocd0oooo000R0?oo
o`8000001@3oool00`000000oooo0?ooo`3o0?ooocd0oooo000R0?ooo`030000003oool0oooo00@0
oooo00<000000?ooo`3oool0o`3ooolm0?ooo`008P3oool00`000000oooo0?ooo`040?ooo`030000
003oool0oooo0?l0oooo?@3oool00280oooo00<000000?ooo`3oool0103oool00`000000oooo0?oo
o`3o0?ooocd0oooo000R0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3ooolm
0?ooo`008P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0?l0oooo?@3oool00280
oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`3o0?ooocd0oooo000R0?ooo`800000
1@3oool00`000000oooo0?ooo`3o0?ooocd0oooo000R0?ooo`030000003oool0oooo00@0oooo00<0
00000?ooo`3oool0o`3ooolm0?ooo`008P3oool00`000000oooo0?ooo`040?ooo`030000003oool0
oooo0?l0oooo?@3oool00280oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`3o0?oo
ocd0oooo000R0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3ooolm0?ooo`00
8P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0?l0oooo?@3oool00280oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`3o0?oooch0oooo000R0?ooo`800000103oool0
0`000000oooo0?ooo`3o0?oooch0oooo000R0?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool0o`3oooln0?ooo`008P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?l0
oooo?P3oool000@000001@3oool2000000D0oooo1@0000050?ooo`<000001@3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo0?l0oooo?P3oool000@0oooo00<000000?ooo`3oool00P3o
ool2000000L0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool0o`3oooln0?ooo`00103oool00`000000oooo0?ooo`0;
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo0?l0oooo?P3oool000@0oooo00<000000?ooo`3oool02`3oool00`00
0000oooo0?ooo`020?ooo`H000001@3oool3000000<0oooo00<000000?ooo`3oool0o`3oooln0?oo
o`00103oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00@000000?ooo`3o
ool000001P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?l0oooo?P3oool000@0
oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`040000003oool0oooo0000
00H0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3o0?oooch0oooo00040?ooo`03
0000003oool0oooo00T0oooo0`0000060?ooo`030000003oool0000000H0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`3o0?oooch0oooo0004000000h0oooo00<000000?ooo`3oool0
1@3oool2000000H0oooo00<000000?ooo`3oool0o`3ooom40?ooo`008P3oool00`000000oooo0?oo
o`3o0?oood@0oooo000R0?ooo`030000003oool0oooo0?l0ooooA03oool00280oooo0P00003o0?oo
odD0oooo000R0?ooo`030000003oool0oooo0?l0ooooA03oool00?l0ooooJ@3oool00?l0ooooJ@3o
ool00?l0ooooJ@3oool00001\
\>"],
  ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {-10.8783, -0.0139326, \
0.398558, 0.000915157}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.214286 0.119048 0.0147151 0.00116232 [
[.2619 .00222 -3 -9 ]
[.2619 .00222 3 0 ]
[.5 .00222 -3 -9 ]
[.5 .00222 3 0 ]
[.7381 .00222 -3 -9 ]
[.7381 .00222 3 0 ]
[.97619 .00222 -6 -9 ]
[.97619 .00222 6 0 ]
[.01131 .13095 -18 -4.5 ]
[.01131 .13095 0 4.5 ]
[.01131 .24718 -18 -4.5 ]
[.01131 .24718 0 4.5 ]
[.01131 .36341 -18 -4.5 ]
[.01131 .36341 0 4.5 ]
[.01131 .47964 -18 -4.5 ]
[.01131 .47964 0 4.5 ]
[.01131 .59587 -18 -4.5 ]
[.01131 .59587 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.2619 .01472 m
.2619 .02097 L
s
[(4)] .2619 .00222 0 1 Mshowa
.5 .01472 m
.5 .02097 L
s
[(6)] .5 .00222 0 1 Mshowa
.7381 .01472 m
.7381 .02097 L
s
[(8)] .7381 .00222 0 1 Mshowa
.97619 .01472 m
.97619 .02097 L
s
[(10)] .97619 .00222 0 1 Mshowa
.125 Mabswid
.08333 .01472 m
.08333 .01847 L
s
.14286 .01472 m
.14286 .01847 L
s
.20238 .01472 m
.20238 .01847 L
s
.32143 .01472 m
.32143 .01847 L
s
.38095 .01472 m
.38095 .01847 L
s
.44048 .01472 m
.44048 .01847 L
s
.55952 .01472 m
.55952 .01847 L
s
.61905 .01472 m
.61905 .01847 L
s
.67857 .01472 m
.67857 .01847 L
s
.79762 .01472 m
.79762 .01847 L
s
.85714 .01472 m
.85714 .01847 L
s
.91667 .01472 m
.91667 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
.02381 .13095 m
.03006 .13095 L
s
[(100)] .01131 .13095 1 0 Mshowa
.02381 .24718 m
.03006 .24718 L
s
[(200)] .01131 .24718 1 0 Mshowa
.02381 .36341 m
.03006 .36341 L
s
[(300)] .01131 .36341 1 0 Mshowa
.02381 .47964 m
.03006 .47964 L
s
[(400)] .01131 .47964 1 0 Mshowa
.02381 .59587 m
.03006 .59587 L
s
[(500)] .01131 .59587 1 0 Mshowa
.125 Mabswid
.02381 .03796 m
.02756 .03796 L
s
.02381 .06121 m
.02756 .06121 L
s
.02381 .08445 m
.02756 .08445 L
s
.02381 .1077 m
.02756 .1077 L
s
.02381 .15419 m
.02756 .15419 L
s
.02381 .17744 m
.02756 .17744 L
s
.02381 .20069 m
.02756 .20069 L
s
.02381 .22393 m
.02756 .22393 L
s
.02381 .27043 m
.02756 .27043 L
s
.02381 .29367 m
.02756 .29367 L
s
.02381 .31692 m
.02756 .31692 L
s
.02381 .34016 m
.02756 .34016 L
s
.02381 .38666 m
.02756 .38666 L
s
.02381 .4099 m
.02756 .4099 L
s
.02381 .43315 m
.02756 .43315 L
s
.02381 .4564 m
.02756 .4564 L
s
.02381 .50289 m
.02756 .50289 L
s
.02381 .52614 m
.02756 .52614 L
s
.02381 .54938 m
.02756 .54938 L
s
.02381 .57263 m
.02756 .57263 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .02594 m
.06244 .03189 L
.10458 .04024 L
.14415 .04995 L
.18221 .06105 L
.22272 .07482 L
.26171 .09 L
.30316 .1082 L
.34309 .12771 L
.3815 .14828 L
.42237 .17201 L
.46172 .19659 L
.49955 .22172 L
.53984 .24997 L
.57861 .27847 L
.61984 .31003 L
.65954 .34147 L
.69774 .3725 L
.73838 .40617 L
.77751 .43899 L
.81909 .47407 L
.85916 .50779 L
.89771 .53992 L
.93871 .57348 L
.97619 .60332 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005X0000gR000`400?l00000o`00003oo`3ooomY
0?ooo`00J`3oool3000004d0oooo0`00001=0?ooo`@00000B@3oool5000000<0oooo100000040?oo
o`00K03oool00`000000oooo0?ooo`1;0?ooo`050000003oool0oooo0?ooo`000000B`3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo04P0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo0040oooo001/0?ooo`030000003oool0oooo04/0
oooo00D000000?ooo`3oool0oooo0000001;0?ooo`030000003oool0oooo0080oooo00<000000?oo
o`3oool0B03oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080oooo00<000000?oo
o`3oool00@3oool006P0oooo1P00001<0?ooo`050000003oool0oooo0?ooo`000000B`3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo04P0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo0040oooo001Y0?ooo`040000003oool0oooo0000
04d0oooo1000001=0?ooo`@00000B`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool00@3oool006T0oooo00@000000?ooo`3oool00000C@3oool00`00
0000oooo0?ooo`1=0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0B03oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00@3oool006X0
oooo00<000000?ooo`000000CP3oool00`000000oooo0?ooo`1<0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool0AP3oool3000000@0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`010?ooo`00J`3oool2000004l0oooo0`00001<0?ooo`@00000B`3oool00`000000oooo
0?ooo`030?ooo`@00000103oool00?l0ooooJ@3oool00?l0ooooJ@3oool001X0oooo00<000000?oo
o`3oool0o`3ooom<0?ooo`006P3oool00`000000oooo0?ooo`3o0?oood`0oooo000J0?ooo`030000
003oool0oooo0?l0ooooC03oool001X0oooo00<000000?ooo`3oool0o`3ooom<0?ooo`006P3oool0
0`000000oooo0?ooo`3o0?oood`0oooo000B0?ooool00000E`00000001X0oooo00<000000?ooo`3o
ool04P3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3o
ool04P3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`070?ooo`006P3oool00`000000oooo0?ooo`1>0?ooo`030000
003oool0oooo04h0oooo00<000000?ooo`3oool0CP3oool00`000000oooo0?ooo`1>0?ooo`030000
003oool0oooo00L0oooo000J0?ooo`030000003oool0oooo0?l0ooooC03oool001X0oooo1000003o
0?oood/0oooo000J0?ooo`040000003oool0oooo0?ooo`H00000o`3ooom50?ooo`006P3oool00`00
0000oooo0?ooo`070?ooo`H00000o`3ooolo0?ooo`006P3oool00`000000oooo0?ooo`0=0?ooo`D0
0000o`3ooolj0?ooo`006P3oool300000180oooo1@00003o0?ooocD0oooo000J0?ooo`030000003o
ool0oooo01L0oooo1@00003o0?oooc00oooo000J0?ooo`030000003oool0oooo01`0oooo1000003o
0?ooob`0oooo000J0?ooo`030000003oool0oooo0200oooo1000003o0?ooobP0oooo000J0?ooo`03
0000003oool0oooo02@0oooo1000003o0?ooob@0oooo000J0?ooo`030000003oool0oooo02P0oooo
0`00003o0?ooob40oooo000J0?ooo`030000003oool0oooo02/0oooo1000003o0?oooad0oooo000J
0?ooo`030000003oool0oooo02l0oooo0`00003o0?oooaX0oooo000J0?ooo`<00000<P3oool30000
0?l0oooo5`3oool001X0oooo00<000000?ooo`3oool0=@3oool400000?l0oooo4`3oool001X0oooo
00<000000?ooo`3oool0>@3oool300000?l0oooo403oool001X0oooo00<000000?ooo`3oool0?03o
ool400000?l0oooo303oool001X0oooo00<000000?ooo`3oool0@03oool300000?l0oooo2@3oool0
01X0oooo00<000000?ooo`3oool0@`3oool200000?l0oooo1`3oool001X0oooo00<000000?ooo`3o
ool0A@3oool200000?l0oooo1@3oool001X0oooo00<000000?ooo`3oool0A`3oool200000?l0oooo
0`3oool001X0oooo0`0000190?ooo`800000o`3oool10?ooo`006P3oool00`000000oooo0?ooo`1;
0?ooo`800000oP3oool001X0oooo00<000000?ooo`3oool0C@3oool300000?/0oooo000J0?ooo`03
0000003oool0oooo0500oooo0P00003i0?ooo`006P3oool00`000000oooo0?ooo`1B0?ooo`800000
m`3oool001X0oooo00<000000?ooo`3oool0E03oool300000?@0oooo000J0?ooo`030000003oool0
oooo05L0oooo0P00003b0?ooo`006P3oool00`000000oooo0?ooo`1I0?ooo`800000l03oool001X0
oooo0`00001K0?ooo`<00000k@3oool001X0oooo00<000000?ooo`3oool0GP3oool200000>/0oooo
000J0?ooo`030000003oool0oooo0600oooo0P00003Y0?ooo`006P3oool00`000000oooo0?ooo`1R
0?ooo`<00000iP3oool000D000000`3oool4000000@0oooo100000060?ooo`030000003oool0oooo
06D0oooo0P00003T0?ooo`000P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080
oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
06L0oooo0P00003R0?ooo`000P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080
oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
06T0oooo0P00003P0?ooo`000P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080
oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`<00000J`3oool20000
0=h0oooo00020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00P3oool010000000
oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0K@3oool20000
0=`0oooo00020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00P3oool010000000
oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0K`3oool20000
0=X0oooo0003000000@0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?oo
o`030000003oool0oooo00<0oooo00<000000?ooo`3oool0L@3oool200000=P0oooo00020?ooo`03
0000003oool0oooo00<0oooo100000040?ooo`@000001P3oool00`000000oooo0?ooo`1c0?ooo`80
0000eP3oool001X0oooo00<000000?ooo`3oool0M@3oool200000=@0oooo000J0?ooo`030000003o
ool0oooo07L0oooo00<000000?ooo`3oool0d@3oool001X0oooo00<000000?ooo`3oool0N03oool2
00000=40oooo000J0?ooo`<00000NP3oool200000<l0oooo000J0?ooo`030000003oool0oooo07`0
oooo0P00003=0?ooo`006P3oool00`000000oooo0?ooo`1n0?ooo`030000003oool0oooo0<X0oooo
000J0?ooo`030000003oool0oooo07l0oooo0P00003:0?ooo`006P3oool00`000000oooo0?ooo`21
0?ooo`800000b03oool001X0oooo00<000000?ooo`3oool0P`3oool200000<H0oooo000J0?ooo`03
0000003oool0oooo08D0oooo00<000000?ooo`3oool0``3oool001X0oooo00<000000?ooo`3oool0
QP3oool200000<<0oooo000J0?ooo`<00000R03oool00`000000oooo0?ooo`300?ooo`006P3oool0
0`000000oooo0?ooo`290?ooo`800000`03oool001X0oooo00<000000?ooo`3oool0R`3oool00`00
0000oooo0?ooo`2m0?ooo`006P3oool00`000000oooo0?ooo`2<0?ooo`030000003oool0oooo0;`0
oooo000J0?ooo`030000003oool0oooo08d0oooo0P00002l0?ooo`006P3oool00`000000oooo0?oo
o`2?0?ooo`030000003oool0oooo0;T0oooo000J0?ooo`030000003oool0oooo0900oooo0P00002i
0?ooo`006P3oool00`000000oooo0?ooo`2B0?ooo`030000003oool0oooo0;H0oooo000J0?ooo`<0
0000T`3oool200000;H0oooo000J0?ooo`030000003oool0oooo09D0oooo0P00002d0?ooo`006P3o
ool00`000000oooo0?ooo`2G0?ooo`030000003oool0oooo0;40oooo000J0?ooo`030000003oool0
oooo09P0oooo0P00002a0?ooo`006P3oool00`000000oooo0?ooo`2J0?ooo`030000003oool0oooo
0:h0oooo000J0?ooo`030000003oool0oooo09/0oooo0P00002^0?ooo`006P3oool00`000000oooo
0?ooo`2M0?ooo`800000[03oool001X0oooo00<000000?ooo`3oool0W`3oool00`000000oooo0?oo
o`2Y0?ooo`006P3oool300000:00oooo0P00002Y0?ooo`006P3oool00`000000oooo0?ooo`2R0?oo
o`030000003oool0oooo0:H0oooo000J0?ooo`030000003oool0oooo0:<0oooo00<000000?ooo`3o
ool0Y@3oool001X0oooo00<000000?ooo`3oool0Y03oool200000:D0oooo000J0?ooo`030000003o
ool0oooo0:H0oooo00<000000?ooo`3oool0XP3oool000@00000103oool4000000@0oooo10000006
0?ooo`030000003oool0oooo0:L0oooo0P00002R0?ooo`000`3oool01@000000oooo0?ooo`3oool0
000000@0oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo0:T0oooo00<000000?ooo`3oool0W`3oool000030000003oool0oooo00@0oooo00<00000
0?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool0ZP3oool00`000000oooo0?ooo`2N0?ooo`0000<0oooo0000003oool0103oool0
0`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3o
ool300000:/0oooo0P00002N0?ooo`000P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo0:d0oooo00<000000?ooo`3oool0V`3oool000<0oooo00D000000?ooo`3oool0oooo0000
00040?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`2^0?ooo`030000003oool0oooo09X0oooo00030?ooo`050000003oool0oooo0?ooo`000000
103oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool0[`3oool2000009X0oooo0003000000D0oooo100000040?ooo`@000001P3oool00`000000oooo
0?ooo`2a0?ooo`030000003oool0oooo09L0oooo000J0?ooo`030000003oool0oooo0;80oooo00<0
00000?ooo`3oool0UP3oool001X0oooo00<000000?ooo`3oool0/`3oool2000009H0oooo000J0?oo
o`030000003oool0oooo0;D0oooo00<000000?ooo`3oool0T`3oool001X0oooo0`00002f0?ooo`03
0000003oool0oooo0980oooo000J0?ooo`030000003oool0oooo0;L0oooo0P00002B0?ooo`006P3o
ool00`000000oooo0?ooo`2i0?ooo`030000003oool0oooo08l0oooo000J0?ooo`030000003oool0
oooo0;X0oooo00<000000?ooo`3oool0SP3oool001X0oooo00<000000?ooo`3oool0^`3oool20000
08h0oooo000J0?ooo`030000003oool0oooo0;d0oooo00<000000?ooo`3oool0R`3oool001X0oooo
00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`2:0?ooo`006P3oool00`000000oooo0?oo
o`2o0?ooo`800000RP3oool001X0oooo0`0000310?ooo`030000003oool0oooo08L0oooo000J0?oo
o`030000003oool0oooo0<80oooo0P0000270?ooo`006P3oool00`000000oooo0?ooo`340?ooo`03
0000003oool0oooo08@0oooo000J0?ooo`030000003oool0oooo0<D0oooo00<000000?ooo`3oool0
P`3oool001X0oooo00<000000?ooo`3oool0aP3oool2000008<0oooo000J0?ooo`030000003oool0
oooo0<P0oooo00<000000?ooo`3oool0P03oool001X0oooo00<000000?ooo`3oool0b@3oool00`00
0000oooo0?ooo`1o0?ooo`006P3oool00`000000oooo0?ooo`3:0?ooo`800000O`3oool001X0oooo
0`00003<0?ooo`030000003oool0oooo07`0oooo000J0?ooo`030000003oool0oooo0<d0oooo00<0
00000?ooo`3oool0N`3oool001X0oooo00<000000?ooo`3oool0cP3oool00`000000oooo0?ooo`1j
0?ooo`006P3oool00`000000oooo0?ooo`3?0?ooo`800000NP3oool001X0oooo00<000000?ooo`3o
ool0d@3oool00`000000oooo0?ooo`1g0?ooo`006P3oool00`000000oooo0?ooo`3B0?ooo`030000
003oool0oooo07H0oooo000J0?ooo`030000003oool0oooo0=<0oooo0P00001f0?ooo`006P3oool0
0`000000oooo0?ooo`3E0?ooo`030000003oool0oooo07<0oooo000J0?ooo`<00000eP3oool00`00
0000oooo0?ooo`1b0?ooo`006P3oool00`000000oooo0?ooo`3G0?ooo`030000003oool0oooo0740
oooo000J0?ooo`030000003oool0oooo0=P0oooo00<000000?ooo`3oool0L03oool001X0oooo00<0
00000?ooo`3oool0f@3oool200000700oooo000J0?ooo`030000003oool0oooo0=/0oooo00<00000
0?ooo`3oool0K@3oool000<000001@3oool4000000@0oooo100000060?ooo`030000003oool0oooo
0=`0oooo00<000000?ooo`3oool0K03oool000<0oooo00D000000?ooo`3oool0oooo000000040?oo
o`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3M
0?ooo`030000003oool0oooo06/0oooo00030?ooo`050000003oool0oooo0?ooo`000000103oool0
10000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0gP3o
ool00`000000oooo0?ooo`1Z0?ooo`000`3oool01@000000oooo0?ooo`3oool0000000@0oooo00@0
00000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`<00000g`3oool2000006X0oooo
00000`3oool00000000000040?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000
103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0>40oooo00<000000?ooo`3oool0
I`3oool000<0oooo00D000000?ooo`3oool0oooo000000040?ooo`040000003oool0oooo000000@0
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3R0?ooo`030000003oool0oooo06H0
oooo00030?ooo`050000003oool0oooo0?ooo`000000103oool010000000oooo0?ooo`0000040?oo
o`030000003oool0oooo00<0oooo00<000000?ooo`3oool0h`3oool00`000000oooo0?ooo`1U0?oo
o`000`0000050?ooo`@00000103oool4000000H0oooo00<000000?ooo`3oool0i03oool00`000000
oooo0?ooo`1T0?ooo`006P3oool00`000000oooo0?ooo`3U0?ooo`030000003oool0oooo06<0oooo
000J0?ooo`030000003oool0oooo0>H0oooo0P00001S0?ooo`006P3oool300000>P0oooo00<00000
0?ooo`3oool0H03oool001X0oooo00<000000?ooo`3oool0j@3oool00`000000oooo0?ooo`1O0?oo
o`006P3oool00`000000oooo0?ooo`3Z0?ooo`030000003oool0oooo05h0oooo000J0?ooo`030000
003oool0oooo0>/0oooo00<000000?ooo`3oool0G@3oool001X0oooo00<000000?ooo`3oool0k03o
ool2000005d0oooo000J0?ooo`030000003oool0oooo0>h0oooo00<000000?ooo`3oool0FP3oool0
01X0oooo00<000000?ooo`3oool0k`3oool00`000000oooo0?ooo`1I0?ooo`006P3oool00`000000
oooo0?ooo`3`0?ooo`030000003oool0oooo05P0oooo000J0?ooo`<00000l@3oool00`000000oooo
0?ooo`1G0?ooo`006P3oool00`000000oooo0?ooo`3b0?ooo`800000E`3oool001X0oooo00<00000
0?ooo`3oool0m03oool00`000000oooo0?ooo`1D0?ooo`006P3oool00`000000oooo0?ooo`3e0?oo
o`030000003oool0oooo05<0oooo000J0?ooo`030000003oool0oooo0?H0oooo00<000000?ooo`3o
ool0DP3oool001X0oooo00<000000?ooo`3oool0m`3oool200000580oooo000J0?ooo`030000003o
ool0oooo0?T0oooo00<000000?ooo`3oool0C`3oool001X0oooo00<000000?ooo`3oool0nP3oool0
0`000000oooo0?ooo`1>0?ooo`006P3oool300000?/0oooo0P00001>0?ooo`006P3oool00`000000
oooo0?ooo`3m0?ooo`030000003oool0oooo04/0oooo000J0?ooo`030000003oool0oooo0?h0oooo
00<000000?ooo`3oool0BP3oool001X0oooo00<000000?ooo`3oool0o`3oool00`000000oooo0?oo
o`190?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`40oooo00<000000?ooo`3oool0B03oool0
01X0oooo00<000000?ooo`3oool0o`3oool20?ooo`800000B03oool001X0oooo00<000000?ooo`3o
ool0o`3oool40?ooo`030000003oool0oooo04D0oooo000J0?ooo`030000003oool0oooo0?l0oooo
1@3oool00`000000oooo0?ooo`140?ooo`006P3oool300000?l0oooo1P3oool00`000000oooo0?oo
o`130?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`L0oooo00<000000?ooo`3oool0@P3oool0
01X0oooo00<000000?ooo`3oool0o`3oool80?ooo`030000003oool0oooo0440oooo000J0?ooo`03
0000003oool0oooo0?l0oooo2@3oool200000440oooo000J0?ooo`030000003oool0oooo0?l0oooo
2`3oool00`000000oooo0?ooo`0n0?ooo`000P3oool3000000<0oooo100000040?ooo`@000001P3o
ool00`000000oooo0?ooo`3o0?ooo``0oooo00<000000?ooo`3oool0?@3oool000<0oooo00D00000
0?ooo`3oool0oooo000000040?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`3o0?ooo`d0oooo00<000000?ooo`3oool0?03oool000<0oooo00D0
00000?ooo`3oool0oooo000000040?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`3o0?ooo`h0oooo00<000000?ooo`3oool0>`3oool000D00000
0P3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3o
ool00`3oool300000?l0oooo3`3oool00`000000oooo0?ooo`0j0?ooo`0000@000000?ooo`3oool0
00000`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?oo
o`3oool00`3oool00`000000oooo0?ooo`3o0?oooa00oooo0P00000j0?ooo`0000@000000?ooo`3o
ool000000`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`3o0?oooa80oooo00<000000?ooo`3oool0=`3oool0
00040?ooo`000000oooo000000<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`00
00040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0o`3ooolC0?ooo`030000003o
ool0oooo03H0oooo00020?ooo`800000103oool4000000@0oooo100000060?ooo`030000003oool0
oooo0?l0oooo503oool00`000000oooo0?ooo`0e0?ooo`006P3oool00`000000oooo0?ooo`3o0?oo
oaD0oooo00<000000?ooo`3oool0=03oool001X0oooo00<000000?ooo`3oool0o`3ooolF0?ooo`03
0000003oool0oooo03<0oooo000J0?ooo`030000003oool0oooo0?l0oooo5`3oool2000003<0oooo
000J0?ooo`<00000o`3ooolI0?ooo`030000003oool0oooo0300oooo000J0?ooo`030000003oool0
oooo0?l0oooo6P3oool00`000000oooo0?ooo`0_0?ooo`006P3oool00`000000oooo0?ooo`3o0?oo
oa/0oooo00<000000?ooo`3oool0;P3oool001X0oooo00<000000?ooo`3oool0o`3ooolL0?ooo`03
0000003oool0oooo02d0oooo000J0?ooo`030000003oool0oooo0?l0oooo7@3oool00`000000oooo
0?ooo`0/0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooah0oooo0P00000/0?ooo`006P3oool0
0`000000oooo0?ooo`3o0?ooob00oooo00<000000?ooo`3oool0:@3oool001X0oooo00<000000?oo
o`3oool0o`3ooolQ0?ooo`030000003oool0oooo02P0oooo000J0?ooo`<00000o`3ooolR0?ooo`03
0000003oool0oooo02L0oooo000J0?ooo`030000003oool0oooo0?l0oooo8`3oool00`000000oooo
0?ooo`0V0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooob@0oooo0P00000V0?ooo`006P3oool0
0`000000oooo0?ooo`3o0?ooobH0oooo00<000000?ooo`3oool08`3oool001X0oooo00<000000?oo
o`3oool0o`3ooolW0?ooo`030000003oool0oooo0280oooo000J0?ooo`030000003oool0oooo0?l0
oooo:03oool00`000000oooo0?ooo`0Q0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooobT0oooo
00<000000?ooo`3oool0803oool001X0oooo00<000000?ooo`3oool0o`3ooolZ0?ooo`800000803o
ool001X0oooo0`00003o0?ooob`0oooo00<000000?ooo`3oool07@3oool001X0oooo00<000000?oo
o`3oool0o`3oool]0?ooo`030000003oool0oooo01`0oooo000J0?ooo`030000003oool0oooo0?l0
oooo;P3oool00`000000oooo0?ooo`0K0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooobl0oooo
0P00000K0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooc40oooo00<000000?ooo`3oool0603o
ool001X0oooo00<000000?ooo`3oool0o`3ooolb0?ooo`030000003oool0oooo01L0oooo000J0?oo
o`030000003oool0oooo0?l0oooo<`3oool2000001L0oooo000J0?ooo`030000003oool0oooo0?l0
oooo=@3oool00`000000oooo0?ooo`0D0?ooo`006P3oool300000?l0oooo=P3oool00`000000oooo
0?ooo`0C0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooocL0oooo00<000000?ooo`3oool04P3o
ool001X0oooo00<000000?ooo`3oool0o`3ooolh0?ooo`030000003oool0oooo0140oooo000J0?oo
o`030000003oool0oooo0?l0oooo>@3oool200000140oooo000J0?ooo`030000003oool0oooo0?l0
oooo>`3oool00`000000oooo0?ooo`0>0?ooo`00100000040?ooo`@00000103oool4000000H0oooo
00<000000?ooo`3oool0o`3oooll0?ooo`030000003oool0oooo00d0oooo00040?ooo`040000003o
ool0oooo000000@0oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo0?l0oooo?@3oool00`000000oooo0?ooo`0<0?ooo`00103oool010000000oooo
0?ooo`0000040?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`3o0?oooch0oooo00<000000?ooo`3oool02`3oool000@0oooo00@000000?ooo`3o
ool00000103oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo0`00003o
0?ooocl0oooo0P00000;0?ooo`00100000030?ooo`030000003oool0oooo0080oooo00@000000?oo
o`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?l0oooo@@3oool0
0`000000oooo0?ooo`080?ooo`0000<000000?ooo`3oool0103oool00`000000oooo0?ooo`020?oo
o`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3o
0?oood80oooo00<000000?ooo`3oool01`3oool000030000003oool0oooo00@0oooo00<000000?oo
o`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<00000
0?ooo`3oool0o`3ooom<0?ooo`001@0000030?ooo`@00000103oool4000000H0oooo00<000000?oo
o`3oool0o`3ooom<0?ooo`006P3oool00`000000oooo0?ooo`3o0?oood`0oooo000J0?ooo`030000
003oool0oooo0?l0ooooC03oool001X0oooo00<000000?ooo`3oool0o`3ooom<0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {1.33964, -39.8668, \
0.0308509, 3.15983}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(TeXForm[mynewbsol]\)], "Input"],

Cell["\\Mvariable{mynewbsol}", "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(myap = 
      finalsol1Xbz*sol1Ybz\[IndentingNewLine]
    myw = 1/8\[IndentingNewLine]
    mynewbsol = mynewb //. {W[y] \[Rule] myw}\[IndentingNewLine]
    FullSimplify[
      s2eqns //. {w1[x, y] \[Rule] myw, D[w1[x, y], x] \[Rule] D[myw, x], 
          D[w1[x, y], y] \[Rule] D[myw, y], Bp1[x, y] \[Rule] mynewbsol, 
          D[Bp1[x, y], x] \[Rule] D[mynewbsol, x], 
          D[Bp1[x, y], y] \[Rule] D[mynewbsol, y], Ap2[x, y] \[Rule] myap, 
          D[Ap2[x, y], x] \[Rule] D[myap, x], 
          D[D[Ap2[x, y], x], x] \[Rule] D[D[myap, x], x], 
          D[Ap2[x, y], y] \[Rule] D[myap, y], 
          D[D[Ap2[x, y], y], y] \[Rule] D[D[myap, y], y]}, {x > 2  M, 
        M > 0}]\[IndentingNewLine]
    \)\)\)], "Input"],

Cell[BoxData[
    \(\(1\/\(144\ M\^3\ x\)\) \((C\ Cos[
            y]\ \((2\ M\ \((24\ M\^3 - 18\ M\ x\^2\ \((\(-2\) + Log[2])\) + 
                    18\ x\^3\ \((\(-2\) + Log[4])\) - 
                    M\^2\ x\ \((\(-11\) + Log[64])\))\) + 
              6\ x\ Log[
                  x\/M]\ \((2\ M\^3 + 6\ M\^2\ x - 3\ x\^3\ Log[4] + 
                    3\ M\ x\^2\ \((\(-4\) + Log[8])\) + 
                    3\ x\^2\ \((\(-3\)\ M + 2\ x)\)\ Log[x\/M])\) + 
              9\ x\^3\ \((\(-3\)\ M + 
                    2\ x)\)\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] + 
              18\ x\^3\ \((\(-3\)\ M + 2\ x)\)\ PolyLog[
                  2, \(2\ M\)\/x])\)\ Sin[y]\^2)\)\)], "Output"],

Cell[BoxData[
    \(1\/8\)], "Output"],

Cell[BoxData[
    \(\(-\(\(C\ \((2\ M + x\/2)\)\)\/\(4\ x\^3\)\)\)\)], "Output"],

Cell[BoxData[
    \({0, 0, 0, 0}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(it = FullSimplify[finalsol1Xbz //. {M \[Rule] 1}]\)], "Input"],

Cell[BoxData[
    \(\(1\/\(144\ x\)\) \((48 - 
          2\ x\ \((\(-11\) + 
                18\ x\ \((\(-2\) + Log[2] - x\ \((\(-2\) + Log[4])\))\) + 
                Log[64])\) + 
          9\ x\^3\ \((\(-3\) + 2\ x)\)\ Log[\((\(-2\) + x)\)\^2]\ Log[2\/x] + 
          6\ x\ Log[
              x]\ \((2 + 
                3\ x\ \((2 + x\ \((\(-4\) - x\ Log[4] + Log[8])\))\) + 
                3\ x\^2\ \((\(-3\) + 2\ x)\)\ Log[x])\) + 
          18\ x\^3\ \((\(-3\) + 2\ x)\)\ PolyLog[2, 2\/x])\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Normal[Series[it, {x, Infinity, 2}]] - 
      Normal[Series[it, {x, Infinity, 1}]]\), "\[IndentingNewLine]", 
    \(FullSimplify[Series[it, {x, Infinity, 2}]]\)}], "Input"],

Cell[BoxData[
    \(\(\(-\(11\/200\)\) - Log[2]\/10 - 1\/10\ Log[1\/x]\)\/x\^2\)], "Output"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{\(1\/\(4\ x\)\), 
        "+", \(1\/200\ \((\(-11\) - 20\ Log[2] - 
              20\ Log[1\/x])\)\ \((1\/x)\)\^2\), "+", 
        InterpretationBox[\(O[1\/x]\^3\),
          SeriesData[ x, 
            DirectedInfinity[ 1], {}, 1, 3, 1],
          Editable->False]}],
      SeriesData[ x, 
        DirectedInfinity[ 1], {
        Rational[ 1, 4], 
        Times[ 
          Rational[ 1, 200], 
          Plus[ -11, 
            Times[ -20, 
              Log[ 2]], 
            Times[ -20, 
              Log[ 
                Power[ x, -1]]]]]}, 1, 3, 1],
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(\(temud1 = 
        Temud //. {w1[x, y] \[Rule] myw, D[w1[x, y], x] \[Rule] D[myw, x], 
            D[w1[x, y], y] \[Rule] D[myw, y], Bp1[x, y] \[Rule] mynewbsol, 
            D[Bp1[x, y], x] \[Rule] D[mynewbsol, x], 
            D[Bp1[x, y], y] \[Rule] D[mynewbsol, y], Ap2[x, y] \[Rule] myap, 
            D[Ap2[x, y], x] \[Rule] D[myap, x], 
            D[D[Ap2[x, y], x], x] \[Rule] D[D[myap, x], x], 
            D[Ap2[x, y], y] \[Rule] D[myap, y], 
            D[D[Ap2[x, y], y], y] \[Rule] D[D[myap, y], y]};\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Simplify[Temud[\([2, 1]\)]]\)], "Input"],

Cell[BoxData[
    RowBox[{\(1\/\(4\ M\^7\ \((x\^2 + a\^2\ Cos[y]\^2)\)\^2\)\), 
      RowBox[{"(", 
        RowBox[{\(a\^2\), " ", \(w1[x, y]\), " ", 
          RowBox[{"(", 
            RowBox[{\(C\ M\^2\ Sin[y]\), "+", 
              RowBox[{\(a\^2\), " ", 
                RowBox[{
                  SuperscriptBox["Ap2", 
                    TagBox[\((0, 1)\),
                      Derivative],
                    MultilineFunction->None], "[", \(x, y\), "]"}]}]}], ")"}],
           " ", 
          RowBox[{"(", 
            
            RowBox[{\(2\ M\ \((a\^2 + x\ \((\(-2\)\ M + x)\))\)\ Bp1[x, 
                  y]\ \((a\^2 + 2\ x\^2 + a\^2\ Cos[2\ y])\)\ Sin[y]\), "-", 
              RowBox[{"4", " ", \((M - 2\ x\ w1[x, y])\), " ", 
                RowBox[{"(", 
                  RowBox[{\(C\ M\^2\ Sin[y]\), "+", 
                    RowBox[{\(a\^2\), " ", 
                      RowBox[{
                        SuperscriptBox["Ap2", 
                          TagBox[\((0, 1)\),
                            Derivative],
                          MultilineFunction->None], "[", \(x, y\), "]"}]}]}], 
                  ")"}]}]}], ")"}]}], ")"}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(itr = 
      Collect[Normal[Series[gdet*temud1[\([2, 1]\)], {a, 0, 4}]], a, 
        Simplify]\), "\[IndentingNewLine]", 
    \(ith = 
      Collect[Normal[Series[gdet*temud1[\([3, 1]\)], {a, 0, 4}]], a, 
        Simplify]\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \(\(-\(\(a\^2\ C\^2\ Sin[y]\^3\)\/\(64\ M\^4\)\)\) + \(\(1\/\(18432\ M\^9\
\ x\^4\)\)\((a\^4\ C\^2\ \((1152\ M\^7 - 1824\ M\^6\ x - 368\ M\^5\ x\^2 - 
              580\ M\^4\ x\^3 + 698\ M\^3\ x\^4 - 216\ M\^2\ x\^5 + 
              72\ M\ x\^6 + 288\ M\^4\ x\^3\ Log[2] - 
              72\ M\^3\ x\^4\ Log[2] + 36\ M\^2\ x\^5\ Log[2] - 
              288\ M\^3\ x\^4\ Log[4] + 72\ M\^2\ x\^5\ Log[4] - 
              36\ M\ x\^6\ Log[4] + 16\ M\^5\ x\^2\ Log[64] - 
              4\ M\^4\ x\^3\ Log[64] + 2\ M\^3\ x\^4\ Log[64] - 
              96\ M\^5\ x\^2\ Log[x\/M] - 264\ M\^4\ x\^3\ Log[x\/M] + 
              636\ M\^3\ x\^4\ Log[x\/M] - 180\ M\^2\ x\^5\ Log[x\/M] + 
              72\ M\ x\^6\ Log[x\/M] + 144\ M\^2\ x\^5\ Log[4]\ Log[x\/M] - 
              36\ M\ x\^6\ Log[4]\ Log[x\/M] + 18\ x\^7\ Log[4]\ Log[x\/M] - 
              144\ M\^3\ x\^4\ Log[8]\ Log[x\/M] + 
              36\ M\^2\ x\^5\ Log[8]\ Log[x\/M] - 
              18\ M\ x\^6\ Log[8]\ Log[x\/M] + 
              432\ M\^3\ x\^4\ Log[x\/M]\^2 - 396\ M\^2\ x\^5\ Log[x\/M]\^2 + 
              126\ M\ x\^6\ Log[x\/M]\^2 - 36\ x\^7\ Log[x\/M]\^2 + 
              216\ M\^3\ x\^4\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] \
- 198\ M\^2\ x\^5\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] + 
              63\ M\ x\^6\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] - 
              18\ x\^7\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] + 
              3\ Cos[2\ y]\ \((2\ M\ \((192\ M\^6 - 240\ M\^5\ x - 
                          18\ x\^6\ \((\(-2\) + Log[4])\) + 
                          18\ M\ x\^5\ \((\(-6\) + Log[32])\) + 
                          2\ M\^3\ x\^3\ \((\(-145\) + 72\ Log[2] - 
                                Log[64])\) + 
                          8\ M\^4\ x\^2\ \((\(-5\) + Log[64])\) + 
                          M\^2\ x\^4\ \((349 - 36\ Log[2] - 144\ Log[4] + 
                                Log[64])\))\) - 
                    6\ x\^2\ \((8\ M\^2 - 2\ M\ x + x\^2)\)\ \((2\ M\^3 + 
                          6\ M\^2\ x + 3\ M\ x\^2\ \((\(-4\) + Log[8])\) - 
                          x\^3\ Log[64])\)\ Log[x\/M] + 
                    18\ x\^4\ \((24\ M\^3 - 22\ M\^2\ x + 7\ M\ x\^2 - 
                          2\ x\^3)\)\ Log[x\/M]\^2 + 
                    9\ x\^4\ \((24\ M\^3 - 22\ M\^2\ x + 7\ M\ x\^2 - 
                          2\ x\^3)\)\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\
\)\^2])\) + 18\ x\^4\ \((24\ M\^3 - 22\ M\^2\ x + 7\ M\ x\^2 - 
                    2\ x\^3)\)\ \((1 + 3\ Cos[2\ y])\)\ PolyLog[
                  2, \(2\ M\)\/x])\)\ Sin[y]\^3)\)\)\)], "Output"],

Cell[BoxData[
    \(\(-\(\(1\/\(3072\ M\^9\ \((2\ M - x)\)\ x\^2\)\)\((a\^4\ C\^2\ Cos[
            y]\ \((32\ M\^5 - 24\ M\^4\ x - 68\ M\^3\ x\^2 + 
              180\ M\^2\ x\^3 - 72\ M\ x\^4 + 24\ M\^3\ x\^2\ Log[2] - 
              12\ M\^2\ x\^3\ Log[2] - 48\ M\^2\ x\^3\ Log[4] + 
              36\ M\ x\^4\ Log[4] - 6\ x\^5\ Log[4] - 
              12\ M\^2\ x\^3\ Log[8] + 6\ M\ x\^4\ Log[8] + 
              6\ x\^3\ \((6\ M\^2 - 7\ M\ x + 2\ x\^2)\)\ Log[
                  1 - \(2\ M\)\/x] - 18\ M\ x\^4\ Log[\(2\ M\)\/x] + 
              12\ x\^5\ Log[\(2\ M\)\/x] - 24\ M\^3\ x\^2\ Log[x\/M] + 
              180\ M\^2\ x\^3\ Log[x\/M] - 132\ M\ x\^4\ Log[x\/M] + 
              24\ x\^5\ Log[x\/M] + 36\ M\ x\^4\ Log[4]\ Log[x\/M] - 
              18\ x\^5\ Log[4]\ Log[x\/M] - 
              24\ M\^2\ x\^3\ Log[8]\ Log[x\/M] + 
              12\ M\ x\^4\ Log[8]\ Log[x\/M] + 72\ M\^2\ x\^3\ Log[x\/M]\^2 - 
              108\ M\ x\^4\ Log[x\/M]\^2 + 36\ x\^5\ Log[x\/M]\^2 - 
              18\ M\^2\ x\^3\ Log[\((\(-2\) + x\/M)\)\^2] + 
              21\ M\ x\^4\ Log[\((\(-2\) + x\/M)\)\^2] - 
              6\ x\^5\ Log[\((\(-2\) + x\/M)\)\^2] + 
              36\ M\^2\ x\^3\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] - 
              54\ M\ x\^4\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] + 
              18\ x\^5\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] + 
              36\ x\^3\ \((2\ M\^2 - 3\ M\ x + x\^2)\)\ PolyLog[
                  2, \(2\ M\)\/x])\)\ Sin[y]\^4)\)\)\)\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \( (*\ to\ 2  nd\ order\ term\ there, \ 
      4  th\ orders\ aren' t\ valid\ *) \)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{\( (*\ find\ other\ solution\ *) \), "\[IndentingNewLine]", 
      RowBox[{\(myap = AX[x]*AY[y];\), 
        "\[IndentingNewLine]", \(fund2my = 
          FullSimplify[\(1/myap\)/Sin[y]*fund2 //. {Ap2[x, y] \[Rule] myap, 
                D[Ap2[x, y], x] \[Rule] D[myap, x], 
                D[D[Ap2[x, y], x], x] \[Rule] D[D[myap, x], x], 
                D[Ap2[x, y], y] \[Rule] D[myap, y], 
                D[D[Ap2[x, y], y], y] \[Rule] D[D[myap, y], y]}]\), 
        "\[IndentingNewLine]", \(Collect[Collect[fund2my, AX], AY]\), 
        "\[IndentingNewLine]", \(myAY = AC*Sin[y]^2*Cos[y]\), 
        "\[IndentingNewLine]", 
        RowBox[{"FullSimplify", "[", 
          RowBox[{
            RowBox[{"(", 
              RowBox[{
                RowBox[{\(-Cot[y]\), " ", 
                  RowBox[{
                    SuperscriptBox["AY", "\[Prime]",
                      MultilineFunction->None], "[", "y", "]"}]}], "+", 
                RowBox[{
                  SuperscriptBox["AY", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "y", "]"}]}], ")"}], 
            "//.", \({AY[y] \[Rule] myAY, D[AY[y], y] \[Rule] D[myAY, y], 
              D[D[AY[y], y], y] \[Rule] D[D[myAY, y], y]}\)}], 
          "]"}]}]}]], "Input"],

Cell[BoxData[
    RowBox[{"-", 
      RowBox[{\(1\/\(32\ M\^8\ x\^8\ AX[x]\^2\ AY[y]\^2\)\), 
        RowBox[{"(", 
          RowBox[{
          "3", " ", \(a\^4\), " ", \(AC\^2\), " ", \(C\^2\), " ", "Null", 
            " ", \(Cos[y]\^2\), " ", \(Sin[y]\^2\), " ", 
            SuperscriptBox[
              RowBox[{"(", 
                
                RowBox[{\(C\ \((16\ M\^4 + 8\ M\^3\ x - 4\ M\^2\ x\^2 - 
                        2\ M\ x\^3 - x\^4)\)\ Cos[y]\ Sin[y]\^2\), "+", 
                  RowBox[{"8", " ", \(M\^2\), " ", \(x\^2\), " ", 
                    RowBox[{"(", 
                      RowBox[{
                        RowBox[{\(AY[y]\), " ", 
                          RowBox[{"(", 
                            RowBox[{
                              RowBox[{"2", " ", "M", " ", 
                                RowBox[{
                                  SuperscriptBox["AX", "\[Prime]",
                                    MultilineFunction->None], "[", "x", 
                                  "]"}]}], "+", 
                              RowBox[{"x", " ", \((\(-2\)\ M + x)\), " ", 
                                RowBox[{
                                  SuperscriptBox["AX", "\[Prime]\[Prime]",
                                    MultilineFunction->None], "[", "x", 
                                  "]"}]}]}], ")"}]}], "+", 
                        RowBox[{\(AX[x]\), " ", 
                          RowBox[{"(", 
                            RowBox[{
                              RowBox[{\(-Cot[y]\), " ", 
                                RowBox[{
                                  SuperscriptBox["AY", "\[Prime]",
                                    MultilineFunction->None], "[", "y", 
                                  "]"}]}], "+", 
                              RowBox[{
                                SuperscriptBox["AY", "\[Prime]\[Prime]",
                                  MultilineFunction->None], "[", "y", "]"}]}],
                             ")"}]}]}], ")"}]}]}], ")"}], "2"]}], 
          ")"}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"DSolve", "[", 
      RowBox[{
        RowBox[{
          RowBox[{"(", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{\(-Cot[y]\), " ", 
                    RowBox[{
                      SuperscriptBox["AY", "\[Prime]",
                        MultilineFunction->None], "[", "y", "]"}]}], "+", 
                  RowBox[{
                    SuperscriptBox["AY", "\[Prime]\[Prime]",
                      MultilineFunction->None], "[", "y", "]"}]}], ")"}], 
              "/", \(AY[y]\)}], ")"}], "\[Equal]", "0"}], ",", \(AY[y]\), ",",
         "y"}], "]"}]], "Input"],

Cell[BoxData[
    \({{AY[y] \[Rule] C[2] - C[1]\ Cos[y]}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"DSolve", "[", 
      RowBox[{
        RowBox[{
          RowBox[{"(", 
            RowBox[{
              RowBox[{
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{\(-Cot[y]\), " ", 
                      RowBox[{
                        SuperscriptBox["AY", "\[Prime]",
                          MultilineFunction->None], "[", "y", "]"}]}], "+", 
                    RowBox[{
                      SuperscriptBox["AY", "\[Prime]\[Prime]",
                        MultilineFunction->None], "[", "y", "]"}]}], ")"}], 
                "/", \(AY[y]\)}], "+", "FX", "-", \(SX*Cos[y]*Sin[y]^2\)}], 
            ")"}], "\[Equal]", "0"}], ",", \(AY[y]\), ",", "y"}], 
      "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"DSolve", "[", 
      RowBox[{
        RowBox[{
          RowBox[{"FX", "-", \(SX\ Cos[y]\ Sin[y]\^2\), "+", 
            FractionBox[
              RowBox[{
                RowBox[{\(-Cot[y]\), " ", 
                  RowBox[{
                    SuperscriptBox["AY", "\[Prime]",
                      MultilineFunction->None], "[", "y", "]"}]}], "+", 
                RowBox[{
                  SuperscriptBox["AY", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "y", "]"}]}], \(AY[y]\)]}],
           "\[Equal]", "0"}], ",", \(AY[y]\), ",", "y"}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(DSolve[0 == \(-Cot[h]\)\ \ D[f[r, h], h] + \ D[D[f[r, h], h], h], 
      f[r, h], h]\), "\[IndentingNewLine]", 
    \(fpart[x_, y_] := CONST*Sin[y]^2*Cos[y]\), "\[IndentingNewLine]", 
    \(CONSTsol = \(Solve[
          0 \[Equal] 
            6*C*Sin[y]^2*Cos[y] - Cot[y]\ D[fpart[x, y], y] + \ 
              D[D[fpart[x, y], y], y], CONST]\)[\([1]\)]\)}], "Input"],

Cell[BoxData[
    \({{f[r, h] \[Rule] C[2] - C[1]\ Cos[h]}}\)], "Output"],

Cell[BoxData[
    \({CONST \[Rule] C}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(sol2Y = \(myAY = fpart[x, y] //. CONSTsol\)\), "\[IndentingNewLine]", 
    \(fund2myR = 
      FullSimplify[
          fund2my //. {AY[y] \[Rule] myAY, D[AY[y], y] \[Rule] D[myAY, y], 
              D[D[AY[y], y], y] \[Rule] D[D[myAY, y], y]}]/\((a^2*C*Csc[y]*
            M^2)\)\)}], "Input"],

Cell[BoxData[
    \(C\ Cos[y]\ Sin[y]\^2\)], "Output"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(fund2myR\\)\\\" is similar to existing \
symbol \\\"\\!\\(fund2my\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{"-", 
      FractionBox[
        RowBox[{\(\(-16\)\ M\^4\), "-", \(8\ M\^3\ x\), 
          "+", \(4\ M\^2\ x\^2\), "+", \(2\ M\ x\^3\), "+", \(x\^4\), "+", 
          RowBox[{"8", " ", \(M\^2\), " ", \(x\^2\), " ", 
            RowBox[{"(", 
              RowBox[{\(6\ AX[x]\), "-", 
                RowBox[{"2", " ", "M", " ", 
                  RowBox[{
                    SuperscriptBox["AX", "\[Prime]",
                      MultilineFunction->None], "[", "x", "]"}]}], "+", 
                RowBox[{\((2\ M - x)\), " ", "x", " ", 
                  RowBox[{
                    SuperscriptBox["AX", "\[Prime]\[Prime]",
                      MultilineFunction->None], "[", "x", "]"}]}]}], 
              ")"}]}]}], \(8\ M\^6\ x\^4\ AX[x]\)]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sol2X = \(DSolve[fund2myR \[Equal] 0, AX[x], x]\)[\([1, 1, 
          2]\)]\)], "Input"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(sol2X\\)\\\" is similar to existing symbol \
\\\"\\!\\(sol2Y\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Solve::"svars"\), \(\(:\)\(\ \)\), "\<\"Equations may not give \
solutions for all \\\"solve\\\" variables. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Solve::svars\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Solve::"svars"\), \(\(:\)\(\ \)\), "\<\"Equations may not give \
solutions for all \\\"solve\\\" variables. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Solve::svars\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Solve::"svars"\), \(\(:\)\(\ \)\), "\<\"Equations may not give \
solutions for all \\\"solve\\\" variables. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Solve::svars\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Solve :: \\\"svars\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \(\((\(-\(\(3\ M\ x\^2\)\/2\)\) + x\^3)\)\ C[
          1] + \(\(1\/\(12\ M\^5\)\)\((C[
            2]\ \((\(-2\)\ M\^3 - 6\ M\^2\ x + 12\ M\ x\^2 + 
              9\ M\ x\^2\ Log[x] - 6\ x\^3\ Log[x] - 
              9\ M\ x\^2\ Log[\(-2\)\ M + x] + 
              6\ x\^3\ Log[\(-2\)\ M + 
                    x])\))\)\) + \(\(1\/\(288\ M\^3\ x\)\)\((96\ M\^4 + 
          212\ M\^3\ x + 720\ M\^2\ x\^2 - 639\ M\ x\^3 - 460\ x\^4 + 
          24\ M\^3\ x\ Log[x] + 72\ M\^2\ x\^2\ Log[x] - 
          1026\ M\ x\^3\ Log[x] + 588\ x\^4\ Log[x] - 
          54\ M\ x\^3\ Log[x]\^2 + 36\ x\^4\ Log[x]\^2 + 
          882\ M\ x\^3\ Log[\(-2\)\ M + x] - 588\ x\^4\ Log[\(-2\)\ M + x] + 
          108\ M\ x\^3\ Log[x]\ Log[1 - x\/\(2\ M\)] - 
          72\ x\^4\ Log[x]\ Log[1 - x\/\(2\ M\)] + 
          108\ M\ x\^3\ PolyLog[2, x\/\(2\ M\)] - 
          72\ x\^4\ PolyLog[2, x\/\(2\ M\)])\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(limsol2X2M = Limit[sol2X, {x \[Rule] 2  M}]\)], "Input"],

Cell[BoxData[
    \({DirectedInfinity[49\ M\^2 - 12\ C[2] + 6\ M\^2\ Log[2\ M]]\/M\^2}\)], \
"Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(numlim = \(Numerator[limsol2X2M[\([1]\)]]\)[\([1]\)]\)], "Input"],

Cell[BoxData[
    \(49\ M\^2 - 12\ C[2] + 6\ M\^2\ Log[2\ M]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(myc2 = \(Solve[numlim \[Equal] 0, C[2]]\)[\([1]\)]\)], "Input"],

Cell[BoxData[
    \({C[2] \[Rule] 1\/12\ \((49\ M\^2 + 6\ M\^2\ Log[2\ M])\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sol2Xnew = 
      FullSimplify[\(sol2X //. myc2\) //. {M \[Rule] 1, 
            x \[Rule] xn}]\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(288\ xn\)\)\((96 + 
        xn\ \((xn\ \((132 - 72\ Log[2] + 
                    xn\ \((537 - 432\ C[1] + 
                          4\ xn\ \((\(-115\) + 72\ C[1])\) + 
                          144\ Log[2])\))\) - 8\ \((\(-2\) + Log[8])\))\) + 
        36\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[2]\ Log[\(-2\) + xn] + 
        6\ xn\ Log[
            xn]\ \((4 + 12\ \((1 - 2\ xn)\)\ xn + 
              3\ xn\^2\ \((\(-3\) + 2\ xn)\)\ \((\(-2\)\ Log[2 - xn] + 
                    Log[xn])\))\) + 
        36\ \((3 - 2\ xn)\)\ xn\^3\ PolyLog[2, xn\/2])\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(myhorc = \(Solve[HORC == Limit[sol2Xnew, xn \[Rule] 2], 
          C[1]]\)[\([1]\)]\)], "Input"],

Cell[BoxData[
    \({C[1] \[Rule] 
        1\/144\ \((301 + 72\ HORC + 6\ \[Pi]\^2 + 
              36\ \[ImaginaryI]\ \[Pi]\ Log[2] - 
              18\ Log[2]\^2)\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sol3Xnew = FullSimplify[sol2Xnew //. myhorc]\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(144\ xn\)\)\((48 + 
        xn\ \((8 + 
              xn\ \((66 - 36\ Log[2] + 
                    xn\ \((\(-183\) + 71\ xn + 
                          36\ HORC\ \((\(-3\) + 2\ xn)\) + 72\ Log[2] + 
                          3\ \((\(-3\) + 2\ xn)\)\ \((\[Pi]\^2 + 
                                6\ \[ImaginaryI]\ \[Pi]\ Log[2] - 
                                3\ Log[2]\^2)\))\))\) - 4\ Log[8])\) + 
        18\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[2]\ Log[\(-2\) + xn] + 
        3\ xn\ Log[
            xn]\ \((4 + 12\ \((1 - 2\ xn)\)\ xn + 
              3\ xn\^2\ \((\(-3\) + 2\ xn)\)\ \((\(-2\)\ Log[2 - xn] + 
                    Log[xn])\))\) - 
        18\ xn\^3\ \((\(-3\) + 2\ xn)\)\ PolyLog[2, xn\/2])\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sol4Xnew = 
      Simplify[Re[ComplexExpand[sol3Xnew]], {xn > 0, 
            Im[HORC] \[Equal] 0}] //. {\ 
          Re[Log[\((\(-2\) + xn)\)\^2]] -> \ Log[\((\(-2\) + xn)\)\^2], 
          Re[PolyLog[2, xn\/2]] -> \((Pi^2/3 - Log[xn/2]^2/2 - 
                PolyLog[2, 2\/xn])\)}\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(144\ xn\)\)\((48 + 8\ xn + 66\ xn\^2 - 183\ xn\^3 - 
        108\ HORC\ xn\^3 - 9\ \[Pi]\^2\ xn\^3 + 71\ xn\^4 + 72\ HORC\ xn\^4 + 
        6\ \[Pi]\^2\ xn\^4 - 36\ xn\^2\ Log[2] + 72\ xn\^3\ Log[2] + 
        27\ xn\^3\ Log[2]\^2 - 18\ xn\^4\ Log[2]\^2 - 4\ xn\ Log[8] + 
        9\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[\((\(-2\) + xn)\)\^2]\ Log[
            2\/xn] + 12\ xn\ Log[xn] + 36\ xn\^2\ Log[xn] - 
        72\ xn\^3\ Log[xn] - 27\ xn\^3\ Log[xn]\^2 + 18\ xn\^4\ Log[xn]\^2 + 
        18\ \((3 - 2\ xn)\)\ xn\^3\ \((\[Pi]\^2\/3 - 1\/2\ Log[xn\/2]\^2 - 
              PolyLog[2, 2\/xn])\))\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Limit[sol4Xnew, xn \[Rule] 2]\), "\[IndentingNewLine]", 
    \(sol4liminf = 
      Limit[sol4Xnew, xn \[Rule] Infinity]\), "\[IndentingNewLine]", 
    \(sol4liminf[\([1]\)]\)}], "Input"],

Cell[BoxData[
    \(HORC\)], "Output"],

Cell[BoxData[
    \(DirectedInfinity[71 + 72\ HORC - 6\ \[Pi]\^2]\)], "Output"],

Cell[BoxData[
    \(71 + 72\ HORC - 6\ \[Pi]\^2\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(myhorc2 = \(Solve[sol4liminf[\([1]\)] \[Equal] 0, 
          HORC]\)[\([1]\)]\)], "Input"],

Cell[BoxData[
    \({HORC \[Rule] 1\/72\ \((\(-71\) + 6\ \[Pi]\^2)\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sol5Xnew = FullSimplify[sol4Xnew //. myhorc2]\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(288\ xn\)\)\((96 + 
        xn\ \((3\ xn\ \((44 - 51\ xn + 24\ \((\(-1\) + 2\ xn)\)\ Log[2])\) - 
              8\ \((\(-2\) + Log[8])\))\) + 
        18\ xn\^3\ \((\(-3\) + 2\ xn)\)\ Log[\((\(-2\) + xn)\)\^2]\ Log[
            2\/xn] + 
        12\ xn\ Log[
            xn]\ \((2 + 
              3\ xn\ \((2 + xn\ \((\(-4\) - xn\ Log[4] + Log[8])\))\) + 
              3\ xn\^2\ \((\(-3\) + 2\ xn)\)\ Log[xn])\) + 
        36\ xn\^3\ \((\(-3\) + 2\ xn)\)\ PolyLog[2, 2\/xn])\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Limit[sol5Xnew, xn \[Rule] Infinity]\), "\[IndentingNewLine]", 
    \(FullSimplify[Limit[sol5Xnew, xn \[Rule] 2]]\)}], "Input"],

Cell[BoxData[
    \(Divide::"infy" \(\(:\)\(\ \)\) 
      "Infinite expression \!\(1\/0\) encountered."\)], "Message"],

Cell[BoxData[
    \(\(-\[Infinity]\)\)], "Output"],

Cell[BoxData[
    \(1\/72\ \((\(-71\) + 6\ \[Pi]\^2)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Plot[sol5Xnew, {xn, 2, 20}]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.047619 0.603319 0.0438683 [
[.2619 .59082 -3 -9 ]
[.2619 .59082 3 0 ]
[.5 .59082 -6 -9 ]
[.5 .59082 6 0 ]
[.7381 .59082 -6 -9 ]
[.7381 .59082 6 0 ]
[.97619 .59082 -6 -9 ]
[.97619 .59082 6 0 ]
[.01131 .0769 -18 -4.5 ]
[.01131 .0769 0 4.5 ]
[.01131 .16464 -18 -4.5 ]
[.01131 .16464 0 4.5 ]
[.01131 .25237 -12 -4.5 ]
[.01131 .25237 0 4.5 ]
[.01131 .34011 -12 -4.5 ]
[.01131 .34011 0 4.5 ]
[.01131 .42785 -12 -4.5 ]
[.01131 .42785 0 4.5 ]
[.01131 .51558 -12 -4.5 ]
[.01131 .51558 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.2619 .60332 m
.2619 .60957 L
s
[(5)] .2619 .59082 0 1 Mshowa
.5 .60332 m
.5 .60957 L
s
[(10)] .5 .59082 0 1 Mshowa
.7381 .60332 m
.7381 .60957 L
s
[(15)] .7381 .59082 0 1 Mshowa
.97619 .60332 m
.97619 .60957 L
s
[(20)] .97619 .59082 0 1 Mshowa
.125 Mabswid
.07143 .60332 m
.07143 .60707 L
s
.11905 .60332 m
.11905 .60707 L
s
.16667 .60332 m
.16667 .60707 L
s
.21429 .60332 m
.21429 .60707 L
s
.30952 .60332 m
.30952 .60707 L
s
.35714 .60332 m
.35714 .60707 L
s
.40476 .60332 m
.40476 .60707 L
s
.45238 .60332 m
.45238 .60707 L
s
.54762 .60332 m
.54762 .60707 L
s
.59524 .60332 m
.59524 .60707 L
s
.64286 .60332 m
.64286 .60707 L
s
.69048 .60332 m
.69048 .60707 L
s
.78571 .60332 m
.78571 .60707 L
s
.83333 .60332 m
.83333 .60707 L
s
.88095 .60332 m
.88095 .60707 L
s
.92857 .60332 m
.92857 .60707 L
s
.25 Mabswid
0 .60332 m
1 .60332 L
s
.02381 .0769 m
.03006 .0769 L
s
[(-12)] .01131 .0769 1 0 Mshowa
.02381 .16464 m
.03006 .16464 L
s
[(-10)] .01131 .16464 1 0 Mshowa
.02381 .25237 m
.03006 .25237 L
s
[(-8)] .01131 .25237 1 0 Mshowa
.02381 .34011 m
.03006 .34011 L
s
[(-6)] .01131 .34011 1 0 Mshowa
.02381 .42785 m
.03006 .42785 L
s
[(-4)] .01131 .42785 1 0 Mshowa
.02381 .51558 m
.03006 .51558 L
s
[(-2)] .01131 .51558 1 0 Mshowa
.125 Mabswid
.02381 .09883 m
.02756 .09883 L
s
.02381 .12077 m
.02756 .12077 L
s
.02381 .1427 m
.02756 .1427 L
s
.02381 .18657 m
.02756 .18657 L
s
.02381 .2085 m
.02756 .2085 L
s
.02381 .23044 m
.02756 .23044 L
s
.02381 .27431 m
.02756 .27431 L
s
.02381 .29624 m
.02756 .29624 L
s
.02381 .31818 m
.02756 .31818 L
s
.02381 .36204 m
.02756 .36204 L
s
.02381 .38398 m
.02756 .38398 L
s
.02381 .40591 m
.02756 .40591 L
s
.02381 .44978 m
.02756 .44978 L
s
.02381 .47171 m
.02756 .47171 L
s
.02381 .49365 m
.02756 .49365 L
s
.02381 .53752 m
.02756 .53752 L
s
.02381 .55945 m
.02756 .55945 L
s
.02381 .58138 m
.02756 .58138 L
s
.02381 .05497 m
.02756 .05497 L
s
.02381 .03303 m
.02756 .03303 L
s
.02381 .0111 m
.02756 .0111 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.11905 .59614 m
.15382 .58834 L
.19174 .579 L
.22736 .56901 L
.26161 .55813 L
.29806 .54512 L
.33316 .53115 L
.37046 .51472 L
.4064 .49734 L
.44097 .47917 L
.47775 .45828 L
.51316 .43663 L
.54722 .4144 L
.58347 .38919 L
.61837 .36345 L
.65547 .33446 L
.69121 .30498 L
.72558 .27516 L
.76216 .24187 L
.79738 .20829 L
.8348 .17097 L
.87086 .13341 L
.90556 .09579 L
.94246 .05418 L
.97619 .01472 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005X0000gR000`400?l00000o`00003oo`3ooomY
0?ooo`00o`3ooomY0?ooo`00o`3ooomY0?ooo`00o`3ooomY0?ooo`00o`3ooomY0?ooo`00o`3ooomY
0?ooo`006P3oool00`000000oooo0?ooo`3o0?oood`0oooo000J0?ooo`030000003oool0oooo0?l0
ooooC03oool001X0oooo00<000000?ooo`3oool0o`3ooom<0?ooo`006P3oool300000?l0ooooC03o
ool001X0oooo00<000000?ooo`3oool0o`3ooom<0?ooo`006P3oool00`000000oooo0?ooo`3o0?oo
od80oooo00<000000?ooo`3oool01`3oool001X0oooo00<000000?ooo`3oool0o`3ooom10?ooo`03
0000003oool0oooo00P0oooo000J0?ooo`030000003oool0oooo0?l0oooo@03oool00`000000oooo
0?ooo`090?ooo`006P3oool00`000000oooo0?ooo`3o0?ooocl0oooo00<000000?ooo`3oool02P3o
ool001X0oooo00<000000?ooo`3oool0o`3ooolo0?ooo`030000003oool0oooo00X0oooo000J0?oo
o`030000003oool0oooo0?l0oooo?P3oool00`000000oooo0?ooo`0;0?ooo`006P3oool300000?l0
oooo?@3oool00`000000oooo0?ooo`0<0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooc`0oooo
00<000000?ooo`3oool03@3oool001X0oooo00<000000?ooo`3oool0o`3ooolk0?ooo`030000003o
ool0oooo00h0oooo000J0?ooo`030000003oool0oooo0?l0oooo>P3oool00`000000oooo0?ooo`0?
0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooocX0oooo00<000000?ooo`3oool03`3oool001X0
oooo00<000000?ooo`3oool0o`3oooli0?ooo`030000003oool0oooo0100oooo000J0?ooo`030000
003oool0oooo0?l0oooo>03oool00`000000oooo0?ooo`0A0?ooo`006P3oool300000?l0oooo=`3o
ool00`000000oooo0?ooo`0B0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooocH0oooo00<00000
0?ooo`3oool04`3oool001X0oooo00<000000?ooo`3oool0o`3ooole0?ooo`030000003oool0oooo
01@0oooo000J0?ooo`030000003oool0oooo0?l0oooo=03oool00`000000oooo0?ooo`0E0?ooo`00
6P3oool00`000000oooo0?ooo`3o0?oooc<0oooo00<000000?ooo`3oool05P3oool000P0oooo1@00
00020?ooo`D000001P3oool00`000000oooo0?ooo`3o0?oooc80oooo00<000000?ooo`3oool05`3o
ool000X0oooo00<000000?ooo`3oool00P3oool01@000000oooo0?ooo`3oool0000000H0oooo00<0
00000?ooo`3oool0o`3ooola0?ooo`030000003oool0oooo01P0oooo000:0?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3o0?oooc00oooo00<00000
0?ooo`3oool06@3oool000D000001@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo
00H0oooo0`00003o0?oooc00oooo00<000000?ooo`3oool06@3oool000X0oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0?l0oooo;`3oool00`000000
oooo0?ooo`0J0?ooo`002P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool0o`3oool^0?ooo`030000003oool0oooo01/0oooo00080?ooo`<00000103o
ool01@000000oooo0?ooo`3oool0000000H0oooo00<000000?ooo`3oool0o`3oool]0?ooo`030000
003oool0oooo01`0oooo000:0?ooo`030000003oool0oooo00<0oooo0`0000070?ooo`030000003o
ool0oooo0?l0oooo;03oool00`000000oooo0?ooo`0M0?ooo`006P3oool00`000000oooo0?ooo`3o
0?ooob/0oooo00<000000?ooo`3oool07P3oool001X0oooo00<000000?ooo`3oool0o`3ooolZ0?oo
o`030000003oool0oooo01l0oooo000J0?ooo`<00000o`3ooolY0?ooo`030000003oool0oooo0200
oooo000J0?ooo`030000003oool0oooo0?l0oooo:03oool00`000000oooo0?ooo`0Q0?ooo`006P3o
ool00`000000oooo0?ooo`3o0?ooobL0oooo00<000000?ooo`3oool08P3oool001X0oooo00<00000
0?ooo`3oool0o`3ooolW0?ooo`030000003oool0oooo0280oooo000J0?ooo`030000003oool0oooo
0?l0oooo9P3oool00`000000oooo0?ooo`0S0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooobD0
oooo00<000000?ooo`3oool0903oool001X0oooo00<000000?ooo`3oool0o`3ooolT0?ooo`030000
003oool0oooo02D0oooo000J0?ooo`030000003oool0oooo0?l0oooo8`3oool00`000000oooo0?oo
o`0V0?ooo`006P3oool300000?l0oooo8P3oool00`000000oooo0?ooo`0W0?ooo`006P3oool00`00
0000oooo0?ooo`3o0?ooob80oooo00<000000?ooo`3oool09`3oool001X0oooo00<000000?ooo`3o
ool0o`3ooolQ0?ooo`030000003oool0oooo02P0oooo000J0?ooo`030000003oool0oooo0?l0oooo
803oool00`000000oooo0?ooo`0Y0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooal0oooo00<0
00000?ooo`3oool0:P3oool001X0oooo00<000000?ooo`3oool0o`3ooolN0?ooo`030000003oool0
oooo02/0oooo000J0?ooo`030000003oool0oooo0?l0oooo7@3oool00`000000oooo0?ooo`0/0?oo
o`006P3oool300000?l0oooo703oool00`000000oooo0?ooo`0]0?ooo`006P3oool00`000000oooo
0?ooo`3o0?oooa/0oooo00<000000?ooo`3oool0;P3oool001X0oooo00<000000?ooo`3oool0o`3o
oolJ0?ooo`030000003oool0oooo02l0oooo000J0?ooo`030000003oool0oooo0?l0oooo6@3oool0
0`000000oooo0?ooo`0`0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooaP0oooo00<000000?oo
o`3oool0<@3oool000P0oooo1@0000030?ooo`@000001P3oool00`000000oooo0?ooo`3o0?oooaL0
oooo00<000000?ooo`3oool0<P3oool000X0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0o`3ooolF0?ooo`030000
003oool0oooo03<0oooo000:0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?l0oooo5@3oool00`000000oooo0?oo
o`0d0?ooo`001@0000050?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`030?ooo`<00000o`3ooolD0?ooo`030000003oool0oooo03D0oooo000:0?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?oo
o`030000003oool0oooo0?l0oooo4`3oool00`000000oooo0?ooo`0f0?ooo`002P3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`3o0?oooa80oooo00<000000?ooo`3oool0=`3oool000P0oooo0`0000040?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3o0?oooa40oooo
00<000000?ooo`3oool0>03oool000X0oooo00<000000?ooo`3oool00`3oool4000000H0oooo00<0
00000?ooo`3oool0o`3oool@0?ooo`030000003oool0oooo03T0oooo000J0?ooo`030000003oool0
oooo0?l0oooo3`3oool00`000000oooo0?ooo`0j0?ooo`006P3oool00`000000oooo0?ooo`3o0?oo
o`h0oooo00<000000?ooo`3oool0>`3oool001X0oooo0`00003o0?ooo`d0oooo00<000000?ooo`3o
ool0?03oool001X0oooo00<000000?ooo`3oool0o`3oool<0?ooo`030000003oool0oooo03d0oooo
000J0?ooo`030000003oool0oooo0?l0oooo303oool00`000000oooo0?ooo`0m0?ooo`006P3oool0
0`000000oooo0?ooo`3o0?ooo`/0oooo00<000000?ooo`3oool0?P3oool001X0oooo00<000000?oo
o`3oool0o`3oool:0?ooo`030000003oool0oooo03l0oooo000J0?ooo`030000003oool0oooo0?l0
oooo2@3oool00`000000oooo0?ooo`100?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`P0oooo
00<000000?ooo`3oool0@@3oool001X0oooo00<000000?ooo`3oool0o`3oool70?ooo`030000003o
ool0oooo0480oooo000J0?ooo`<00000o`3oool60?ooo`030000003oool0oooo04<0oooo000J0?oo
o`030000003oool0oooo0?l0oooo1@3oool00`000000oooo0?ooo`140?ooo`006P3oool00`000000
oooo0?ooo`3o0?ooo`@0oooo00<000000?ooo`3oool0A@3oool001X0oooo00<000000?ooo`3oool0
o`3oool30?ooo`030000003oool0oooo04H0oooo000J0?ooo`030000003oool0oooo0?l0oooo0P3o
ool00`000000oooo0?ooo`170?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`40oooo00<00000
0?ooo`3oool0B03oool001X0oooo00<000000?ooo`3oool0oP3oool2000004/0oooo000J0?ooo`<0
0000o@3oool00`000000oooo0?ooo`1;0?ooo`006P3oool00`000000oooo0?ooo`3l0?ooo`030000
003oool0oooo04`0oooo000J0?ooo`030000003oool0oooo0?/0oooo00<000000?ooo`3oool0C@3o
ool001X0oooo00<000000?ooo`3oool0nP3oool00`000000oooo0?ooo`1>0?ooo`006P3oool00`00
0000oooo0?ooo`3i0?ooo`030000003oool0oooo04l0oooo000@0?ooo`@000001P3oool00`000000
oooo0?ooo`3h0?ooo`030000003oool0oooo0500oooo000?0?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3g0?ooo`030000003oool0oooo0540oooo
000?0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?oo
o`3e0?ooo`800000E03oool000L0oooo1P0000020?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool00`3oool300000?@0oooo00<000000?ooo`3oool0E03oool00100oooo100000060?oo
o`030000003oool0oooo0?<0oooo00<000000?ooo`3oool0E@3oool000l0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?80oooo00<000000?ooo`3o
ool0EP3oool000l0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo0?40oooo00<000000?ooo`3oool0E`3oool00100oooo100000060?ooo`030000003o
ool0oooo0>l0oooo0P00001J0?ooo`006P3oool00`000000oooo0?ooo`3^0?ooo`030000003oool0
oooo05X0oooo000J0?ooo`030000003oool0oooo0>d0oooo00<000000?ooo`3oool0F`3oool001X0
oooo0`00003/0?ooo`030000003oool0oooo05`0oooo000J0?ooo`030000003oool0oooo0>/0oooo
00<000000?ooo`3oool0G@3oool001X0oooo00<000000?ooo`3oool0jP3oool00`000000oooo0?oo
o`1N0?ooo`006P3oool00`000000oooo0?ooo`3X0?ooo`800000H@3oool001X0oooo00<000000?oo
o`3oool0i`3oool00`000000oooo0?ooo`1Q0?ooo`006P3oool00`000000oooo0?ooo`3V0?ooo`03
0000003oool0oooo0680oooo000J0?ooo`030000003oool0oooo0>D0oooo00<000000?ooo`3oool0
H`3oool001X0oooo0`00003T0?ooo`030000003oool0oooo06@0oooo000J0?ooo`030000003oool0
oooo0>80oooo0P00001W0?ooo`006P3oool00`000000oooo0?ooo`3Q0?ooo`030000003oool0oooo
06L0oooo000J0?ooo`030000003oool0oooo0>00oooo00<000000?ooo`3oool0J03oool001X0oooo
00<000000?ooo`3oool0g`3oool00`000000oooo0?ooo`1Y0?ooo`006P3oool00`000000oooo0?oo
o`3N0?ooo`030000003oool0oooo06X0oooo000J0?ooo`030000003oool0oooo0=`0oooo0P00001]
0?ooo`006P3oool00`000000oooo0?ooo`3K0?ooo`030000003oool0oooo06d0oooo000J0?ooo`<0
0000fP3oool00`000000oooo0?ooo`1^0?ooo`006P3oool00`000000oooo0?ooo`3I0?ooo`030000
003oool0oooo06l0oooo000J0?ooo`030000003oool0oooo0=P0oooo00<000000?ooo`3oool0L03o
ool001X0oooo00<000000?ooo`3oool0eP3oool2000007<0oooo000A0?ooo`<000001P3oool00`00
0000oooo0?ooo`3E0?ooo`030000003oool0oooo07<0oooo000@0?ooo`050000003oool0oooo0?oo
o`0000001@3oool00`000000oooo0?ooo`3D0?ooo`030000003oool0oooo07@0oooo000@0?ooo`05
0000003oool0oooo0?ooo`0000001@3oool00`000000oooo0?ooo`3C0?ooo`030000003oool0oooo
07D0oooo00070?ooo`H000000`3oool01@000000oooo0?ooo`3oool0000000D0oooo0`00003B0?oo
o`030000003oool0oooo07H0oooo000@0?ooo`@000001P3oool00`000000oooo0?ooo`3@0?ooo`80
0000N@3oool00100oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3?0?ooo`030000
003oool0oooo07T0oooo000A0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0cP3o
ool00`000000oooo0?ooo`1j0?ooo`004P3oool3000000D0oooo00<000000?ooo`3oool0c@3oool0
0`000000oooo0?ooo`1k0?ooo`006P3oool00`000000oooo0?ooo`3<0?ooo`030000003oool0oooo
07`0oooo000J0?ooo`030000003oool0oooo0<X0oooo0P00001o0?ooo`006P3oool00`000000oooo
0?ooo`390?ooo`030000003oool0oooo07l0oooo000J0?ooo`<00000b03oool00`000000oooo0?oo
o`200?ooo`006P3oool00`000000oooo0?ooo`370?ooo`030000003oool0oooo0840oooo000J0?oo
o`030000003oool0oooo0<D0oooo0P0000240?ooo`006P3oool00`000000oooo0?ooo`340?ooo`03
0000003oool0oooo08@0oooo000J0?ooo`030000003oool0oooo0<<0oooo00<000000?ooo`3oool0
Q@3oool001X0oooo00<000000?ooo`3oool0`@3oool2000008P0oooo000J0?ooo`030000003oool0
oooo0<00oooo00<000000?ooo`3oool0R03oool001X0oooo0`00002o0?ooo`030000003oool0oooo
08T0oooo000J0?ooo`030000003oool0oooo0;d0oooo0P00002<0?ooo`006P3oool00`000000oooo
0?ooo`2l0?ooo`030000003oool0oooo08`0oooo000J0?ooo`030000003oool0oooo0;X0oooo0P00
002?0?ooo`006P3oool00`000000oooo0?ooo`2i0?ooo`030000003oool0oooo08l0oooo000J0?oo
o`030000003oool0oooo0;L0oooo0P00002B0?ooo`006P3oool00`000000oooo0?ooo`2f0?ooo`03
0000003oool0oooo0980oooo000J0?ooo`030000003oool0oooo0;D0oooo00<000000?ooo`3oool0
T`3oool001X0oooo0`00002c0?ooo`800000UP3oool001X0oooo00<000000?ooo`3oool0/P3oool0
0`000000oooo0?ooo`2F0?ooo`006P3oool00`000000oooo0?ooo`2`0?ooo`800000V@3oool001X0
oooo00<000000?ooo`3oool0[`3oool00`000000oooo0?ooo`2I0?ooo`004P3oool3000000D0oooo
00<000000?ooo`3oool0[@3oool2000009`0oooo000C0?ooo`030000003oool0oooo00@0oooo00<0
00000?ooo`3oool0[03oool00`000000oooo0?ooo`2L0?ooo`004`3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo0:X0oooo0P00002O0?ooo`001`3oool600000080oooo1P0000050?oo
o`<00000Z03oool200000:40oooo000@0?ooo`040000003oool0oooo000000H0oooo00<000000?oo
o`3oool0Y`3oool00`000000oooo0?ooo`2Q0?ooo`00403oool010000000oooo0?ooo`0000060?oo
o`030000003oool0oooo0:D0oooo0P00002T0?ooo`004@3oool00`000000oooo000000060?ooo`03
0000003oool0oooo0:@0oooo00<000000?ooo`3oool0Y03oool00180oooo0P0000060?ooo`030000
003oool0oooo0:80oooo0P00002W0?ooo`006P3oool00`000000oooo0?ooo`2Q0?ooo`030000003o
ool0oooo0:L0oooo000J0?ooo`030000003oool0oooo09l0oooo0P00002Z0?ooo`006P3oool00`00
0000oooo0?ooo`2N0?ooo`030000003oool0oooo0:X0oooo000J0?ooo`<00000W03oool200000:d0
oooo000J0?ooo`030000003oool0oooo09/0oooo00<000000?ooo`3oool0[@3oool001X0oooo00<0
00000?ooo`3oool0V@3oool200000;00oooo000J0?ooo`030000003oool0oooo09P0oooo00<00000
0?ooo`3oool0/03oool001X0oooo00<000000?ooo`3oool0UP3oool200000;<0oooo000J0?ooo`03
0000003oool0oooo09@0oooo0P00002e0?ooo`006P3oool00`000000oooo0?ooo`2B0?ooo`800000
]`3oool001X0oooo0`00002@0?ooo`800000^@3oool001X0oooo00<000000?ooo`3oool0SP3oool2
00000;/0oooo000J0?ooo`030000003oool0oooo08`0oooo0P00002m0?ooo`006P3oool00`000000
oooo0?ooo`2;0?ooo`030000003oool0oooo0;d0oooo000J0?ooo`030000003oool0oooo08T0oooo
0P0000300?ooo`006P3oool00`000000oooo0?ooo`270?ooo`800000`P3oool001X0oooo00<00000
0?ooo`3oool0Q@3oool200000<@0oooo000J0?ooo`030000003oool0oooo08<0oooo0P0000360?oo
o`006P3oool300000840oooo0P0000380?ooo`006P3oool00`000000oooo0?ooo`1o0?ooo`800000
bP3oool001X0oooo00<000000?ooo`3oool0O@3oool200000<`0oooo000J0?ooo`030000003oool0
oooo07/0oooo0P00003>0?ooo`003`3oool5000000H0oooo00<000000?ooo`3oool0N@3oool20000
0=00oooo000?0?ooo`050000003oool0oooo0?ooo`0000001P3oool00`000000oooo0?ooo`1g0?oo
o`800000dP3oool00100oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`1e0?ooo`80
0000e03oool000L0oooo1P0000040?ooo`030000003oool0oooo00H0oooo0`00001b0?ooo`<00000
eP3oool00180oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`1`0?ooo`800000f@3o
ool001<0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`1^0?ooo`800000f`3oool0
00l0oooo00D000000?ooo`3oool0oooo000000060?ooo`030000003oool0oooo06/0oooo0`00003M
0?ooo`00403oool3000000L0oooo00<000000?ooo`3oool0J@3oool200000>00oooo000J0?ooo`03
0000003oool0oooo06H0oooo0`00003R0?ooo`006P3oool00`000000oooo0?ooo`1T0?ooo`800000
i@3oool001X0oooo00<000000?ooo`3oool0HP3oool200000>L0oooo000J0?ooo`<00000G`3oool3
00000>T0oooo000J0?ooo`030000003oool0oooo05d0oooo0P00003/0?ooo`006P3oool00`000000
oooo0?ooo`1J0?ooo`<00000kP3oool001X0oooo00<000000?ooo`3oool0F03oool200000?40oooo
000J0?ooo`030000003oool0oooo05D0oooo0`00003c0?ooo`006P3oool00`000000oooo0?ooo`1B
0?ooo`<00000mP3oool001X0oooo00<000000?ooo`3oool0D03oool200000?T0oooo000J0?ooo`<0
0000C03oool4000004T0oooo1@0000030?ooo`@00000A@3oool5000000<0oooo100000140?ooo`D0
0000103oool4000000@0oooo000J0?ooo`030000003oool0oooo04T0oooo100000030?ooo`030000
003oool0oooo04P0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo04@0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo0440oooo00D000000?ooo`3oool0oooo000000030?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool00@3oool001X0oooo00<000000?ooo`3oool0A@3oool4000000L0oooo
00<000000?ooo`3oool0B03oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool0A03oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0480oooo
00<000000?ooo`3oool0103oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0040oooo
000J0?ooo`030000003oool0oooo0480oooo0`00000;0?ooo`030000003oool0oooo04P0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo04@0oooo00<0
00000?ooo`3oool01`3oool00`000000oooo0?ooo`130?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`010?ooo`006P3oool00`000000oooo0?ooo`0o
0?ooo`<000002P3oool4000004/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo04@0oooo00<000000?ooo`3oool00`3oool4000004L0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0040oooo000J0?oo
o`030000003oool0oooo03/0oooo1000000=0?ooo`030000003oool0oooo04`0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo04@0oooo00<000000?oo
o`3oool00`3oool00`000000oooo0?ooo`190?ooo`050000003oool0oooo0?ooo`000000103oool0
0`000000oooo0?ooo`010?ooo`006P3oool00`000000oooo0?ooo`0h0?ooo`<000004@3oool00`00
0000oooo0?ooo`1:0?ooo`<00000103oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo
0480oooo0`0000050?ooo`030000003oool0oooo04D0oooo00D000000?ooo`3oool0oooo00000003
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00@3oool001X0oooo00<000000?oo
o`3oool0=@3oool3000001@0oooo1@00001:0?ooo`030000003oool0oooo00<0oooo100000170?oo
o`030000003oool0oooo00<0oooo1@0000140?ooo`<000001@3oool4000000@0oooo000J0?ooo`<0
0000<@3oool400000?l0oooo5`3oool001X0oooo00<000000?ooo`3oool0;@3oool400000?l0oooo
6`3oool001X0oooo00<000000?ooo`3oool0:@3oool400000?l0oooo7`3oool001X0oooo00<00000
0?ooo`3oool09@3oool400000?l0oooo8`3oool001X0oooo00<000000?ooo`3oool08@3oool40000
0?l0oooo9`3oool001X0oooo00<000000?ooo`3oool07P3oool300000?l0oooo:`3oool001X0oooo
00<000000?ooo`3oool0o`3ooom<0?ooo`004P3ooooo000005L00000000J0?ooo`030000003oool0
oooo00d0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0
oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0
oooo00h0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0
oooo00d0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0
oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0
oooo00h0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0
oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`070?ooo`006P3oool00`00
0000oooo0?ooo`1>0?ooo`030000003oool0oooo04h0oooo00<000000?ooo`3oool0CP3oool00`00
0000oooo0?ooo`1>0?ooo`030000003oool0oooo00L0oooo000J0?ooo`030000003oool0oooo0?l0
ooooC03oool001X0oooo00<000000?ooo`3oool0o`3ooom<0?ooo`006P3oool00`000000oooo0?oo
o`3o0?oood`0oooo003o0?ooofT0oooo003o0?ooofT0oooo003o0?ooofT0oooo003o0?ooofT0oooo
003o0?ooofT0oooo0000\
\>"],
  ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {-1.65089, -14.1224, \
0.0771275, 0.0837218}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sol2total = 
      FullSimplify[\((sol5Xnew*sol2Y)\) //. {xn \[Rule] x/M}]\)], "Input"],

Cell[BoxData[
    \(\(\(1\/\(288\ M\^3\ x\)\)\((C\ Cos[
          y]\ \((M\ \((96\ M\^3 + 9\ x\^3\ \((\(-17\) + 16\ Log[2])\) - 
                  8\ M\^2\ x\ \((\(-2\) + Log[8])\) - 
                  12\ M\ x\^2\ \((\(-11\) + Log[64])\))\) + 
            12\ x\ Log[
                x\/M]\ \((2\ M\^3 + 6\ M\^2\ x - 3\ x\^3\ Log[4] + 
                  3\ M\ x\^2\ \((\(-4\) + Log[8])\) + 
                  3\ x\^2\ \((\(-3\)\ M + 2\ x)\)\ Log[x\/M])\) + 
            18\ x\^3\ \((\(-3\)\ M + 
                  2\ x)\)\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] + 
            36\ x\^3\ \((\(-3\)\ M + 2\ x)\)\ PolyLog[
                2, \(2\ M\)\/x])\)\ Sin[y]\^2)\)\)\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \( (*\ check\ *) \)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(myap = sol2total\), "\[IndentingNewLine]", 
    \(FullSimplify[\(1/myap\)/Sin[y]*fund2my //. {Ap2[x, y] \[Rule] myap, 
          D[Ap2[x, y], x] \[Rule] D[myap, x], 
          D[D[Ap2[x, y], x], x] \[Rule] D[D[myap, x], x], 
          D[Ap2[x, y], y] \[Rule] D[myap, y], 
          D[D[Ap2[x, y], y], y] \[Rule] D[D[myap, y], y]}]\)}], "Input"],

Cell[BoxData[
    \(\(\(1\/\(288\ M\^3\ x\)\)\((C\ Cos[
          y]\ \((M\ \((96\ M\^3 + 9\ x\^3\ \((\(-17\) + 16\ Log[2])\) - 
                  8\ M\^2\ x\ \((\(-2\) + Log[8])\) - 
                  12\ M\ x\^2\ \((\(-11\) + Log[64])\))\) + 
            12\ x\ Log[
                x\/M]\ \((2\ M\^3 + 6\ M\^2\ x - 3\ x\^3\ Log[4] + 
                  3\ M\ x\^2\ \((\(-4\) + Log[8])\) + 
                  3\ x\^2\ \((\(-3\)\ M + 2\ x)\)\ Log[x\/M])\) + 
            18\ x\^3\ \((\(-3\)\ M + 
                  2\ x)\)\ Log[\(2\ M\)\/x]\ Log[\((\(-2\) + x\/M)\)\^2] + 
            36\ x\^3\ \((\(-3\)\ M + 2\ x)\)\ PolyLog[
                2, \(2\ M\)\/x])\)\ Sin[y]\^2)\)\)\)], "Output"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullSimplify[
      s2eqns //. {w1[x, y] \[Rule] myneww2, 
          D[w1[x, y], y] \[Rule] D[myneww2, y], Bp1[x, y] \[Rule] mynewb2, 
          D[w1[x, y], x] \[Rule] D[myneww2, x], 
          D[Bp1[x, y], x] \[Rule] D[mynewb2, x], Ap2[x, y] \[Rule] myap, 
          D[Ap2[x, y], x] \[Rule] D[myap, x], 
          D[D[Ap2[x, y], x], x] \[Rule] D[D[myap, x], x], 
          D[Ap2[x, y], y] \[Rule] D[myap, y], 
          D[D[Ap2[x, y], y], y] \[Rule] D[D[myap, y], y]}]\)], "Input"],

Cell[BoxData[
    \({0, 
      0, \(a\^2\ C\^2\ \((16\ M\^4 + 8\ M\^3\ x - 4\ M\^2\ x\^2 - 2\ M\ x\^3 \
- x\^4)\)\ Cos[y]\ Sin[y]\^2\)\/\(8\ M\^4\ x\^4\), 0}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(temud2 = 
        Simplify[
          Temud //. {w1[x, y] \[Rule] myneww2, Bp1[x, y] \[Rule] mynewb2, 
              D[w1[x, y], x] \[Rule] D[myneww2, x], 
              D[Bp1[x, y], x] \[Rule] D[mynewb2, x], Ap2[x, y] \[Rule] myap, 
              D[Ap2[x, y], x] \[Rule] D[myap, x], 
              D[D[Ap2[x, y], x], x] \[Rule] D[D[myap, x], x], 
              D[Ap2[x, y], y] \[Rule] D[myap, y], 
              D[D[Ap2[x, y], y], y] \[Rule] D[D[myap, y], y]}];\)\)], "Input"],

Cell[BoxData[
    RowBox[{\(DSolve::"dsvar"\), \(\(:\)\(\ \)\), "\<\"\\!\\(#3\\) cannot be \
used as a variable. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\
\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"DSolve::dsvar\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(DSolve::"dsvar"\), \(\(:\)\(\ \)\), "\<\"\\!\\(#3\\) cannot be \
used as a variable. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\
\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"DSolve::dsvar\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(DSolve::"dsvar"\), \(\(:\)\(\ \)\), "\<\"\\!\\(#3\\) cannot be \
used as a variable. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\
\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"DSolve::dsvar\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(DSolve :: \\\"dsvar\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Part::"pspec"\), \(\(:\)\(\ \)\), "\<\"Part specification \
\\!\\(#2\\) is neither an integer nor a list of integers. \\!\\(\\*ButtonBox[\
\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, ButtonData:>\\\"General::pspec\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(itr = 
      Collect[Normal[Series[gdet*temud2[\([2, 1]\)], {a, 0, 6}]], a, 
        Simplify]\), "\[IndentingNewLine]", 
    \(ith = 
      Collect[Normal[Series[gdet*temud2[\([3, 1]\)], {a, 0, 6}]], a, 
        Simplify]\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \(Indeterminate\)], "Output"],

Cell[BoxData[
    \(Indeterminate\)], "Output"]
}, Open  ]]
},
FrontEndVersion->"4.2 for X",
ScreenRectangle->{{0, 1600}, {0, 1200}},
WindowSize->{1588, 1150},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.25
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 70, 1, 35, "Input"],

Cell[CellGroupData[{
Cell[1849, 56, 391, 7, 98, "Input"],
Cell[2243, 65, 60, 1, 44, "Output"],
Cell[2306, 68, 588, 14, 71, "Output"],
Cell[2897, 84, 555, 15, 44, "Output"],
Cell[3455, 101, 474, 13, 60, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[3966, 119, 35, 1, 35, "Input"],
Cell[4004, 122, 60, 1, 44, "Output"]
}, Open  ]],
Cell[4079, 126, 509, 9, 56, "Input"],
Cell[4591, 137, 76, 1, 35, "Input"],
Cell[4670, 140, 109, 2, 35, "Input"],
Cell[4782, 144, 76, 1, 35, "Input"],
Cell[4861, 147, 74, 1, 35, "Input"],
Cell[4938, 150, 26, 0, 35, "Input"],
Cell[4967, 152, 200, 3, 77, "Input"],
Cell[5170, 157, 26, 0, 35, "Input"],
Cell[5199, 159, 61, 1, 35, "Input"],
Cell[5263, 162, 26, 0, 35, "Input"],
Cell[5292, 164, 82, 1, 35, "Input"],

Cell[CellGroupData[{
Cell[5399, 169, 103, 2, 35, "Input"],
Cell[5505, 173, 135, 2, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5677, 180, 103, 2, 35, "Input"],
Cell[5783, 184, 154, 2, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5974, 191, 93, 1, 35, "Input"],
Cell[6070, 194, 117, 2, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[6224, 201, 37, 1, 35, "Input"],
Cell[6264, 204, 86, 1, 51, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[6387, 210, 750, 16, 119, "Input"],
Cell[7140, 228, 123, 2, 47, "Output"],
Cell[7266, 232, 861, 14, 192, "Output"],
Cell[8130, 248, 185, 3, 28, "Message"],
Cell[8318, 253, 1226, 20, 239, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[9581, 278, 105, 2, 56, "Input"],
Cell[9689, 282, 1442, 28, 236, "Output"],
Cell[11134, 312, 1522, 27, 208, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[12693, 344, 130, 3, 35, "Input"],
Cell[12826, 349, 61, 1, 47, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[12924, 355, 730, 18, 119, "Input"],
Cell[13657, 375, 198, 3, 28, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[13892, 383, 177, 3, 56, "Input"],
Cell[14072, 388, 214, 3, 70, "Output"],
Cell[14289, 393, 212, 3, 70, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[14538, 401, 130, 3, 35, "Input"],
Cell[14671, 406, 35, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[14743, 412, 345, 6, 56, "Input"],
Cell[15091, 420, 299, 4, 56, "Output"],
Cell[15393, 426, 35, 1, 35, "Output"]
}, Open  ]],
Cell[15443, 430, 26, 0, 35, "Input"],
Cell[15472, 432, 273, 5, 35, "Input"],
Cell[15748, 439, 26, 0, 35, "Input"],
Cell[15777, 441, 26, 0, 35, "Input"],
Cell[15806, 443, 242, 5, 35, "Input"],

Cell[CellGroupData[{
Cell[16073, 452, 366, 7, 98, "Input"],
Cell[16442, 461, 1719, 37, 74, "Output"],
Cell[18164, 500, 2019, 41, 74, "Output"],
Cell[20186, 543, 5047, 100, 118, "Output"],
Cell[25236, 645, 812, 18, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[26085, 668, 73, 1, 35, "Input"],
Cell[26161, 671, 42, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[26240, 677, 118, 2, 35, "Input"],
Cell[26361, 681, 3904, 79, 116, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[30302, 765, 436, 9, 119, "Input"],
Cell[30741, 776, 150, 3, 54, "Output"],
Cell[30894, 781, 115, 2, 54, "Output"],
Cell[31012, 785, 73, 1, 35, "Output"],
Cell[31088, 788, 63, 1, 35, "Output"],
Cell[31154, 791, 169, 3, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[31360, 799, 199, 5, 35, "Input"],
Cell[31562, 806, 3157, 55, 192, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[34756, 866, 47, 1, 35, "Input"],
Cell[34806, 869, 1555, 28, 102, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[36398, 902, 193, 5, 56, "Input"],
Cell[36594, 909, 1409, 26, 100, "Output"],
Cell[38006, 937, 1409, 26, 100, "Output"]
}, Open  ]],
Cell[39430, 966, 138, 2, 56, "Input"],
Cell[39571, 970, 75, 1, 35, "Input"],

Cell[CellGroupData[{
Cell[39671, 975, 49, 1, 35, "Input"],
Cell[39723, 978, 127, 2, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[39887, 985, 62, 1, 35, "Input"],
Cell[39952, 988, 126, 2, 28, "Message"],
Cell[40081, 992, 176, 3, 28, "Message"],
Cell[40260, 997, 126, 2, 28, "Message"],
Cell[40389, 1001, 176, 3, 28, "Message"],
Cell[40568, 1006, 163, 3, 28, "Message"],
Cell[40734, 1011, 126, 2, 28, "Message"],
Cell[40863, 1015, 165, 3, 28, "Message"],
Cell[41031, 1020, 176, 3, 28, "Message"],
Cell[41210, 1025, 162, 3, 28, "Message"],
Cell[41375, 1030, 163, 3, 28, "Message"],
Cell[41541, 1035, 162, 3, 28, "Message"],
Cell[41706, 1040, 162, 3, 28, "Message"],
Cell[41871, 1045, 60622, 1019, 233, 4520, 322, "GraphicsData", "PostScript", \
"Graphics"],
Cell[102496, 2066, 130, 3, 35, "Output"]
}, Open  ]],
Cell[102641, 2072, 26, 0, 35, "Input"],

Cell[CellGroupData[{
Cell[102692, 2076, 79, 1, 35, "Input"],
Cell[102774, 2079, 169, 3, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[102980, 2087, 65, 1, 35, "Input"],
Cell[103048, 2090, 187, 3, 28, "Message"],
Cell[103238, 2095, 38, 1, 51, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[103313, 2101, 298, 6, 35, "Input"],
Cell[103614, 2109, 42, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[103693, 2115, 144, 3, 56, "Input"],
Cell[103840, 2120, 359, 5, 28, "Message"],
Cell[104202, 2127, 1702, 37, 74, "Output"],
Cell[105907, 2166, 563, 11, 205, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[106507, 2182, 70, 1, 35, "Input"],
Cell[106580, 2185, 987, 24, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[107604, 2214, 335, 7, 77, "Input"],
Cell[107942, 2223, 1791, 40, 51, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[109770, 2268, 84, 1, 35, "Input"],
Cell[109857, 2271, 2460, 50, 96, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[112354, 2326, 50, 1, 35, "Input"],
Cell[112407, 2329, 851, 16, 300, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[113295, 2350, 70, 1, 35, "Input"],
Cell[113368, 2353, 987, 24, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[114392, 2382, 772, 15, 224, "Input"],
Cell[115167, 2399, 46, 1, 35, "Output"],
Cell[115216, 2402, 1582, 34, 57, "Output"],
Cell[116801, 2438, 1582, 34, 57, "Output"],
Cell[118386, 2474, 508, 15, 54, "Output"],
Cell[118897, 2491, 530, 15, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[119464, 2511, 407, 8, 77, "Input"],
Cell[119874, 2521, 73, 1, 35, "Output"],
Cell[119950, 2524, 51, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[120038, 2530, 371, 8, 98, "Input"],
Cell[120412, 2540, 54, 1, 36, "Output"],
Cell[120469, 2543, 754, 16, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[121260, 2564, 133, 3, 35, "Input"],
Cell[121396, 2569, 187, 3, 28, "Message"],
Cell[121586, 2574, 42, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[121665, 2580, 376, 7, 119, "Input"],
Cell[122044, 2589, 84, 1, 35, "Output"],
Cell[122131, 2592, 66, 1, 35, "Output"],
Cell[122200, 2595, 63, 1, 35, "Output"],
Cell[122266, 2598, 83, 1, 51, "Output"],
Cell[122352, 2601, 980, 18, 187, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[123369, 2624, 148, 3, 35, "Input"],
Cell[123520, 2629, 186, 3, 51, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[123743, 2637, 81, 1, 35, "Input"],
Cell[123827, 2640, 853, 16, 132, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[124717, 2661, 136, 2, 56, "Input"],
Cell[124856, 2665, 38, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[124931, 2671, 86, 1, 35, "Input"],
Cell[125020, 2674, 47, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[125104, 2680, 85, 1, 36, "Input"],
Cell[125192, 2683, 23069, 541, 233, 4122, 303, "GraphicsData", "PostScript", \
"Graphics"],
Cell[148264, 3226, 130, 3, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[148431, 3234, 340, 6, 81, "Input"],
Cell[148774, 3242, 836, 14, 164, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[149647, 3261, 82, 1, 35, "Input"],
Cell[149732, 3264, 734, 14, 129, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[150503, 3283, 143, 2, 56, "Input"],
Cell[150649, 3287, 38, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[150724, 3293, 170, 4, 56, "Input"],
Cell[150897, 3299, 641, 12, 129, "Output"],
Cell[151541, 3313, 79, 1, 36, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[151657, 3319, 323, 7, 98, "Input"],
Cell[151983, 3328, 89, 1, 36, "Output"],
Cell[152075, 3331, 71, 1, 36, "Output"],
Cell[152149, 3334, 93, 1, 51, "Output"],
Cell[152245, 3337, 83, 1, 51, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[152365, 3343, 83, 1, 35, "Input"],
Cell[152451, 3346, 601, 10, 129, "Output"]
}, Open  ]],
Cell[153067, 3359, 52, 1, 35, "Input"],

Cell[CellGroupData[{
Cell[153144, 3364, 370, 6, 119, "Input"],
Cell[153517, 3372, 78, 1, 51, "Output"],
Cell[153598, 3375, 68, 1, 51, "Output"],
Cell[153669, 3378, 118, 2, 47, "Message"],
Cell[153790, 3382, 118, 2, 47, "Message"],
Cell[153911, 3386, 118, 2, 47, "Message"],
Cell[154032, 3390, 330, 5, 28, "Message"],
Cell[154365, 3397, 49, 1, 35, "Output"],
Cell[154417, 3400, 584, 10, 129, "Output"],
Cell[155004, 3412, 118, 2, 47, "Message"],
Cell[155125, 3416, 35, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[155197, 3422, 93, 1, 35, "Input"],
Cell[155293, 3425, 507, 10, 90, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[155837, 3440, 101, 2, 35, "Input"],
Cell[155941, 3444, 622, 12, 127, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[156600, 3461, 39, 1, 35, "Input"],
Cell[156642, 3464, 90, 1, 51, "Output"]
}, Open  ]],
Cell[156747, 3468, 26, 0, 35, "Input"],

Cell[CellGroupData[{
Cell[156798, 3472, 562, 9, 98, "Input"],
Cell[157363, 3483, 461, 8, 101, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[157861, 3496, 58, 1, 35, "Input"],
Cell[157922, 3499, 507, 10, 90, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[158466, 3514, 150, 3, 56, "Input"],
Cell[158619, 3519, 460, 8, 90, "Output"],
Cell[159082, 3529, 629, 12, 224, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[159748, 3546, 68, 1, 35, "Input"],
Cell[159819, 3549, 90, 1, 51, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[159946, 3555, 148, 2, 56, "Input"],
Cell[160097, 3559, 309, 5, 30, "Message"],
Cell[160409, 3566, 328, 5, 28, "Message"],
Cell[160740, 3573, 311, 5, 28, "Message"],
Cell[161054, 3580, 336, 5, 28, "Message"],
Cell[161393, 3587, 1614, 50, 114, "Output"],
Cell[163010, 3639, 1932, 64, 114, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[164979, 3708, 133, 2, 56, "Input"],
Cell[165115, 3712, 25967, 550, 233, 3990, 274, "GraphicsData", "PostScript", \
"Graphics"],
Cell[191085, 4264, 130, 3, 35, "Output"],
Cell[191218, 4269, 20854, 448, 233, 3209, 226, "GraphicsData", "PostScript", \
"Graphics"],
Cell[212075, 4719, 130, 3, 35, "Output"]
}, Open  ]],
Cell[212220, 4725, 26, 0, 35, "Input"],

Cell[CellGroupData[{
Cell[212271, 4729, 51, 1, 35, "Input"],
Cell[212325, 4732, 40, 0, 34, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[212402, 4737, 774, 15, 224, "Input"],
Cell[213179, 4754, 705, 12, 127, "Output"],
Cell[213887, 4768, 38, 1, 51, "Output"],
Cell[213928, 4771, 80, 1, 58, "Output"],
Cell[214011, 4774, 46, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[214094, 4780, 82, 1, 35, "Input"],
Cell[214179, 4783, 513, 10, 90, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[214729, 4798, 193, 3, 56, "Input"],
Cell[214925, 4803, 92, 1, 59, "Output"],
Cell[215020, 4806, 643, 20, 52, "Output"]
}, Open  ]],
Cell[215678, 4829, 26, 0, 35, "Input"],
Cell[215707, 4831, 550, 9, 77, "Input"],

Cell[CellGroupData[{
Cell[216282, 4844, 60, 1, 35, "Input"],
Cell[216345, 4847, 1175, 26, 78, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[217557, 4878, 291, 7, 77, "Input"],
Cell[217851, 4887, 2626, 39, 400, "Output"],
Cell[220480, 4928, 1526, 23, 279, "Output"]
}, Open  ]],
Cell[222021, 4954, 112, 2, 35, "Input"],

Cell[CellGroupData[{
Cell[222158, 4960, 1282, 25, 182, "Input"],
Cell[223443, 4987, 2060, 40, 81, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[225540, 5032, 650, 16, 35, "Input"],
Cell[226193, 5050, 71, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[226301, 5056, 746, 18, 35, "Input"],
Cell[227050, 5076, 618, 14, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[227705, 5095, 388, 7, 77, "Input"],
Cell[228096, 5104, 73, 1, 35, "Output"],
Cell[228172, 5107, 51, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[228260, 5113, 314, 6, 77, "Input"],
Cell[228577, 5121, 54, 1, 36, "Output"],
Cell[228634, 5124, 363, 5, 28, "Message"],
Cell[229000, 5131, 787, 16, 57, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[229824, 5152, 108, 2, 35, "Input"],
Cell[229935, 5156, 358, 5, 28, "Message"],
Cell[230296, 5163, 298, 4, 28, "Message"],
Cell[230597, 5169, 298, 4, 28, "Message"],
Cell[230898, 5175, 298, 4, 28, "Message"],
Cell[231199, 5181, 330, 5, 28, "Message"],
Cell[231532, 5188, 924, 16, 155, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[232493, 5209, 76, 1, 35, "Input"],
Cell[232572, 5212, 102, 2, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[232711, 5219, 85, 1, 35, "Input"],
Cell[232799, 5222, 74, 1, 36, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[232910, 5228, 83, 1, 35, "Input"],
Cell[232996, 5231, 91, 1, 51, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[233124, 5237, 128, 3, 35, "Input"],
Cell[233255, 5242, 597, 11, 88, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[233889, 5258, 116, 2, 35, "Input"],
Cell[234008, 5262, 181, 4, 51, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[234226, 5271, 77, 1, 35, "Input"],
Cell[234306, 5274, 761, 14, 132, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[235104, 5293, 315, 6, 81, "Input"],
Cell[235422, 5301, 642, 9, 137, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[236101, 5315, 207, 4, 77, "Input"],
Cell[236311, 5321, 38, 1, 35, "Output"],
Cell[236352, 5324, 79, 1, 36, "Output"],
Cell[236434, 5327, 61, 1, 36, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[236532, 5333, 110, 2, 35, "Input"],
Cell[236645, 5337, 83, 1, 51, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[236765, 5343, 78, 1, 35, "Input"],
Cell[236846, 5346, 523, 10, 90, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[237406, 5361, 148, 2, 56, "Input"],
Cell[237557, 5365, 118, 2, 47, "Message"],
Cell[237678, 5369, 50, 1, 35, "Output"],
Cell[237731, 5372, 68, 1, 51, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[237836, 5378, 60, 1, 35, "Input"],
Cell[237899, 5381, 20516, 462, 233, 3487, 247, "GraphicsData", "PostScript", \
"Graphics"],
Cell[258418, 5845, 130, 3, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[258585, 5853, 107, 2, 35, "Input"],
Cell[258695, 5857, 692, 12, 127, "Output"]
}, Open  ]],
Cell[259402, 5872, 48, 1, 35, "Input"],

Cell[CellGroupData[{
Cell[259475, 5877, 365, 6, 98, "Input"],
Cell[259843, 5885, 692, 12, 127, "Output"],
Cell[260538, 5899, 42, 1, 35, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[260617, 5905, 502, 9, 98, "Input"],
Cell[261122, 5916, 171, 3, 54, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[261330, 5924, 499, 9, 98, "Input"],
Cell[261832, 5935, 276, 4, 28, "Message"],
Cell[262111, 5941, 276, 4, 28, "Message"],
Cell[262390, 5947, 276, 4, 28, "Message"],
Cell[262669, 5953, 331, 5, 28, "Message"],
Cell[263003, 5960, 310, 4, 28, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[263350, 5969, 291, 7, 77, "Input"],
Cell[263644, 5978, 47, 1, 35, "Output"],
Cell[263694, 5981, 47, 1, 35, "Output"]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

