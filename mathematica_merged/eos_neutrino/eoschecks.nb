(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.0'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     60845,       1671]*)
(*NotebookOutlinePosition[     61489,       1693]*)
(*  CellTagsIndexPosition[     61445,       1689]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
    \(myrho = 10^\((12)\)\), "\[IndentingNewLine]", 
    \(myT = 10^9\)}], "Input"],

Cell[BoxData[
    \(1000000000000\)], "Output"],

Cell[BoxData[
    \(1000000000\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(gn = 2\), "\[IndentingNewLine]", 
    \(hbar = h/\((2*Pi)\)\), "\[IndentingNewLine]", 
    \(degennonrel = 
      gn*\((mn*kb*myT/\((2*Pi*hbar^2)\))\)^\((3/
              2)\)\), "\[IndentingNewLine]", 
    \(ndenp/
      degennonrel\  (*\ \(>>\)\(\ \)\(1\)\ *) \), "\[IndentingNewLine]", 
    \(\(\((mn*c^2)\)\(/\)\((kb*
          myT)\)\(\ \)\( (*\ \(>>\)\(1\ then\ degen\ cond\ above\)\ *) \
\)\)\)}], "Input"],

Cell[BoxData[
    \(2\)], "Output"],

Cell[BoxData[
    \(1.054592483915517`*^-27\)], "Output"],

Cell[BoxData[
    \(1.2040625605078453`*^34\)], "Output"],

Cell[BoxData[
    \(1.5692914630668662`\)], "Output"],

Cell[BoxData[
    \(10902.79900816217`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(ge = 2\), "\[IndentingNewLine]", 
    \(degenrel = 
      ge*\((\((kb*myT)\)/\((hbar*c)\))\)^3/Pi^2\), "\[IndentingNewLine]", 
    \(ndene/degenrel\), "\[IndentingNewLine]", 
    \(\((kb*myT)\)\ /\((me*c^2)\)\)}], "Input"],

Cell[BoxData[
    \(2\)], "Output"],

Cell[BoxData[
    \(1.6877654827182167`*^28\)], "Output"],

Cell[BoxData[
    \(1.119542446240952`*^6\)], "Output"],

Cell[BoxData[
    \(0.1686432682953051`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ KM02\ eq\ 20\ *) \)\(\[IndentingNewLine]\)\(Solve[
      ndenp \[Equal] A*Exp[\(-\((B - mup)\)\)/\((kb*T)\)], 
      mup]\[IndentingNewLine]
    Solve[ndenp \[Equal] A*\((B*mupp)\)^\((3/2)\), mupp]\)\)\)], "Input"],

Cell[BoxData[
    RowBox[{\(Solve::"ifun"\), \(\(:\)\(\ \)\), "\<\"Inverse functions are \
being used by \\!\\(Solve\\), so some solutions may not be found; use Reduce \
for complete solution information. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Solve::ifun\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \({{mup \[Rule] 
          1.3807`*^-16\ \((7.242702976750924`*^15\ B + 
                T\ Log[1.8895250972033936`*^34\/A])\)}}\)], "Output"],

Cell[BoxData[
    \({{mupp \[Rule] \(-\(\(3.5470865115421514`*^22 + 
                  6.143734056833255`*^22\ \[ImaginaryI]\)\/\(A\^\(2/3\)\ \
B\)\)\)}, {mupp \[Rule] \(-\(\(3.5470865115421514`*^22 - 
                  6.143734056833255`*^22\ \[ImaginaryI]\)\/\(A\^\(2/3\)\ \
B\)\)\)}, {mupp \[Rule] 
          7.094173023084303`*^22\/\(A\^\(2/3\)\ B\)}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(myT\)], "Input"],

Cell[BoxData[
    \(1000000000\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(me*c^2\)], "Input"],

Cell[BoxData[
    \(8.187104139741329`*^-7\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Trat = kb*myT/\((me*c^2)\)\), "\[IndentingNewLine]", 
    \(mueeq = 
      myrho/mp*Exp[\((QE - mue)\)/\((kb*myT)\)] - 
        1/\((3*Pi^2)\)*\((mue/\((hbar*c)\))\)^3\), "\[IndentingNewLine]", 
    \(truemue = \(NSolve[mueeq, mue]\)[\([3, 1, 
          2]\)]\[IndentingNewLine] (*FindRoot[
        myrho/mp*Exp[\(-mue\)/\((kb*myT)\)] \[Equal] 
          1/\((3*Pi^2)\)*\((mue/\((hbar*c)\))\)^3, {mue, 
          100}]*) \), "\[IndentingNewLine]", 
    \(muerat = truemue/\((me*c^2)\)\), "\[IndentingNewLine]", 
    \(mp*c^2\), "\[IndentingNewLine]", 
    \(newf = \((me*c)\)^3/\((hbar^3*Pi^2)\)*
        u^2/\((Exp[\((Sqrt[u^2 + 1] - muerat)\)/Trat] + 
              1)\)\), "\[IndentingNewLine]", 
    \(newf2 = \((me*c)\)^3/\((hbar^3*Pi^2)\)*
        u^2/\((Exp[\((Sqrt[u^2 + 1] + muerat)\)/Trat] + 
              1)\)\), "\[IndentingNewLine]", 
    \(NIntegrate[newf, {u, 0, Infinity}]\), "\[IndentingNewLine]", 
    \(NIntegrate[newf2, {u, 0, Infinity}]\)}], "Input"],

Cell[BoxData[
    \(0.16864326829530507`\)], "Output"],

Cell[BoxData[
    \(5.978638635046188`*^35\ \[ExponentialE]\^\(7.242702976750924`*^6\ \
\((2.072151964992158`*^-6 - mue)\)\) - 
      1.0687173888311486`*^48\ mue\^3\)], "Output"],

Cell[BoxData[
    RowBox[{\(InverseFunction::"ifun"\), \(\(:\)\(\ \)\), "\<\"Inverse \
functions are being used. Values may be lost for multivalued inverses. \\!\\(\
\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, ButtonData:>\\\"InverseFunction::ifun\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(InverseFunction::"ifun"\), \(\(:\)\(\ \)\), "\<\"Inverse \
functions are being used. Values may be lost for multivalued inverses. \\!\\(\
\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, ButtonData:>\\\"InverseFunction::ifun\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(InverseFunction::"ifun"\), \(\(:\)\(\ \)\), "\<\"Inverse \
functions are being used. Values may be lost for multivalued inverses. \\!\\(\
\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, ButtonData:>\\\"InverseFunction::ifun\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(InverseFunction :: \\\"ifun\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Solve::"ifun"\), \(\(:\)\(\ \)\), "\<\"Inverse functions are \
being used by \\!\\(Solve\\), so some solutions may not be found; use Reduce \
for complete solution information. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Solve::ifun\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \(3.3933698459175376`*^-6\)], "Output"],

Cell[BoxData[
    \(4.144774254727815`\)], "Output"],

Cell[BoxData[
    \(0.0015032773070919585`\)], "Output"],

Cell[BoxData[
    \(\(1.759442484080125`*^30\ u\^2\)\/\(1 + \
\[ExponentialE]\^\(5.9296763523874345`\ \((\(-4.144774254727815`\) + \@\(1 + \
u\^2\))\)\)\)\)], "Output"],

Cell[BoxData[
    \(\(1.759442484080125`*^30\ u\^2\)\/\(1 + \
\[ExponentialE]\^\(5.9296763523874345`\ \((\(\(4.144774254727815`\)\(\
\[InvisibleSpace]\)\) + \@\(1 + u\^2\))\)\)\)\)], "Output"],

Cell[BoxData[
    \(3.884959727520408`*^31\)], "Output"],

Cell[BoxData[
    \(1.1520616851170842`*^16\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(ndenp = 
      1/\((3*Pi^2)\)*\((truemue/\((hbar*c)\))\)^3\), "\[IndentingNewLine]", 
    \(truemup = \(Solve[
          ndenp \[Equal] 
            2*\((mp*kb*myT/\((2*Pi*hbar^2)\))\)^\((3/2)\)*
              Exp[\(-\((mp*c^2 - mup)\)\)/\((kb*myT)\)], mup]\)[\([1, 1, 
          2]\)]\), "\[IndentingNewLine]", 
    \(Trat = kb*myT/\((mp*c^2)\)\), "\[IndentingNewLine]", 
    \(muprat = truemup/\((mp*c^2)\)\), "\[IndentingNewLine]", 
    \(fp = \((mp*c)\)^3/\((hbar^3*Pi^2)\)*
        u^2/\((Exp[\((Sqrt[u^2 + 1] - muprat)\)/Trat] + 
              1)\)\), "\[IndentingNewLine]", 
    \(NIntegrate[fp, {u, 0, Infinity}]\)}], "Input"],

Cell[BoxData[
    \(4.175961294190099`*^31\)], "Output"],

Cell[BoxData[
    RowBox[{\(Solve::"ifun"\), \(\(:\)\(\ \)\), "\<\"Inverse functions are \
being used by \\!\\(Solve\\), so some solutions may not be found; use Reduce \
for complete solution information. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Solve::ifun\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \(0.0015024955484293954`\)], "Output"],

Cell[BoxData[
    \(0.00009184599497952375`\)], "Output"],

Cell[BoxData[
    \(0.9994799637705731`\)], "Output"],

Cell[BoxData[
    \(\(1.0891844569134254`*^40\ u\^2\)\/\(1 + \
\[ExponentialE]\^\(10887.79102695704`\ \((\(-0.9994799637705731`\) + \@\(1 + \
u\^2\))\)\)\)\)], "Output"],

Cell[BoxData[
    \(4.171558546498538`*^31\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(truemun = truemup + truemue\), "\[IndentingNewLine]", 
    \(Trat = kb*myT/\((mn*c^2)\)\), "\[IndentingNewLine]", 
    \(munrat = truemun/\((mn*c^2)\)\), "\[IndentingNewLine]", 
    \(fn = \((mn*c)\)^3/\((hbar^3*Pi^2)\)*
        u^2/\((Exp[\((Sqrt[u^2 + 1] - munrat)\)/Trat] + 
              1)\)\), "\[IndentingNewLine]", 
    \(ndenn = NIntegrate[fn, {u, 0, Infinity}]\)}], "Input"],

Cell[BoxData[
    \(0.001505888918275313`\)], "Output"],

Cell[BoxData[
    \(0.0000917195666224214`\)], "Output"],

Cell[BoxData[
    \(1.000358361452297`\)], "Output"],

Cell[BoxData[
    \(\(1.0936947388906784`*^40\ u\^2\)\/\(1 + \
\[ExponentialE]\^\(10902.79900816217`\ \((\(-1.000358361452297`\) + \@\(1 + u\
\^2\))\)\)\)\)], "Output"],

Cell[BoxData[
    \(7.600168007462434`*^34\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(ndenn\), "\[IndentingNewLine]", 
    \(ndenp\), "\[IndentingNewLine]", 
    \(ndene\)}], "Input"],

Cell[BoxData[
    \(7.600168007462434`*^34\)], "Output"],

Cell[BoxData[
    \(4.175961294190099`*^31\)], "Output"],

Cell[BoxData[
    \(1.8895250972033936`*^34\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Ye = ndene/\((ndenp + ndenn)\)\)], "Input"],

Cell[BoxData[
    \(0.24847969857317584`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(myrho/mn\)], "Input"],

Cell[BoxData[
    \(5.970408886318375`*^23\ myrho\)], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(froot[
        T_] := \(FindRoot[
          myrho/mp*Exp[\(-mue\)/\((kb*T)\)] \[Equal] 
            1/\((3*Pi^2)\)*\((mue/\((hbar*c)\))\)^3, {mue, 100}]\)[\([1, 
          2]\)]\), "\[IndentingNewLine]", 
    \(froot[myT]\), "\[IndentingNewLine]", 
    \(froot[me*c^2/kb]\), "\[IndentingNewLine]", 
    \(froot[2*10^10]\), "\[IndentingNewLine]", 
    \(degennmue = 
      6.628*ergPmev*\((myrho/10^\((13)\))\)^\((2/
              3)\)\), "\[IndentingNewLine]", 
    \(thendene[T_] := 
      1/\((3*Pi^2)\)*\((froot[T]/\((hbar*c)\))\)^3\), "\[IndentingNewLine]", 
    \(thendene[myT]\), "\[IndentingNewLine]", 
    \(thedegennndene = 
      1/\((3*Pi^2)\)*\((degennmue/\((hbar*
                  c)\))\)^3\), "\[IndentingNewLine]", 
    \(ndene\), "\[IndentingNewLine]", 
    \(Plot[{Log[10, froot[10^x]], Log[10, degennmue]}, {x, 0, 
        13}]\), "\[IndentingNewLine]", 
    \(Plot[{Log[10, thendene[10^x]], Log[10, ndene], 
        Log[10, thedegennndene]}, {x, 0, 13}]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(FindRoot::"lstol"\), \(\(:\)\(\ \)\), "\<\"The line search \
decreased the step size to within tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the merit \
function.  You may need more than \\!\\(MachinePrecision\\) digits of working \
precision to meet these tolerances. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"FindRoot::lstol\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \(2.9232033635489407`*^-6\)], "Output"],

Cell[BoxData[
    RowBox[{\(FindRoot::"lstol"\), \(\(:\)\(\ \)\), "\<\"The line search \
decreased the step size to within tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the merit \
function.  You may need more than \\!\\(MachinePrecision\\) digits of working \
precision to meet these tolerances. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"FindRoot::lstol\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \(4.380294274497289`*^-6\)], "Output"],

Cell[BoxData[
    RowBox[{\(FindRoot::"lstol"\), \(\(:\)\(\ \)\), "\<\"The line search \
decreased the step size to within tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the merit \
function.  You may need more than \\!\\(MachinePrecision\\) digits of working \
precision to meet these tolerances. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"FindRoot::lstol\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \(8.900611396324266`*^-6\)], "Output"],

Cell[BoxData[
    \(2.2888152474794128`*^-7\)], "Output"],

Cell[BoxData[
    RowBox[{\(FindRoot::"lstol"\), \(\(:\)\(\ \)\), "\<\"The line search \
decreased the step size to within tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the merit \
function.  You may need more than \\!\\(MachinePrecision\\) digits of working \
precision to meet these tolerances. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"FindRoot::lstol\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \(2.669561712392774`*^31\)], "Output"],

Cell[BoxData[
    \(1.2814305973056163`*^28\)], "Output"],

Cell[BoxData[
    \(1.8895250972033936`*^34\)], "Output"],

Cell[BoxData[
    RowBox[{\(General::"unfl"\), \(\(:\)\(\ \)\), "\<\"Underflow occurred in \
computation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::unfl\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"lstol"\), \(\(:\)\(\ \)\), "\<\"The line search \
decreased the step size to within tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the merit \
function.  You may need more than \\!\\(MachinePrecision\\) digits of working \
precision to meet these tolerances. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"FindRoot::lstol\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"unfl"\), \(\(:\)\(\ \)\), "\<\"Underflow occurred in \
computation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::unfl\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"lstol"\), \(\(:\)\(\ \)\), "\<\"The line search \
decreased the step size to within tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the merit \
function.  You may need more than \\!\\(MachinePrecision\\) digits of working \
precision to meet these tolerances. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"FindRoot::lstol\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"unfl"\), \(\(:\)\(\ \)\), "\<\"Underflow occurred in \
computation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::unfl\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(General :: \\\"unfl\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"lstol"\), \(\(:\)\(\ \)\), "\<\"The line search \
decreased the step size to within tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the merit \
function.  You may need more than \\!\\(MachinePrecision\\) digits of working \
precision to meet these tolerances. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"FindRoot::lstol\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(FindRoot :: \\\"lstol\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"frmp"\), \(\(:\)\(\ \)\), "\<\"Machine precision is \
insufficient to achieve the accuracy \\!\\({1.0536712127723497`*^-8, \
1.0536712127723497`*^-8}\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"FindRoot::frmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"frmp"\), \(\(:\)\(\ \)\), "\<\"Machine precision is \
insufficient to achieve the accuracy \\!\\({1.0536712127723497`*^-8, \
1.0536712127723497`*^-8}\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"FindRoot::frmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"frmp"\), \(\(:\)\(\ \)\), "\<\"Machine precision is \
insufficient to achieve the accuracy \\!\\({1.0536712127723497`*^-8, \
1.0536712127723497`*^-8}\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"FindRoot::frmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(FindRoot :: \\\"frmp\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0732601 0.886917 0.0618308 [
[.17033 .37977 -3 -9 ]
[.17033 .37977 3 0 ]
[.31685 .37977 -3 -9 ]
[.31685 .37977 3 0 ]
[.46337 .37977 -3 -9 ]
[.46337 .37977 3 0 ]
[.60989 .37977 -3 -9 ]
[.60989 .37977 3 0 ]
[.75641 .37977 -6 -9 ]
[.75641 .37977 6 0 ]
[.90293 .37977 -6 -9 ]
[.90293 .37977 6 0 ]
[.01131 .02129 -18 -4.5 ]
[.01131 .02129 0 4.5 ]
[.01131 .14495 -18 -4.5 ]
[.01131 .14495 0 4.5 ]
[.01131 .26861 -18 -4.5 ]
[.01131 .26861 0 4.5 ]
[.01131 .51593 -12 -4.5 ]
[.01131 .51593 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.17033 .39227 m
.17033 .39852 L
s
[(2)] .17033 .37977 0 1 Mshowa
.31685 .39227 m
.31685 .39852 L
s
[(4)] .31685 .37977 0 1 Mshowa
.46337 .39227 m
.46337 .39852 L
s
[(6)] .46337 .37977 0 1 Mshowa
.60989 .39227 m
.60989 .39852 L
s
[(8)] .60989 .37977 0 1 Mshowa
.75641 .39227 m
.75641 .39852 L
s
[(10)] .75641 .37977 0 1 Mshowa
.90293 .39227 m
.90293 .39852 L
s
[(12)] .90293 .37977 0 1 Mshowa
.125 Mabswid
.06044 .39227 m
.06044 .39602 L
s
.09707 .39227 m
.09707 .39602 L
s
.1337 .39227 m
.1337 .39602 L
s
.20696 .39227 m
.20696 .39602 L
s
.24359 .39227 m
.24359 .39602 L
s
.28022 .39227 m
.28022 .39602 L
s
.35348 .39227 m
.35348 .39602 L
s
.39011 .39227 m
.39011 .39602 L
s
.42674 .39227 m
.42674 .39602 L
s
.5 .39227 m
.5 .39602 L
s
.53663 .39227 m
.53663 .39602 L
s
.57326 .39227 m
.57326 .39602 L
s
.64652 .39227 m
.64652 .39602 L
s
.68315 .39227 m
.68315 .39602 L
s
.71978 .39227 m
.71978 .39602 L
s
.79304 .39227 m
.79304 .39602 L
s
.82967 .39227 m
.82967 .39602 L
s
.8663 .39227 m
.8663 .39602 L
s
.93956 .39227 m
.93956 .39602 L
s
.97619 .39227 m
.97619 .39602 L
s
.25 Mabswid
0 .39227 m
1 .39227 L
s
.02381 .02129 m
.03006 .02129 L
s
[(-14)] .01131 .02129 1 0 Mshowa
.02381 .14495 m
.03006 .14495 L
s
[(-12)] .01131 .14495 1 0 Mshowa
.02381 .26861 m
.03006 .26861 L
s
[(-10)] .01131 .26861 1 0 Mshowa
.02381 .51593 m
.03006 .51593 L
s
[(-6)] .01131 .51593 1 0 Mshowa
.125 Mabswid
.02381 .0522 m
.02756 .0522 L
s
.02381 .08312 m
.02756 .08312 L
s
.02381 .11403 m
.02756 .11403 L
s
.02381 .17586 m
.02756 .17586 L
s
.02381 .20678 m
.02756 .20678 L
s
.02381 .23769 m
.02756 .23769 L
s
.02381 .29952 m
.02756 .29952 L
s
.02381 .33044 m
.02756 .33044 L
s
.02381 .36136 m
.02756 .36136 L
s
.02381 .42319 m
.02756 .42319 L
s
.02381 .4541 m
.02756 .4541 L
s
.02381 .48502 m
.02756 .48502 L
s
.02381 .54685 m
.02756 .54685 L
s
.02381 .57776 m
.02756 .57776 L
s
.02381 .60868 m
.02756 .60868 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .01472 m
.06244 .04857 L
.10458 .08329 L
.14415 .11524 L
.18221 .14563 L
.22272 .17786 L
.26171 .20875 L
.30316 .24141 L
.34309 .27268 L
.3815 .30256 L
.42237 .33408 L
.46172 .36412 L
.49955 .39265 L
.53984 .42254 L
.57861 .45072 L
.61984 .47983 L
.65954 .50676 L
.69774 .53118 L
.73838 .55484 L
.77751 .57422 L
.79749 .58234 L
.81909 .5895 L
.82924 .59223 L
.83996 .59468 L
.85916 .59803 L
.86864 .59925 L
.8788 .60028 L
.88839 .60105 L
.89713 .6016 L
.90705 .60208 L
.91622 .60242 L
.92628 .6027 L
.93698 .60292 L
.94635 .60306 L
.95645 .60318 L
.96598 .60326 L
.97473 .60331 L
.97619 .60332 L
s
.02381 .47634 m
.06244 .47634 L
.10458 .47634 L
.14415 .47634 L
.18221 .47634 L
.22272 .47634 L
.26171 .47634 L
.30316 .47634 L
.34309 .47634 L
.3815 .47634 L
.42237 .47634 L
.46172 .47634 L
.49955 .47634 L
.53984 .47634 L
.57861 .47634 L
.61984 .47634 L
.65954 .47634 L
.69774 .47634 L
.73838 .47634 L
.77751 .47634 L
.81909 .47634 L
.85916 .47634 L
.89771 .47634 L
.93871 .47634 L
.97619 .47634 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`005@3oool00`000000oooo0?oo
o`3o0?ooo`T0oooo000E0?ooo`030000003oool0oooo0?l0oooo2@3oool001D0oooo00<000000?oo
o`3oool0o`3oool90?ooo`005@3oool00`000000oooo0?ooo`3o0?ooo`T0oooo00070?ooo`D00000
0`3oool3000000<0oooo00<000000?ooo`3oool0o`3oool90?ooo`002@3oool00`000000oooo0?oo
o`040?ooo`030000003oool0oooo0080oooo0P00003o0?ooo`X0oooo00090?ooo`040000003oool0
oooo0?ooo`D000000`3oool300000?l0oooo2@3oool000030?ooo`000000000000800000103oool0
1@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`00003o0?ooo`P0oooo00090?ooo`030000003oool0oooo0080oooo00<000000?ooo`000000103o
ool01@000000oooo0?ooo`3oool000000?l0oooo1`3oool000P0oooo0P0000050?ooo`800000103o
ool00`000000oooo0?ooo`020?ooo`800000o`3oool50?ooo`005@3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo0?l0oooo0P3oool001D0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`3o0?ooo`40oooo000E0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3o
ool0o`3oool001D0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3n0?ooo`005@3o
ool2000000T0oooo00<000000?ooo`3oool0o@3oool001D0oooo00<000000?ooo`3oool02@3oool0
0`000000oooo0?ooo`3l0?ooo`005@3oool00`000000oooo0?ooo`0:0?ooo`800000o03oool001D0
oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`3i0?ooo`005@3oool00`000000oooo
0?ooo`0=0?ooo`030000003oool0oooo0?P0oooo000E0?ooo`030000003oool0oooo00h0oooo00<0
00000?ooo`3oool0m`3oool001D0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`3f
0?ooo`005@3oool00`000000oooo0?ooo`0@0?ooo`800000mP3oool001D0oooo00<000000?ooo`3o
ool04P3oool00`000000oooo0?ooo`3c0?ooo`005@3oool2000001@0oooo00<000000?ooo`3oool0
lP3oool001D0oooo00<000000?ooo`3oool0503oool200000?80oooo000E0?ooo`030000003oool0
oooo01H0oooo00<000000?ooo`3oool0k`3oool001D0oooo00<000000?ooo`3oool05`3oool00`00
0000oooo0?ooo`3^0?ooo`005@3oool00`000000oooo0?ooo`0H0?ooo`800000kP3oool001D0oooo
00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`3[0?ooo`005@3oool00`000000oooo0?oo
o`0K0?ooo`030000003oool0oooo0>X0oooo000E0?ooo`030000003oool0oooo01`0oooo0P00003Z
0?ooo`005@3oool2000001l0oooo00<000000?ooo`3oool0i`3oool001D0oooo00<000000?ooo`3o
ool07`3oool00`000000oooo0?ooo`3V0?ooo`005@3oool00`000000oooo0?ooo`0P0?ooo`030000
003oool0oooo0>D0oooo000E0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0i03o
ool001D0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`3S0?ooo`005@3oool00`00
0000oooo0?ooo`0S0?ooo`800000h`3oool000L0oooo1@0000000`3oool0000000000002000000@0
oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`3P0?ooo`002@3oool01@000000oooo
0?ooo`3oool0000000L0oooo00<000000?ooo`3oool09P3oool00`000000oooo0?ooo`3O0?ooo`00
2@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00@0oooo0`00000W0?ooo`030000
003oool0oooo0=h0oooo00000`3oool0000000000002000000@0oooo00<000000?ooo`3oool00`3o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo02P0oooo00<000000?ooo`3oool0g@3o
ool000T0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0:@3oool200000=d0oooo00080?ooo`800000103oool2000000D0oooo00<00000
0?ooo`3oool0:`3oool00`000000oooo0?ooo`3J0?ooo`005@3oool00`000000oooo0?ooo`0/0?oo
o`030000003oool0oooo0=T0oooo000E0?ooo`030000003oool0oooo02d0oooo0P00003I0?ooo`00
5@3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003o
ool0oooo0300oooo00<000000?ooo`3oool0e@3oool001D0oooo00<000000?ooo`3oool0<@3oool2
00000=D0oooo000E0?ooo`800000=03oool00`000000oooo0?ooo`3B0?ooo`005@3oool00`000000
oooo0?ooo`0d0?ooo`030000003oool0oooo0=40oooo000E0?ooo`030000003oool0oooo03D0oooo
0P00003A0?ooo`005@3oool00`000000oooo0?ooo`0g0?ooo`030000003oool0oooo0<h0oooo000E
0?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3oool0c@3oool001D0oooo00<000000?oo
o`3oool0>@3oool00`000000oooo0?ooo`3<0?ooo`005@3oool00`000000oooo0?ooo`0j0?ooo`03
0000003oool0oooo0</0oooo000E0?ooo`030000003oool0oooo03/0oooo0P00003;0?ooo`005@3o
ool2000003h0oooo00<000000?ooo`3oool0b03oool001D0oooo00<000000?ooo`3oool0?P3oool0
0`000000oooo0?ooo`370?ooo`005@3oool00`000000oooo0?ooo`0o0?ooo`030000003oool0oooo
0<H0oooo000E0?ooo`030000003oool0oooo0400oooo0P0000360?ooo`005@3oool00`000000oooo
0?ooo`120?ooo`030000003oool0oooo0<<0oooo000E0?ooo`030000003oool0oooo04<0oooo00<0
00000?ooo`3oool0`P3oool001D0oooo00<000000?ooo`3oool0A03oool00`000000oooo0?ooo`31
0?ooo`005@3oool00`000000oooo0?ooo`150?ooo`030000003oool0oooo0<00oooo000E0?ooo`03
0000003oool0oooo04H0oooo0P0000300?ooo`005@3oool2000004T0oooo00<000000?ooo`3oool0
_@3oool001D0oooo00<000000?ooo`3oool0B@3oool00`000000oooo0?ooo`2l0?ooo`005@3oool0
0`000000oooo0?ooo`1:0?ooo`800000_03oool001D0oooo00<000000?ooo`3oool0C03oool00`00
0000oooo0?ooo`2i0?ooo`005@3oool00`000000oooo0?ooo`1=0?ooo`030000003oool0oooo0;P0
oooo000E0?ooo`030000003oool0oooo04h0oooo0P00002h0?ooo`001`3oool500000080oooo0P00
00050?ooo`030000003oool0oooo0500oooo00<000000?ooo`3oool0]@3oool000T0oooo00D00000
0?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0D@3o
ool00`000000oooo0?ooo`2d0?ooo`002@3oool01@000000oooo0?ooo`3oool000000080oooo00<0
00000?ooo`3oool00P3oool300000580oooo0P00002d0?ooo`0000<0oooo0000000000000P000004
0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo05@0oooo00<000000?ooo`3oool0/@3oool000T0oooo00D000000?ooo`3oool0oooo0000
00020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0E@3oool00`000000oooo0?oo
o`2`0?ooo`00203oool2000000@0oooo0P0000050?ooo`030000003oool0oooo05H0oooo0P00002`
0?ooo`005@3oool00`000000oooo0?ooo`1H0?ooo`030000003oool0oooo0:d0oooo000E0?ooo`03
0000003oool0oooo05T0oooo00<000000?ooo`3oool0[03oool001D0oooo00<000000?ooo`3oool0
FP3oool00`000000oooo0?ooo`2[0?ooo`005@3oool00`000000oooo0?ooo`1K0?ooo`800000Z`3o
ool001D0oooo0P00001N0?ooo`030000003oool0oooo0:P0oooo000E0?ooo`030000003oool0oooo
05h0oooo00<000000?ooo`3oool0Y`3oool001D0oooo00<000000?ooo`3oool0G`3oool00`000000
oooo0?ooo`2V0?ooo`005@3oool00`000000oooo0?ooo`1P0?ooo`800000YP3oool001D0oooo00<0
00000?ooo`3oool0HP3oool00`000000oooo0?ooo`2S0?ooo`005@3oool00`000000oooo0?ooo`1S
0?ooo`030000003oool0oooo0:80oooo000E0?ooo`030000003oool0oooo06@0oooo00<000000?oo
o`3oool0X@3oool001D0oooo00<000000?ooo`3oool0I@3oool00`000000oooo0?ooo`2P0?ooo`00
5@3oool00`000000oooo0?ooo`1V0?ooo`800000X03oool001D0oooo0P00001Y0?ooo`030000003o
ool0oooo09d0oooo000E0?ooo`030000003oool0oooo06T0oooo00<000000?ooo`3oool0W03oool0
01D0oooo00<000000?ooo`3oool0JP3oool2000009`0oooo000E0?ooo`030000003oool0oooo06`0
oooo00<000000?ooo`3oool0V@3oool001D0oooo00<000000?ooo`3oool0K@3oool00`000000oooo
0?ooo`2H0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`@000009P3oool3000001h0oooo0P00
00020?ooo`<000009P3oool200000280oooo1@0000020?ooo`8000007`3oool5000000030?ooo`00
00000000008000005`3oool001D0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0X
0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`0000000P3oool00`000000oooo0?ooo`0R
0?ooo`040000003oool0oooo000002<0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000
003oool0oooo01h0oooo00D000000?ooo`3oool0oooo0000000J0?ooo`005@3oool00`000000oooo
0?ooo`0T0?ooo`030000003oool0oooo02@0oooo1@00000Q0?ooo`8000000P3oool00`000000oooo
0?ooo`0R0?ooo`040000003oool0oooo000002<0oooo00D000000?ooo`3oool0oooo000000020?oo
o`030000003oool0oooo01h0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0G0?oo
o`005@3oool2000002H0oooo00<000000?ooo`3oool08`3oool010000000oooo0?ooo`00000S0?oo
o`<000009P3oool2000002@0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0
oooo01h0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0F0?ooo`005@3oool00`00
0000oooo0?ooo`0S0?ooo`040000003oool0oooo000002D0oooo00<000000?ooo`000000903oool2
000002D0oooo00@000000?ooo`3oool000008`3oool01@000000oooo0?ooo`3oool000000080oooo
00<000000?ooo`3oool07P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3o
ool05@3oool001D0oooo00<000000?ooo`3oool0903oool2000002L0oooo0P00000T0?ooo`<00000
9@3oool2000002<0oooo0P0000040?ooo`800000803oool2000000@0oooo0P00000H0?ooo`005@3o
ool00`000000oooo0?ooo`1f0?ooo`800000T03oool001D0oooo00<000000?ooo`3oool0N03oool0
0`000000oooo0?ooo`2=0?ooo`005@3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo
08`0oooo000E0?ooo`030000003oool0oooo07X0oooo00<000000?ooo`3oool0R`3oool001D0oooo
00<000000?ooo`3oool0N`3oool2000008/0oooo000E0?ooo`030000003oool0oooo07d0oooo00<0
00000?ooo`3oool0R03oool000h0ooooo`00000C000000005@3oool00`000000oooo0?ooo`070?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`070?oo
o`<000001`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`050?ooo`005@3oool00`000000oooo0?ooo`210?ooo`03
0000003oool0oooo08@0oooo000E0?ooo`030000003oool0oooo0880oooo00<000000?ooo`3oool0
P`3oool001D0oooo00<000000?ooo`3oool0P`3oool2000008<0oooo000E0?ooo`030000003oool0
oooo08D0oooo00<000000?ooo`3oool0P03oool001D0oooo00<000000?ooo`3oool0QP3oool00`00
0000oooo0?ooo`1o0?ooo`005@3oool00`000000oooo0?ooo`270?ooo`800000O`3oool001D0oooo
0P00002:0?ooo`030000003oool0oooo07`0oooo000E0?ooo`030000003oool0oooo08X0oooo0P00
001l0?ooo`005@3oool00`000000oooo0?ooo`2<0?ooo`030000003oool0oooo07T0oooo000E0?oo
o`030000003oool0oooo08d0oooo00<000000?ooo`3oool0N03oool001D0oooo00<000000?ooo`3o
ool0SP3oool2000007P0oooo000E0?ooo`030000003oool0oooo0900oooo00<000000?ooo`3oool0
M@3oool001D0oooo00<000000?ooo`3oool0T@3oool00`000000oooo0?ooo`1d0?ooo`005@3oool0
0`000000oooo0?ooo`2B0?ooo`800000M03oool001D0oooo00<000000?ooo`3oool0U03oool00`00
0000oooo0?ooo`1a0?ooo`005@3oool2000009H0oooo0P00001a0?ooo`005@3oool00`000000oooo
0?ooo`2G0?ooo`030000003oool0oooo06h0oooo000E0?ooo`030000003oool0oooo09P0oooo00<0
00000?ooo`3oool0K@3oool001D0oooo00<000000?ooo`3oool0V@3oool2000006d0oooo000E0?oo
o`030000003oool0oooo09/0oooo00<000000?ooo`3oool0JP3oool001D0oooo00<000000?ooo`3o
ool0W03oool00`000000oooo0?ooo`1Y0?ooo`005@3ooooo000000D000001`3oool001D0oooo00<0
00000?ooo`3oool0W`3oool00`000000oooo0?ooo`1V0?ooo`005@3oool200000:40oooo0P00001V
0?ooo`005@3oool00`000000oooo0?ooo`2R0?ooo`030000003oool0oooo06<0oooo000E0?ooo`03
0000003oool0oooo0:<0oooo0P00001S0?ooo`005@3oool00`000000oooo0?ooo`2U0?ooo`800000
H@3oool001D0oooo00<000000?ooo`3oool0Y`3oool00`000000oooo0?ooo`1N0?ooo`005@3oool0
0`000000oooo0?ooo`2X0?ooo`800000GP3oool000d0oooo0`0000050?ooo`030000003oool0oooo
0:X0oooo00<000000?ooo`3oool0F`3oool000d0oooo00@000000?ooo`3oool00000103oool00`00
0000oooo0?ooo`2[0?ooo`800000F`3oool000d0oooo00@000000?ooo`3oool00000103oool30000
0:d0oooo0P00001I0?ooo`001`3oool400000080oooo0`0000050?ooo`030000003oool0oooo0:l0
oooo00<000000?ooo`3oool0EP3oool000h0oooo00<000000?ooo`3oool0103oool00`000000oooo
0?ooo`2`0?ooo`800000EP3oool000h0oooo0`0000040?ooo`030000003oool0oooo0;80oooo0P00
001D0?ooo`005@3oool00`000000oooo0?ooo`2d0?ooo`030000003oool0oooo0540oooo000E0?oo
o`030000003oool0oooo0;D0oooo0P00001A0?ooo`005@3oool00`000000oooo0?ooo`2g0?ooo`03
0000003oool0oooo04h0oooo000E0?ooo`030000003oool0oooo0;P0oooo0P00001>0?ooo`005@3o
ool00`000000oooo0?ooo`2j0?ooo`800000C03oool001D0oooo0P00002m0?ooo`030000003oool0
oooo04T0oooo000E0?ooo`030000003oool0oooo0;d0oooo0P0000190?ooo`005@3oool00`000000
oooo0?ooo`2o0?ooo`800000A`3oool001D0oooo00<000000?ooo`3oool0`@3oool2000004D0oooo
000E0?ooo`030000003oool0oooo0<<0oooo0P0000130?ooo`005@3oool00`000000oooo0?ooo`35
0?ooo`800000@@3oool001D0oooo00<000000?ooo`3oool0a`3oool2000003l0oooo000E0?ooo`03
0000003oool0oooo0<T0oooo0`00000l0?ooo`005@3oool200000<d0oooo0P00000j0?ooo`005@3o
ool00`000000oooo0?ooo`3>0?ooo`<00000=`3oool001D0oooo00<000000?ooo`3oool0d@3oool3
000003@0oooo000E0?ooo`030000003oool0oooo0=@0oooo0`00000a0?ooo`005@3oool00`000000
oooo0?ooo`3G0?ooo`<00000;P3oool001D0oooo00<000000?ooo`3oool0fP3oool4000002X0oooo
000E0?ooo`030000003oool0oooo0=h0oooo3000000N0?ooo`005@3oool00`000000oooo0?ooo`3Z
0?oooaL000001`3oool001D0oooo00<000000?ooo`3oool0o`3oool90?ooo`005@3oool200000?l0
oooo2P3oool001D0oooo00<000000?ooo`3oool0o`3oool90?ooo`005@3oool00`000000oooo0?oo
o`3o0?ooo`T0oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo
0000\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-1.07375, -14.6054, \
0.0501701, 0.0594439}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"],

Cell[BoxData[
    RowBox[{\(General::"unfl"\), \(\(:\)\(\ \)\), "\<\"Underflow occurred in \
computation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::unfl\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"lstol"\), \(\(:\)\(\ \)\), "\<\"The line search \
decreased the step size to within tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the merit \
function.  You may need more than \\!\\(MachinePrecision\\) digits of working \
precision to meet these tolerances. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"FindRoot::lstol\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"unfl"\), \(\(:\)\(\ \)\), "\<\"Underflow occurred in \
computation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::unfl\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"lstol"\), \(\(:\)\(\ \)\), "\<\"The line search \
decreased the step size to within tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the merit \
function.  You may need more than \\!\\(MachinePrecision\\) digits of working \
precision to meet these tolerances. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"FindRoot::lstol\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"unfl"\), \(\(:\)\(\ \)\), "\<\"Underflow occurred in \
computation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::unfl\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(General :: \\\"unfl\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"lstol"\), \(\(:\)\(\ \)\), "\<\"The line search \
decreased the step size to within tolerance specified by AccuracyGoal and \
PrecisionGoal but was unable to find a sufficient decrease in the merit \
function.  You may need more than \\!\\(MachinePrecision\\) digits of working \
precision to meet these tolerances. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"FindRoot::lstol\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(FindRoot :: \\\"lstol\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"frmp"\), \(\(:\)\(\ \)\), "\<\"Machine precision is \
insufficient to achieve the accuracy \\!\\({1.0536712127723497`*^-8, \
1.0536712127723497`*^-8}\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"FindRoot::frmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"frmp"\), \(\(:\)\(\ \)\), "\<\"Machine precision is \
insufficient to achieve the accuracy \\!\\({1.0536712127723497`*^-8, \
1.0536712127723497`*^-8}\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"FindRoot::frmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(FindRoot::"frmp"\), \(\(:\)\(\ \)\), "\<\"Machine precision is \
insufficient to achieve the accuracy \\!\\({1.0536712127723497`*^-8, \
1.0536712127723497`*^-8}\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"FindRoot::frmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(FindRoot :: \\\"frmp\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0732601 -0.70492 0.0381674 [
[.17033 .04593 -3 -9 ]
[.17033 .04593 3 0 ]
[.31685 .04593 -3 -9 ]
[.31685 .04593 3 0 ]
[.46337 .04593 -3 -9 ]
[.46337 .04593 3 0 ]
[.60989 .04593 -3 -9 ]
[.60989 .04593 3 0 ]
[.75641 .04593 -6 -9 ]
[.75641 .04593 6 0 ]
[.90293 .04593 -6 -9 ]
[.90293 .04593 6 0 ]
[.01131 .15385 -24 -4.5 ]
[.01131 .15385 0 4.5 ]
[.01131 .24926 -12 -4.5 ]
[.01131 .24926 0 4.5 ]
[.01131 .34468 -24 -4.5 ]
[.01131 .34468 0 4.5 ]
[.01131 .4401 -12 -4.5 ]
[.01131 .4401 0 4.5 ]
[.01131 .53552 -24 -4.5 ]
[.01131 .53552 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.17033 .05843 m
.17033 .06468 L
s
[(2)] .17033 .04593 0 1 Mshowa
.31685 .05843 m
.31685 .06468 L
s
[(4)] .31685 .04593 0 1 Mshowa
.46337 .05843 m
.46337 .06468 L
s
[(6)] .46337 .04593 0 1 Mshowa
.60989 .05843 m
.60989 .06468 L
s
[(8)] .60989 .04593 0 1 Mshowa
.75641 .05843 m
.75641 .06468 L
s
[(10)] .75641 .04593 0 1 Mshowa
.90293 .05843 m
.90293 .06468 L
s
[(12)] .90293 .04593 0 1 Mshowa
.125 Mabswid
.06044 .05843 m
.06044 .06218 L
s
.09707 .05843 m
.09707 .06218 L
s
.1337 .05843 m
.1337 .06218 L
s
.20696 .05843 m
.20696 .06218 L
s
.24359 .05843 m
.24359 .06218 L
s
.28022 .05843 m
.28022 .06218 L
s
.35348 .05843 m
.35348 .06218 L
s
.39011 .05843 m
.39011 .06218 L
s
.42674 .05843 m
.42674 .06218 L
s
.5 .05843 m
.5 .06218 L
s
.53663 .05843 m
.53663 .06218 L
s
.57326 .05843 m
.57326 .06218 L
s
.64652 .05843 m
.64652 .06218 L
s
.68315 .05843 m
.68315 .06218 L
s
.71978 .05843 m
.71978 .06218 L
s
.79304 .05843 m
.79304 .06218 L
s
.82967 .05843 m
.82967 .06218 L
s
.8663 .05843 m
.8663 .06218 L
s
.93956 .05843 m
.93956 .06218 L
s
.97619 .05843 m
.97619 .06218 L
s
.25 Mabswid
0 .05843 m
1 .05843 L
s
.02381 .15385 m
.03006 .15385 L
s
[(22.5)] .01131 .15385 1 0 Mshowa
.02381 .24926 m
.03006 .24926 L
s
[(25)] .01131 .24926 1 0 Mshowa
.02381 .34468 m
.03006 .34468 L
s
[(27.5)] .01131 .34468 1 0 Mshowa
.02381 .4401 m
.03006 .4401 L
s
[(30)] .01131 .4401 1 0 Mshowa
.02381 .53552 m
.03006 .53552 L
s
[(32.5)] .01131 .53552 1 0 Mshowa
.125 Mabswid
.02381 .07751 m
.02756 .07751 L
s
.02381 .0966 m
.02756 .0966 L
s
.02381 .11568 m
.02756 .11568 L
s
.02381 .13476 m
.02756 .13476 L
s
.02381 .17293 m
.02756 .17293 L
s
.02381 .19201 m
.02756 .19201 L
s
.02381 .2111 m
.02756 .2111 L
s
.02381 .23018 m
.02756 .23018 L
s
.02381 .26835 m
.02756 .26835 L
s
.02381 .28743 m
.02756 .28743 L
s
.02381 .30652 m
.02756 .30652 L
s
.02381 .3256 m
.02756 .3256 L
s
.02381 .36377 m
.02756 .36377 L
s
.02381 .38285 m
.02756 .38285 L
s
.02381 .40193 m
.02756 .40193 L
s
.02381 .42102 m
.02756 .42102 L
s
.02381 .45919 m
.02756 .45919 L
s
.02381 .47827 m
.02756 .47827 L
s
.02381 .49735 m
.02756 .49735 L
s
.02381 .51644 m
.02756 .51644 L
s
.02381 .03934 m
.02756 .03934 L
s
.02381 .02026 m
.02756 .02026 L
s
.02381 .00118 m
.02756 .00118 L
s
.02381 .5546 m
.02756 .5546 L
s
.02381 .57369 m
.02756 .57369 L
s
.02381 .59277 m
.02756 .59277 L
s
.02381 .61185 m
.02756 .61185 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.34951 0 m
.3815 .04607 L
.42237 .10444 L
.46172 .16007 L
.49955 .21289 L
.53984 .26826 L
.57861 .32044 L
.61984 .37436 L
.65954 .42421 L
.69774 .46943 L
.73838 .51325 L
.77751 .54914 L
.79749 .56419 L
.81909 .57743 L
.82924 .58249 L
.83996 .58703 L
.85916 .59324 L
.86864 .59549 L
.8788 .59741 L
.88839 .59883 L
.89713 .59984 L
.90705 .60073 L
.91622 .60136 L
.92628 .60188 L
.93698 .60229 L
.94635 .60255 L
.95645 .60277 L
.96598 .60291 L
.97473 .60302 L
.97619 .60303 L
s
.02381 .60332 m
.06244 .60332 L
.10458 .60332 L
.14415 .60332 L
.18221 .60332 L
.22272 .60332 L
.26171 .60332 L
.30316 .60332 L
.34309 .60332 L
.3815 .60332 L
.42237 .60332 L
.46172 .60332 L
.49955 .60332 L
.53984 .60332 L
.57861 .60332 L
.61984 .60332 L
.65954 .60332 L
.69774 .60332 L
.73838 .60332 L
.77751 .60332 L
.81909 .60332 L
.85916 .60332 L
.89771 .60332 L
.93871 .60332 L
.97619 .60332 L
s
.02381 .36788 m
.06244 .36788 L
.10458 .36788 L
.14415 .36788 L
.18221 .36788 L
.22272 .36788 L
.26171 .36788 L
.30316 .36788 L
.34309 .36788 L
.3815 .36788 L
.42237 .36788 L
.46172 .36788 L
.49955 .36788 L
.53984 .36788 L
.57861 .36788 L
.61984 .36788 L
.65954 .36788 L
.69774 .36788 L
.73838 .36788 L
.77751 .36788 L
.81909 .36788 L
.85916 .36788 L
.89771 .36788 L
.93871 .36788 L
.97619 .36788 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ
0?ooo`006`3oool200000?l0oooo103oool001/0oooo00<000000?ooo`3oool0E03oool00`000000
oooo0?ooo`2[0?ooo`006`3oool00`000000oooo0?ooo`1D0?ooo`030000003oool0oooo0:/0oooo
000K0?ooo`030000003oool0oooo05D0oooo00<000000?ooo`3oool0ZP3oool001/0oooo00<00000
0?ooo`3oool08P3oool4000002D0oooo0`0000080?ooo`030000003oool0oooo01L0oooo0`00000U
0?ooo`8000008@3oool500000080oooo0P00000N0?ooo`D0000000<0oooo0000000000000P00000F
0?ooo`006`3oool2000002<0oooo00<000000?ooo`3oool09`3oool00`000000oooo0?ooo`080?oo
o`030000003oool0oooo01H0oooo00@000000?ooo`3oool000008`3oool010000000oooo0?ooo`00
000R0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0M0?ooo`050000
003oool0oooo0?ooo`0000006@3oool001/0oooo00<000000?ooo`3oool08`3oool00`000000oooo
0?ooo`0S0?ooo`D000002@3oool00`000000oooo0?ooo`0F0?ooo`040000003oool0oooo000002<0
oooo00@000000?ooo`3oool000008P3oool01@000000oooo0?ooo`3oool000000080oooo00<00000
0?ooo`3oool07@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01H0oooo000K0?oo
o`030000003oool0oooo02@0oooo00<000000?ooo`3oool08P3oool010000000oooo0?ooo`00000;
0?ooo`030000003oool0oooo01D0oooo0`00000U0?ooo`8000008`3oool01@000000oooo0?ooo`3o
ool000000080oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo01D0oooo000K0?ooo`030000003oool0oooo0280oooo00@000000?ooo`3oool00000903o
ool00`000000oooo0000000<0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool08`3o
ool010000000oooo0?ooo`00000R0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000
oooo0?ooo`0M0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0D0?oo
o`006`3oool00`000000oooo0?ooo`0S0?ooo`8000009P3oool2000000d0oooo00<000000?ooo`3o
ool0503oool3000002@0oooo0P00000R0?ooo`800000103oool2000001l0oooo0P0000040?ooo`80
00005`3oool001/0oooo0P00001K0?ooo`030000003oool0oooo0:D0oooo000K0?ooo`030000003o
ool0oooo05/0oooo00<000000?ooo`3oool0Y03oool001/0oooo00<000000?ooo`3oool0G03oool0
0`000000oooo0?ooo`2S0?ooo`006`3oool00`000000oooo0?ooo`1M0?ooo`030000003oool0oooo
0:80oooo000K0?ooo`030000003oool0oooo05d0oooo00<000000?ooo`3oool0XP3oool001@0oooo
o`00000=000000006`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00<0
00000?ooo`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<0
00000?ooo`3oool01P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<0
00000?ooo`3oool01`3oool00`000000oooo0?ooo`060?ooo`800000203oool00`000000oooo0?oo
o`070?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?oo
o`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?oo
o`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?oo
o`060?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?oo
o`070?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?oo
o`050?ooo`006`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo00<00000
0?ooo`3oool04@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo02@0oooo00<00000
0?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo01P0oooo000K0?oo
o`030000003oool0oooo0600oooo00<000000?ooo`3oool0W`3oool001/0oooo00<000000?ooo`3o
ool0H@3oool00`000000oooo0?ooo`2N0?ooo`006`3oool200000680oooo00<000000?ooo`3oool0
WP3oool001/0oooo00<000000?ooo`3oool0HP3oool00`000000oooo0?ooo`2M0?ooo`006`3oool0
0`000000oooo0?ooo`1S0?ooo`030000003oool0oooo09`0oooo000K0?ooo`030000003oool0oooo
06@0oooo00<000000?ooo`3oool0V`3oool001/0oooo00<000000?ooo`3oool0I03oool00`000000
oooo0?ooo`2K0?ooo`006`3oool00`000000oooo0?ooo`1U0?ooo`030000003oool0oooo09X0oooo
000K0?ooo`800000I`3oool00`000000oooo0?ooo`2I0?ooo`006`3oool00`000000oooo0?ooo`1V
0?ooo`030000003oool0oooo09T0oooo000K0?ooo`030000003oool0oooo06L0oooo00<000000?oo
o`3oool0V03oool001/0oooo00<000000?ooo`3oool0J03oool00`000000oooo0?ooo`2G0?ooo`00
6`3oool00`000000oooo0?ooo`1X0?ooo`030000003oool0oooo09L0oooo000K0?ooo`800000JP3o
ool00`000000oooo0?ooo`2F0?ooo`006`3oool00`000000oooo0?ooo`1Z0?ooo`030000003oool0
oooo09D0oooo000K0?ooo`030000003oool0oooo06/0oooo00<000000?ooo`3oool0U03oool001/0
oooo00<000000?ooo`3oool0J`3oool00`000000oooo0?ooo`2D0?ooo`006`3oool00`000000oooo
0?ooo`1/0?ooo`030000003oool0oooo09<0oooo000K0?ooo`800000KP3oool00`000000oooo0?oo
o`2B0?ooo`006`3oool00`000000oooo0?ooo`1]0?ooo`030000003oool0oooo0980oooo000K0?oo
o`030000003oool0oooo06h0oooo00<000000?ooo`3oool0T@3oool000030?ooo`00000000000080
00000P3oool4000000<0oooo0P0000040?ooo`8000001@3oool00`000000oooo0?ooo`1_0?ooo`03
0000003oool0oooo0900oooo00000`3oool000000?ooo`040?ooo`030000003oool0oooo00T0oooo
00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`1`0?ooo`030000003oool0oooo08l0
oooo00020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo
0?ooo`020?ooo`800000L@3oool00`000000oooo0?ooo`2?0?ooo`000`3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo00P0oooo0P0000050?ooo`030000003oool0oooo0740oooo00<0
00000?ooo`3oool0SP3oool000050?ooo`000000oooo0?ooo`0000000P3oool010000000oooo0?oo
o`0000090?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0LP3oool00`000000oooo
0?ooo`2=0?ooo`000P3oool2000000@0oooo0P00000:0?ooo`<00000103oool00`000000oooo0?oo
o`1b0?ooo`030000003oool0oooo08d0oooo000K0?ooo`030000003oool0oooo07<0oooo00<00000
0?ooo`3oool0S03oool001/0oooo0P00001e0?ooo`030000003oool0oooo08/0oooo000K0?ooo`03
0000003oool0oooo07D0oooo00<000000?ooo`3oool0RP3oool001/0oooo00<000000?ooo`3oool0
M@3oool00`000000oooo0?ooo`2:0?ooo`006`3oool00`000000oooo0?ooo`1f0?ooo`030000003o
ool0oooo08T0oooo000K0?ooo`030000003oool0oooo07L0oooo00<000000?ooo`3oool0R03oool0
01/0oooo0P00001h0?ooo`030000003oool0oooo08P0oooo000K0?ooo`030000003oool0oooo07P0
oooo00<000000?ooo`3oool0Q`3oool001/0oooo00<000000?ooo`3oool0N@3oool00`000000oooo
0?ooo`260?ooo`006`3oool00`000000oooo0?ooo`1j0?ooo`030000003oool0oooo08D0oooo000K
0?ooo`030000003oool0oooo07X0oooo00<000000?ooo`3oool0Q@3oool001/0oooo0P00001l0?oo
o`030000003oool0oooo08@0oooo000K0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3o
ool0P`3oool001/0oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`230?ooo`006`3o
ool00`000000oooo0?ooo`1m0?ooo`030000003oool0oooo0880oooo000K0?ooo`030000003oool0
oooo07h0oooo00<000000?ooo`3oool0P@3oool001/0oooo0P0000200?ooo`030000003oool0oooo
0800oooo000K0?ooo`030000003oool0oooo07l0oooo00<000000?ooo`3oool0P03oool001/0oooo
00<000000?ooo`3oool0P03oool00`000000oooo0?ooo`1o0?ooo`003@3oool4000000<0oooo0P00
00050?ooo`030000003oool0oooo0840oooo00<000000?ooo`3oool0OP3oool000d0oooo00<00000
0?ooo`3oool00`3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo0880oooo00<0
00000?ooo`3oool0O@3oool000h0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`02
0?ooo`800000P`3oool00`000000oooo0?ooo`1m0?ooo`003`3oool00`000000oooo0?ooo`020?oo
o`8000001@3oool00`000000oooo0?ooo`230?ooo`030000003oool0oooo07`0oooo000=0?ooo`04
0000003oool0oooo000000<0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`240?oo
o`030000003oool0oooo07/0oooo000>0?ooo`800000103oool3000000@0oooo00<000000?ooo`3o
ool0Q@3oool00`000000oooo0?ooo`1j0?ooo`006`3oool00`000000oooo0?ooo`250?ooo`030000
003oool0oooo07X0oooo000K0?ooo`800000Q`3oool00`000000oooo0?ooo`1i0?ooo`006`3oool0
0`000000oooo0?ooo`270?ooo`030000003oool0oooo07P0oooo000K0?ooo`030000003oool0oooo
08L0oooo00<000000?ooo`3oool0N03oool001/0oooo00<000000?ooo`3oool0R03oool00`000000
oooo0?ooo`1g0?ooo`006`3oool00`000000oooo0?ooo`290?ooo`030000003oool0oooo07H0oooo
000K0?ooo`800000R`3oool00`000000oooo0?ooo`1e0?ooo`006`3oool00`000000oooo0?ooo`2:
0?ooo`030000003oool0oooo07D0oooo000K0?ooo`030000003oool0oooo08/0oooo00<000000?oo
o`3oool0M03oool001/0oooo00<000000?ooo`3oool0S03oool00`000000oooo0?ooo`1c0?ooo`00
6`3oool00`000000oooo0?ooo`2<0?ooo`030000003oool0oooo07<0oooo000K0?ooo`800000SP3o
ool00`000000oooo0?ooo`1b0?ooo`006`3oool00`000000oooo0?ooo`2>0?ooo`030000003oool0
oooo0740oooo000K0?ooo`030000003oool0oooo08l0oooo00<000000?ooo`3oool0L03oool001/0
oooo00<000000?ooo`3oool0S`3oool00`000000oooo0?ooo`1`0?ooo`006`3oool00`000000oooo
0?ooo`2@0?ooo`030000003oool0oooo06l0oooo000K0?ooo`800000TP3oool00`000000oooo0?oo
o`1^0?ooo`006`3oool00`000000oooo0?ooo`2B0?ooo`030000003oool0oooo06d0oooo000K0?oo
o`030000003oool0oooo0980oooo00<000000?ooo`3oool0K@3oool001/0oooo00<000000?ooo`3o
ool0T`3oool00`000000oooo0?ooo`1/0?ooo`0000<0oooo0000000000000P0000040?ooo`030000
003oool0oooo0080oooo0P0000040?ooo`8000001@3oool00`000000oooo0?ooo`2D0?ooo`030000
003oool0oooo06/0oooo00000`3oool000000?ooo`060?ooo`030000003oool0oooo00L0oooo00@0
00000?ooo`3oool00000103oool00`000000oooo0?ooo`2E0?ooo`030000003oool0oooo06X0oooo
00020?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?oo
o`020?ooo`800000UP3oool00`000000oooo0?ooo`1Z0?ooo`000`3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo00L0oooo0P0000050?ooo`030000003oool0oooo09H0oooo00<00000
0?ooo`3oool0J@3oool000050?ooo`000000oooo0?ooo`0000000P3oool010000000oooo0?ooo`00
00090?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0U`3oool00`000000oooo0?oo
o`1X0?ooo`000P3oool2000000<0oooo100000090?ooo`<00000103oool00`000000oooo0?ooo`2H
0?ooo`030000003oool0oooo06L0oooo000K0?ooo`030000003oool0oooo09T0oooo00<000000?oo
o`3oool0IP3oool001/0oooo0P00002J0?ooo`030000003oool0oooo06H0oooo000K0?ooooh00000
1`3oool001/0oooo00<000000?ooo`3oool0V`3oool00`000000oooo0?ooo`1T0?ooo`006`3oool0
0`000000oooo0?ooo`2L0?ooo`030000003oool0oooo06<0oooo000K0?ooo`030000003oool0oooo
09d0oooo00<000000?ooo`3oool0HP3oool001/0oooo0P00002N0?ooo`030000003oool0oooo0680
oooo000K0?ooo`030000003oool0oooo09h0oooo00<000000?ooo`3oool0H@3oool001/0oooo00<0
00000?ooo`3oool0W`3oool00`000000oooo0?ooo`1P0?ooo`006`3oool00`000000oooo0?ooo`2P
0?ooo`030000003oool0oooo05l0oooo000K0?ooo`030000003oool0oooo0:00oooo00<000000?oo
o`3oool0G`3oool001/0oooo0P00002R0?ooo`030000003oool0oooo05h0oooo000K0?ooo`030000
003oool0oooo0:80oooo00<000000?ooo`3oool0G@3oool001/0oooo00<000000?ooo`3oool0X`3o
ool00`000000oooo0?ooo`1L0?ooo`006`3oool00`000000oooo0?ooo`2T0?ooo`030000003oool0
oooo05/0oooo000K0?ooo`030000003oool0oooo0:@0oooo00<000000?ooo`3oool0F`3oool001/0
oooo0P00002V0?ooo`030000003oool0oooo05X0oooo000K0?ooo`030000003oool0oooo0:H0oooo
00<000000?ooo`3oool0F@3oool001/0oooo00<000000?ooo`3oool0Y`3oool00`000000oooo0?oo
o`1H0?ooo`003P3oool2000000@0oooo0P0000050?ooo`030000003oool0oooo0:P0oooo00<00000
0?ooo`3oool0E`3oool000d0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`00
00040?ooo`030000003oool0oooo0:P0oooo00<000000?ooo`3oool0E`3oool000l0oooo00D00000
0?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo0P00002Z0?ooo`030000003o
ool0oooo05H0oooo000@0?ooo`040000003oool0oooo00000080oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`2Z0?ooo`030000003oool0oooo05D0oooo000=0?ooo`040000003oool0
oooo00000080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`2[0?ooo`030000
003oool0oooo05@0oooo000>0?ooo`800000103oool2000000D0oooo00<000000?ooo`3oool0[03o
ool00`000000oooo0?ooo`1C0?ooo`006`3oool00`000000oooo0?ooo`2]0?ooo`030000003oool0
oooo0580oooo000K0?ooo`800000[P3oool00`000000oooo0?ooo`1B0?ooo`006`3oool00`000000
oooo0?ooo`2^0?ooo`030000003oool0oooo0540oooo000K0?ooo`030000003oool0oooo0:l0oooo
00<000000?ooo`3oool0D03oool001/0oooo00<000000?ooo`3oool0/03oool00`000000oooo0?oo
o`1?0?ooo`006`3oool00`000000oooo0?ooo`2a0?ooo`030000003oool0oooo04h0oooo000K0?oo
o`800000/`3oool00`000000oooo0?ooo`1=0?ooo`006`3oool00`000000oooo0?ooo`2c0?ooo`03
0000003oool0oooo04`0oooo000K0?ooo`030000003oool0oooo0;@0oooo00<000000?ooo`3oool0
B`3oool001/0oooo00<000000?ooo`3oool0]@3oool00`000000oooo0?ooo`1:0?ooo`006`3oool0
0`000000oooo0?ooo`2f0?ooo`030000003oool0oooo04T0oooo000K0?ooo`800000^03oool00`00
0000oooo0?ooo`180?ooo`006`3oool00`000000oooo0?ooo`2h0?ooo`030000003oool0oooo04L0
oooo000K0?ooo`030000003oool0oooo0;T0oooo00<000000?ooo`3oool0AP3oool001/0oooo00<0
00000?ooo`3oool0^P3oool00`000000oooo0?ooo`150?ooo`006`3oool00`000000oooo0?ooo`2k
0?ooo`030000003oool0oooo04@0oooo000K0?ooo`800000_@3oool00`000000oooo0?ooo`130?oo
o`006`3oool00`000000oooo0?ooo`2m0?ooo`030000003oool0oooo0480oooo000K0?ooo`030000
003oool0oooo0;h0oooo00<000000?ooo`3oool0@@3oool00080oooo0P0000030?ooo`@000000`3o
ool2000000@0oooo0P0000050?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0@03o
ool000050?ooo`000000oooo0?ooo`0000000P3oool00`000000oooo0?ooo`090?ooo`040000003o
ool0oooo000000@0oooo00<000000?ooo`3oool0`03oool00`000000oooo0?ooo`0o0?ooo`000`3o
ool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool00P3o
ool200000<80oooo00<000000?ooo`3oool0?P3oool000@0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`080?ooo`8000001@3oool00`000000oooo0?ooo`320?ooo`030000003oool0
oooo03d0oooo00001@3oool000000?ooo`3oool000000080oooo00@000000?ooo`3oool000002@3o
ool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0<<0oooo00<000000?ooo`3oool0?03o
ool00080oooo0P0000040?ooo`8000002P3oool3000000@0oooo00<000000?ooo`3oool0a03oool0
0`000000oooo0?ooo`0k0?ooo`006`3oool00`000000oooo0?ooo`350?ooo`030000003oool0oooo
03X0oooo000K0?ooo`800000a`3oool2000003X0oooo000K0?ooo`030000003oool0oooo0<P0oooo
00<000000?ooo`3oool0=`3oool001/0oooo00<000000?ooo`3oool0b@3oool2000003L0oooo000K
0?ooo`030000003oool0oooo0</0oooo00<000000?ooo`3oool0=03oool001/0oooo00<000000?oo
o`3oool0c03oool2000003@0oooo000K0?ooo`800000c`3oool200000380oooo000K0?ooo`030000
003oool0oooo0=00oooo00<000000?ooo`3oool0;`3oool001/0oooo00<000000?ooo`3oool0d@3o
ool2000002l0oooo000K0?ooo`030000003oool0oooo0=<0oooo0P00000]0?ooo`006`3oool00`00
0000oooo0?ooo`3E0?ooo`<00000:P3oool001/0oooo00<000000?ooo`3oool0f03oool2000002P0
oooo000K0?ooo`800000f`3oool5000002<0oooo000K0?ooo`030000003oool0oooo0=l0oooo2000
000K0?ooo`006`3oooon000000L0oooo000K0?ooo`030000003oool0oooo0?l0oooo0`3oool001/0
oooo00<000000?ooo`3oool0o`3oool30?ooo`006`3oool200000?l0oooo103oool001/0oooo00<0
00000?ooo`3oool0o`3oool30?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00
o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-1.40224, 17.8517, \
0.0513146, 0.0984954}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(myrho/mn\)], "Input"],

Cell[BoxData[
    \(1.8895250972033936`*^34\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(ndenp\), "\[IndentingNewLine]", 
    \(ndenn\), "\[IndentingNewLine]", 
    \(ndene\)}], "Input"],

Cell[BoxData[
    \(1.8895250972033936`*^34\)], "Output"],

Cell[BoxData[
    \(ndenn\)], "Output"],

Cell[BoxData[
    \(1.8895250972033936`*^34\)], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(tauacc = 1/0.1*Sqrt[\((6*Lunit)\)^3/\((G*M)\)]/\((0.26^2)\)\)], "Input"],

Cell[BoxData[
    \(0.032124039135827794`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(tauacccode = 260*G*M/c^3\)], "Input"],

Cell[BoxData[
    \(0.0038416988239748074`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sigmaet\)], "Input"],

Cell[BoxData[
    RowBox[{\(General::"spell"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(sigmaet\\)\\\" is similar to existing \
symbols \\!\\({sigmat, sigmate}\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::spell\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \(sigmaet\)], "Output"]
}, Open  ]]
},
FrontEndVersion->"5.0 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 941}},
WindowSize->{503, 852},
WindowMargins->{{-1, Automatic}, {Automatic, 0}}
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 98, 2, 50, "Input"],
Cell[1877, 57, 47, 1, 29, "Output"],
Cell[1927, 60, 44, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2008, 66, 434, 10, 130, "Input"],
Cell[2445, 78, 35, 1, 29, "Output"],
Cell[2483, 81, 57, 1, 29, "Output"],
Cell[2543, 84, 57, 1, 29, "Output"],
Cell[2603, 87, 53, 1, 29, "Output"],
Cell[2659, 90, 52, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2748, 96, 243, 5, 90, "Input"],
Cell[2994, 103, 35, 1, 29, "Output"],
Cell[3032, 106, 57, 1, 29, "Output"],
Cell[3092, 109, 55, 1, 29, "Output"],
Cell[3150, 112, 53, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[3240, 118, 243, 4, 70, "Input"],
Cell[3486, 124, 368, 6, 52, "Message"],
Cell[3857, 132, 160, 3, 71, "Output"],
Cell[4020, 137, 369, 6, 124, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[4426, 148, 36, 1, 30, "Input"],
Cell[4465, 151, 44, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[4546, 157, 39, 1, 30, "Input"],
Cell[4588, 160, 56, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[4681, 166, 993, 19, 290, "Input"],
Cell[5677, 187, 54, 1, 29, "Output"],
Cell[5734, 190, 179, 3, 32, "Output"],
Cell[5916, 195, 331, 5, 52, "Message"],
Cell[6250, 202, 331, 5, 52, "Message"],
Cell[6584, 209, 331, 5, 52, "Message"],
Cell[6918, 216, 339, 5, 37, "Message"],
Cell[7260, 223, 368, 6, 52, "Message"],
Cell[7631, 231, 57, 1, 29, "Output"],
Cell[7691, 234, 52, 1, 29, "Output"],
Cell[7746, 237, 56, 1, 29, "Output"],
Cell[7805, 240, 168, 3, 59, "Output"],
Cell[7976, 245, 192, 3, 59, "Output"],
Cell[8171, 250, 56, 1, 29, "Output"],
Cell[8230, 253, 57, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[8324, 259, 655, 13, 190, "Input"],
Cell[8982, 274, 56, 1, 29, "Output"],
Cell[9041, 277, 368, 6, 52, "Message"],
Cell[9412, 285, 56, 1, 29, "Output"],
Cell[9471, 288, 57, 1, 29, "Output"],
Cell[9531, 291, 53, 1, 29, "Output"],
Cell[9587, 294, 169, 3, 59, "Output"],
Cell[9759, 299, 56, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[9852, 305, 405, 7, 130, "Input"],
Cell[10260, 314, 55, 1, 29, "Output"],
Cell[10318, 317, 56, 1, 29, "Output"],
Cell[10377, 320, 52, 1, 29, "Output"],
Cell[10432, 323, 168, 3, 59, "Output"],
Cell[10603, 328, 56, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[10696, 334, 118, 3, 70, "Input"],
Cell[10817, 339, 56, 1, 29, "Output"],
Cell[10876, 342, 56, 1, 29, "Output"],
Cell[10935, 345, 57, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[11029, 351, 63, 1, 30, "Input"],
Cell[11095, 354, 54, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[11186, 360, 41, 1, 30, "Input"],
Cell[11230, 363, 63, 1, 29, "Output"]
}, Open  ]],
Cell[11308, 367, 26, 0, 30, "Input"],

Cell[CellGroupData[{
Cell[11359, 371, 1008, 22, 310, "Input"],
Cell[12370, 395, 522, 8, 97, "Message"],
Cell[12895, 405, 57, 1, 29, "Output"],
Cell[12955, 408, 522, 8, 97, "Message"],
Cell[13480, 418, 56, 1, 29, "Output"],
Cell[13539, 421, 522, 8, 97, "Message"],
Cell[14064, 431, 56, 1, 29, "Output"],
Cell[14123, 434, 57, 1, 29, "Output"],
Cell[14183, 437, 522, 8, 97, "Message"],
Cell[14708, 447, 56, 1, 29, "Output"],
Cell[14767, 450, 57, 1, 29, "Output"],
Cell[14827, 453, 57, 1, 29, "Output"],
Cell[14887, 456, 269, 4, 22, "Message"],
Cell[15159, 462, 522, 8, 97, "Message"],
Cell[15684, 472, 269, 4, 22, "Message"],
Cell[15956, 478, 522, 8, 97, "Message"],
Cell[16481, 488, 269, 4, 22, "Message"],
Cell[16753, 494, 331, 5, 37, "Message"],
Cell[17087, 501, 522, 8, 97, "Message"],
Cell[17612, 511, 333, 5, 37, "Message"],
Cell[17948, 518, 357, 5, 39, "Message"],
Cell[18308, 525, 357, 5, 39, "Message"],
Cell[18668, 532, 357, 5, 39, "Message"],
Cell[19028, 539, 332, 5, 37, "Message"],
Cell[19363, 546, 16600, 440, 186, 4042, 280, "GraphicsData", "PostScript", \
"Graphics"],
Cell[35966, 988, 130, 3, 29, "Output"],
Cell[36099, 993, 269, 4, 22, "Message"],
Cell[36371, 999, 522, 8, 97, "Message"],
Cell[36896, 1009, 269, 4, 22, "Message"],
Cell[37168, 1015, 522, 8, 97, "Message"],
Cell[37693, 1025, 269, 4, 22, "Message"],
Cell[37965, 1031, 331, 5, 37, "Message"],
Cell[38299, 1038, 522, 8, 97, "Message"],
Cell[38824, 1048, 333, 5, 37, "Message"],
Cell[39160, 1055, 357, 5, 39, "Message"],
Cell[39520, 1062, 357, 5, 39, "Message"],
Cell[39880, 1069, 357, 5, 39, "Message"],
Cell[40240, 1076, 332, 5, 37, "Message"],
Cell[40575, 1083, 18808, 517, 186, 4830, 340, "GraphicsData", "PostScript", \
"Graphics"],
Cell[59386, 1602, 130, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[59553, 1610, 41, 1, 30, "Input"],
Cell[59597, 1613, 57, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[59691, 1619, 118, 3, 70, "Input"],
Cell[59812, 1624, 57, 1, 29, "Output"],
Cell[59872, 1627, 39, 1, 29, "Output"],
Cell[59914, 1630, 57, 1, 29, "Output"]
}, Open  ]],
Cell[59986, 1634, 26, 0, 30, "Input"],

Cell[CellGroupData[{
Cell[60037, 1638, 92, 1, 30, "Input"],
Cell[60132, 1641, 55, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[60224, 1647, 57, 1, 30, "Input"],
Cell[60284, 1650, 56, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[60377, 1656, 40, 1, 30, "Input"],
Cell[60420, 1659, 365, 6, 52, "Message"],
Cell[60788, 1667, 41, 1, 29, "Output"]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

