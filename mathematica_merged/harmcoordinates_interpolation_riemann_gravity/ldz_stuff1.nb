(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 4.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     20971,        541]*)
(*NotebookOutlinePosition[     21603,        563]*)
(*  CellTagsIndexPosition[     21559,        559]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
    \(a = 1\), "\[IndentingNewLine]", 
    \(b = 2\), "\[IndentingNewLine]", 
    \(c = 3\), "\[IndentingNewLine]", 
    \(g = x^3 + a*x^2 + b*x + c\), "\[IndentingNewLine]", 
    \(Plot[g, {x, \(-10\), 10}]\)}], "Input"],

Cell[BoxData[
    \(1\)], "Output"],

Cell[BoxData[
    \(2\)], "Output"],

Cell[BoxData[
    \(3\)], "Output"],

Cell[BoxData[
    \(3 + 2\ x + x\^2 + x\^3\)], "Output"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.0476191 0.297192 0.000772252 [
[.02381 .28469 -9 -9 ]
[.02381 .28469 9 0 ]
[.2619 .28469 -6 -9 ]
[.2619 .28469 6 0 ]
[.7381 .28469 -3 -9 ]
[.7381 .28469 3 0 ]
[.97619 .28469 -6 -9 ]
[.97619 .28469 6 0 ]
[.4875 .14274 -24 -4.5 ]
[.4875 .14274 0 4.5 ]
[.4875 .45164 -18 -4.5 ]
[.4875 .45164 0 4.5 ]
[.4875 .60609 -18 -4.5 ]
[.4875 .60609 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 .29719 m
.02381 .30344 L
s
[(-10)] .02381 .28469 0 1 Mshowa
.2619 .29719 m
.2619 .30344 L
s
[(-5)] .2619 .28469 0 1 Mshowa
.7381 .29719 m
.7381 .30344 L
s
[(5)] .7381 .28469 0 1 Mshowa
.97619 .29719 m
.97619 .30344 L
s
[(10)] .97619 .28469 0 1 Mshowa
.125 Mabswid
.07143 .29719 m
.07143 .30094 L
s
.11905 .29719 m
.11905 .30094 L
s
.16667 .29719 m
.16667 .30094 L
s
.21429 .29719 m
.21429 .30094 L
s
.30952 .29719 m
.30952 .30094 L
s
.35714 .29719 m
.35714 .30094 L
s
.40476 .29719 m
.40476 .30094 L
s
.45238 .29719 m
.45238 .30094 L
s
.54762 .29719 m
.54762 .30094 L
s
.59524 .29719 m
.59524 .30094 L
s
.64286 .29719 m
.64286 .30094 L
s
.69048 .29719 m
.69048 .30094 L
s
.78571 .29719 m
.78571 .30094 L
s
.83333 .29719 m
.83333 .30094 L
s
.88095 .29719 m
.88095 .30094 L
s
.92857 .29719 m
.92857 .30094 L
s
.25 Mabswid
0 .29719 m
1 .29719 L
s
.5 .14274 m
.50625 .14274 L
s
[(-200)] .4875 .14274 1 0 Mshowa
.5 .45164 m
.50625 .45164 L
s
[(200)] .4875 .45164 1 0 Mshowa
.5 .60609 m
.50625 .60609 L
s
[(400)] .4875 .60609 1 0 Mshowa
.125 Mabswid
.5 .18135 m
.50375 .18135 L
s
.5 .21997 m
.50375 .21997 L
s
.5 .25858 m
.50375 .25858 L
s
.5 .3358 m
.50375 .3358 L
s
.5 .37442 m
.50375 .37442 L
s
.5 .41303 m
.50375 .41303 L
s
.5 .49026 m
.50375 .49026 L
s
.5 .52887 m
.50375 .52887 L
s
.5 .56748 m
.50375 .56748 L
s
.5 .10413 m
.50375 .10413 L
s
.5 .06552 m
.50375 .06552 L
s
.5 .0269 m
.50375 .0269 L
s
.25 Mabswid
.5 0 m
.5 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.14101 0 m
.14415 .00883 L
.18221 .09406 L
.22272 .16423 L
.26171 .21435 L
.28302 .23544 L
.30316 .25177 L
.32144 .26386 L
.34157 .27448 L
.36141 .28252 L
.37239 .28605 L
.38244 .28878 L
.40184 .29284 L
.41255 .29449 L
.42272 .29574 L
.43231 .29666 L
.44253 .29741 L
.45217 .29795 L
.46092 .29833 L
.48016 .29894 L
.49009 .29921 L
.50098 .29954 L
.51129 .29993 L
.52092 .3004 L
.53109 .30106 L
.54199 .302 L
.55216 .30314 L
.56323 .30473 L
.57279 .30643 L
.58335 .30872 L
.60312 .31432 L
.62413 .32246 L
.64348 .3323 L
.66433 .34577 L
.68398 .36154 L
.70547 .38259 L
.7451 .43322 L
.78566 .50327 L
.8247 .59078 L
s
.8247 .59078 m
.83433 .61803 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003o:P3oool0
0`000000oooo0?ooo`1S0?ooo`030000003oool0oooo08d0oooo000[0?ooo`030000003oool0oooo
0680oooo00<000000?ooo`3oool0S@3oool002/0oooo00<000000?ooo`3oool0HP3oool00`000000
oooo0?ooo`2=0?ooo`00:`3oool00`000000oooo0?ooo`1R0?ooo`030000003oool0oooo08d0oooo
000/0?ooo`030000003oool0oooo0640oooo00<000000?ooo`3oool0S@3oool002`0oooo00<00000
0?ooo`3oool0H@3oool00`000000oooo0?ooo`2=0?ooo`00;@3oool00`000000oooo0?ooo`1P0?oo
o`030000003oool0oooo08d0oooo000]0?ooo`030000003oool0oooo0600oooo0P00002>0?ooo`00
;P3oool00`000000oooo0?ooo`1O0?ooo`030000003oool0oooo08d0oooo000^0?ooo`030000003o
ool0oooo05l0oooo00<000000?ooo`3oool0S@3oool002l0oooo00<000000?ooo`3oool0GP3oool0
0`000000oooo0?ooo`2=0?ooo`00;`3oool00`000000oooo0?ooo`1N0?ooo`030000003oool0oooo
08d0oooo000`0?ooo`030000003oool0oooo05d0oooo00<000000?ooo`3oool0S@3oool00300oooo
00<000000?ooo`3oool0G@3oool00`000000oooo0?ooo`2=0?ooo`00<@3oool00`000000oooo0?oo
o`1L0?ooo`030000003oool0oooo08d0oooo000a0?ooo`030000003oool0oooo05`0oooo00<00000
0?ooo`3oool0S@3oool00340oooo00<000000?ooo`3oool0G03oool00`000000oooo0?ooo`2=0?oo
o`00<P3oool00`000000oooo0?ooo`1K0?ooo`030000003oool0oooo08d0oooo000b0?ooo`030000
003oool0oooo05/0oooo0P00002>0?ooo`00<`3oool00`000000oooo0?ooo`1J0?ooo`030000003o
ool0oooo08d0oooo000c0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3oool0S@3oool0
03@0oooo00<000000?ooo`3oool0F@3oool00`000000oooo0?ooo`2=0?ooo`00=03oool00`000000
oooo0?ooo`1I0?ooo`030000003oool0oooo08d0oooo000e0?ooo`030000003oool0oooo05P0oooo
00<000000?ooo`3oool0S@3oool003D0oooo00<000000?ooo`3oool0F03oool00`000000oooo0?oo
o`2=0?ooo`00=P3oool00`000000oooo0?ooo`1G0?ooo`030000003oool0oooo08d0oooo000f0?oo
o`030000003oool0oooo05L0oooo00<000000?ooo`3oool0S@3oool003L0oooo00<000000?ooo`3o
ool0EP3oool00`000000oooo0?ooo`2=0?ooo`00=`3oool00`000000oooo0?ooo`1F0?ooo`030000
003oool0oooo08d0oooo000h0?ooo`030000003oool0oooo05D0oooo0P00002>0?ooo`00>03oool0
0`000000oooo0?ooo`1E0?ooo`030000003oool0oooo08d0oooo000i0?ooo`030000003oool0oooo
05@0oooo00<000000?ooo`3oool0S@3oool003T0oooo00<000000?ooo`3oool0E03oool00`000000
oooo0?ooo`2=0?ooo`00>P3oool00`000000oooo0?ooo`1C0?ooo`030000003oool0oooo08d0oooo
000j0?ooo`030000003oool0oooo05<0oooo00<000000?ooo`3oool0S@3oool003/0oooo00<00000
0?ooo`3oool0DP3oool00`000000oooo0?ooo`2=0?ooo`00?03oool00`000000oooo0?ooo`1A0?oo
o`030000003oool0oooo08d0oooo000l0?ooo`030000003oool0oooo0540oooo00<000000?ooo`3o
ool0S@3oool003d0oooo00<000000?ooo`3oool0?03oool4000000<0oooo0P0000040?ooo`800000
1@3oool00`000000oooo0?ooo`2=0?ooo`00?@3oool00`000000oooo0?ooo`0l0?ooo`030000003o
ool0oooo00<0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000040?ooo`03
0000003oool0oooo08d0oooo000n0?ooo`030000003oool0oooo03`0oooo00<000000?ooo`3oool0
0P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000@0oooo0`00002=0?oo
o`00?P3oool00`000000oooo0?ooo`0e0?ooo`@00000103oool01@000000oooo0?ooo`3oool00000
0080oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo08d0oooo000o0?ooo`030000003oool0oooo03d0oooo00@000000?ooo`3oool000000P3oool0
10000000oooo0?ooo`0000020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0S@3o
ool003l0oooo00<000000?ooo`3oool0>P3oool010000000oooo0?ooo`0000020?ooo`040000003o
ool0oooo00000080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`2=0?ooo`00
@03oool00`000000oooo0?ooo`0j0?ooo`800000103oool2000000@0oooo0P0000050?ooo`030000
003oool0oooo08d0oooo00100?ooo`030000003oool0oooo04d0oooo00<000000?ooo`3oool0S@3o
ool00440oooo00<000000?ooo`3oool0C03oool00`000000oooo0?ooo`2=0?ooo`00@P3oool00`00
0000oooo0?ooo`1;0?ooo`030000003oool0oooo08d0oooo00120?ooo`030000003oool0oooo04/0
oooo00<000000?ooo`3oool0S@3oool004<0oooo00<000000?ooo`3oool0BP3oool00`000000oooo
0?ooo`2=0?ooo`00A03oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo08d0oooo0015
0?ooo`030000003oool0oooo04P0oooo0P00002>0?ooo`00A@3oool00`000000oooo0?ooo`180?oo
o`030000003oool0oooo08d0oooo00160?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3o
ool0S@3oool004L0oooo00<000000?ooo`3oool0AP3oool00`000000oooo0?ooo`2=0?ooo`00B03o
ool00`000000oooo0?ooo`150?ooo`030000003oool0oooo08d0oooo00180?ooo`030000003oool0
oooo04D0oooo00<000000?ooo`3oool0S@3oool004T0oooo00<000000?ooo`3oool0A03oool00`00
0000oooo0?ooo`2=0?ooo`00BP3oool00`000000oooo0?ooo`130?ooo`030000003oool0oooo08d0
oooo001;0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0S@3oool004/0oooo00<0
00000?ooo`3oool0@P3oool00`000000oooo0?ooo`2=0?ooo`00C03oool00`000000oooo0?ooo`11
0?ooo`030000003oool0oooo08d0oooo001=0?ooo`030000003oool0oooo0400oooo0P00002>0?oo
o`00CP3oool00`000000oooo0?ooo`0o0?ooo`030000003oool0oooo08d0oooo001?0?ooo`030000
003oool0oooo03h0oooo00<000000?ooo`3oool0S@3oool00500oooo00<000000?ooo`3oool0?@3o
ool00`000000oooo0?ooo`2=0?ooo`00D@3oool00`000000oooo0?ooo`0l0?ooo`030000003oool0
oooo08d0oooo001B0?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0S@3oool005<0
oooo0P00000k0?ooo`030000003oool0oooo08d0oooo001E0?ooo`030000003oool0oooo03P0oooo
00<000000?ooo`3oool0S@3oool005H0oooo0P00000h0?ooo`030000003oool0oooo08d0oooo001H
0?ooo`030000003oool0oooo03D0oooo00<000000?ooo`3oool0S@3oool005T0oooo00<000000?oo
o`3oool0=03oool00`000000oooo0?ooo`2=0?ooo`00FP3oool2000003@0oooo0P00002>0?ooo`00
1`3oool4000000<0oooo0P00000m0?ooo`<00000303oool00`000000oooo0?ooo`0a0?ooo`030000
003oool0oooo03l0oooo0`00000n0?ooo`@000000`3oool2000000@0oooo00090?ooo`050000003o
ool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo00X0oooo
0P00000a0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0?@3oool01@000000oooo
0?ooo`3oool000000080oooo00<000000?ooo`3oool00@3oool000T0oooo00D000000?ooo`3oool0
oooo000000020?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool0303oool2000002l0
oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`0m0?ooo`050000003oool0oooo0?oo
o`0000000P3oool00`000000oooo0?ooo`010?ooo`0000<0oooo0000000000000P0000040?ooo`05
0000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0d0?ooo`@000000P3oool30000
0140oooo0P00000]0?ooo`030000003oool0oooo03l0oooo0`0000100?ooo`050000003oool0oooo
0?ooo`0000000P3oool00`000000oooo0?ooo`010?ooo`002@3oool01@000000oooo0?ooo`3oool0
00000080oooo00<000000?ooo`3oool0>P3oool00`000000oooo0?ooo`0C0?ooo`800000:`3oool0
0`000000oooo0?ooo`0o0?ooo`030000003oool0oooo0400oooo00D000000?ooo`3oool0oooo0000
00020?ooo`030000003oool0oooo0040oooo00070?ooo`<000000`3oool010000000oooo0?ooo`00
000l0?ooo`030000003oool0oooo01D0oooo0`00000X0?ooo`030000003oool0oooo03l0oooo00<0
00000?ooo`3oool0?P3oool3000000<0oooo00@000000?ooo`3oool000000`3oool000T0oooo00<0
00000?ooo`3oool00P3oool2000003d0oooo1000000G0?ooo`<000009@3oool00`000000oooo0?oo
o`0o0?ooo`@00000?`3oool00`000000oooo0?ooo`020?ooo`800000103oool006/0oooo0`00000R
0?ooo`030000003oool0oooo08d0oooo001^0?ooo`@000007P3oool00`000000oooo0?ooo`2=0?oo
o`00LP3oool7000001L0oooo00<000000?ooo`3oool0S@3oool00080ooooo`00000N00000040oooo
00090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?oo
o`0:0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?oo
o`0;0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?oo
o`0;0?ooo`030000003oool0oooo0080oooo5`00000<0?ooo`030000003oool0oooo00/0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00X0oooo00<0
00000?ooo`3oool02`3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00/0oooo00<0
00000?ooo`3oool02`3oool00`000000oooo0?ooo`050?ooo`002@3oool00`000000oooo0?ooo`10
0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool02`3oool600000300oooo00<00000
0?ooo`3oool0@@3oool00`000000oooo0?ooo`050?ooo`00T03oool00`000000oooo0?ooo`0A0?oo
o`H00000MP3oool00900oooo00<000000?ooo`3oool05`3oool2000007@0oooo002@0?ooo`030000
003oool0oooo01T0oooo0`00001a0?ooo`00T03oool00`000000oooo0?ooo`0L0?ooo`<00000KP3o
ool00900oooo00<000000?ooo`3oool07`3oool3000006/0oooo002@0?ooo`030000003oool0oooo
0280oooo0P00001Y0?ooo`00T03oool00`000000oooo0?ooo`0T0?ooo`800000I`3oool00900oooo
00<000000?ooo`3oool09P3oool00`000000oooo0?ooo`1T0?ooo`00T03oool2000002P0oooo0P00
001T0?ooo`00T03oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo0640oooo002@0?oo
o`030000003oool0oooo02X0oooo0P00001Q0?ooo`00T03oool00`000000oooo0?ooo`0/0?ooo`03
0000003oool0oooo05h0oooo002@0?ooo`030000003oool0oooo02d0oooo00<000000?ooo`3oool0
G@3oool00900oooo00<000000?ooo`3oool0;P3oool2000005d0oooo002@0?ooo`030000003oool0
oooo0300oooo00<000000?ooo`3oool0FP3oool00900oooo00<000000?ooo`3oool0<@3oool00`00
0000oooo0?ooo`1I0?ooo`00T03oool00`000000oooo0?ooo`0b0?ooo`030000003oool0oooo05P0
oooo002@0?ooo`030000003oool0oooo03<0oooo00<000000?ooo`3oool0E`3oool00900oooo00<0
00000?ooo`3oool0=03oool2000005L0oooo002@0?ooo`800000=`3oool00`000000oooo0?ooo`1D
0?ooo`00T03oool00`000000oooo0?ooo`0g0?ooo`030000003oool0oooo05<0oooo002@0?ooo`03
0000003oool0oooo03P0oooo00<000000?ooo`3oool0DP3oool00900oooo00<000000?ooo`3oool0
>@3oool00`000000oooo0?ooo`1A0?ooo`00T03oool00`000000oooo0?ooo`0i0?ooo`030000003o
ool0oooo0540oooo002@0?ooo`030000003oool0oooo03X0oooo00<000000?ooo`3oool0D03oool0
0900oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`1?0?ooo`00T03oool00`000000
oooo0?ooo`0l0?ooo`030000003oool0oooo04h0oooo002@0?ooo`030000003oool0oooo03`0oooo
00<000000?ooo`3oool0CP3oool00900oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?oo
o`1=0?ooo`00T03oool00`000000oooo0?ooo`0n0?ooo`030000003oool0oooo04`0oooo002@0?oo
o`800000@03oool00`000000oooo0?ooo`1;0?ooo`00T03oool00`000000oooo0?ooo`0o0?ooo`03
0000003oool0oooo04/0oooo002@0?ooo`030000003oool0oooo0400oooo00<000000?ooo`3oool0
BP3oool00900oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`190?ooo`00T03oool0
0`000000oooo0?ooo`120?ooo`030000003oool0oooo04P0oooo002@0?ooo`030000003oool0oooo
0480oooo00<000000?ooo`3oool0B03oool00900oooo00<000000?ooo`3oool0@`3oool00`000000
oooo0?ooo`170?ooo`00T03oool00`000000oooo0?ooo`140?ooo`030000003oool0oooo04H0oooo
002@0?ooo`030000003oool0oooo04@0oooo00<000000?ooo`3oool0AP3oool007`0oooo10000003
0?ooo`800000103oool2000000D0oooo00<000000?ooo`3oool0A@3oool00`000000oooo0?ooo`15
0?ooo`00O03oool00`000000oooo0?ooo`030?ooo`040000003oool0oooo00000080oooo00@00000
0?ooo`3oool00000103oool00`000000oooo0?ooo`150?ooo`030000003oool0oooo04D0oooo001m
0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?oo
o`0000040?ooo`<00000AP3oool00`000000oooo0?ooo`140?ooo`00OP3oool01@000000oooo0?oo
o`3oool000000080oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo04H0oooo00<000000?ooo`3oool0A03oool007l0oooo00@000000?ooo`3oool0
00000P3oool010000000oooo0?ooo`0000020?ooo`030000003oool0oooo0080oooo00<000000?oo
o`3oool0A`3oool00`000000oooo0?ooo`130?ooo`00O03oool010000000oooo0?ooo`0000020?oo
o`040000003oool0oooo00000080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?oo
o`170?ooo`030000003oool0oooo04<0oooo001m0?ooo`800000103oool2000000@0oooo0P000005
0?ooo`030000003oool0oooo04P0oooo00<000000?ooo`3oool0@P3oool00900oooo00<000000?oo
o`3oool0B@3oool00`000000oooo0?ooo`110?ooo`00T03oool00`000000oooo0?ooo`190?ooo`03
0000003oool0oooo0440oooo002@0?ooo`030000003oool0oooo04X0oooo00<000000?ooo`3oool0
@03oool00900oooo00<000000?ooo`3oool0BP3oool00`000000oooo0?ooo`100?ooo`00T03oool0
0`000000oooo0?ooo`1;0?ooo`030000003oool0oooo03l0oooo002@0?ooo`030000003oool0oooo
04/0oooo00<000000?ooo`3oool0?`3oool00900oooo0P00001=0?ooo`030000003oool0oooo03h0
oooo002@0?ooo`030000003oool0oooo04`0oooo00<000000?ooo`3oool0?P3oool00900oooo00<0
00000?ooo`3oool0C@3oool00`000000oooo0?ooo`0m0?ooo`00T03oool00`000000oooo0?ooo`1=
0?ooo`030000003oool0oooo03d0oooo002@0?ooo`030000003oool0oooo04h0oooo00<000000?oo
o`3oool0?03oool00900oooo00<000000?ooo`3oool0CP3oool00`000000oooo0?ooo`0l0?ooo`00
T03oool00`000000oooo0?ooo`1?0?ooo`030000003oool0oooo03/0oooo002@0?ooo`030000003o
ool0oooo04l0oooo00<000000?ooo`3oool0>`3oool00900oooo00<000000?ooo`3oool0D03oool0
0`000000oooo0?ooo`0j0?ooo`00T03oool00`000000oooo0?ooo`1@0?ooo`030000003oool0oooo
03X0oooo002@0?ooo`030000003oool0oooo0540oooo00<000000?ooo`3oool0>@3oool00900oooo
0P00001B0?ooo`030000003oool0oooo03T0oooo002@0?ooo`030000003oool0oooo0580oooo00<0
00000?ooo`3oool0>03oool00900oooo00<000000?ooo`3oool0DP3oool00`000000oooo0?ooo`0h
0?ooo`00T03oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo03P0oooo002@0?ooo`03
0000003oool0oooo05<0oooo00<000000?ooo`3oool0=`3oool00900oooo00<000000?ooo`3oool0
D`3oool00`000000oooo0?ooo`0g0?ooo`00T03oool00`000000oooo0?ooo`1D0?ooo`030000003o
ool0oooo03H0oooo002@0?ooo`030000003oool0oooo05@0oooo00<000000?ooo`3oool0=P3oool0
0900oooo00<000000?ooo`3oool0E@3oool00`000000oooo0?ooo`0e0?ooo`00T03oool00`000000
oooo0?ooo`1E0?ooo`030000003oool0oooo03D0oooo002@0?ooo`030000003oool0oooo05D0oooo
00<000000?ooo`3oool0=@3oool00900oooo0P00001G0?ooo`030000003oool0oooo03@0oooo002@
0?ooo`030000003oool0oooo05H0oooo00<000000?ooo`3oool0=03oool00900oooo00<000000?oo
o`3oool0E`3oool00`000000oooo0?ooo`0c0?ooo`00T03oool00`000000oooo0?ooo`1G0?ooo`03
0000003oool0oooo03<0oooo002@0?ooo`030000003oool0oooo05P0oooo00<000000?ooo`3oool0
<P3oool00900oooo00<000000?ooo`3oool0F03oool00`000000oooo0?ooo`0b0?ooo`00T03oool0
0`000000oooo0?ooo`1I0?ooo`030000003oool0oooo0340oooo002@0?ooo`030000003oool0oooo
05T0oooo00<000000?ooo`3oool0<@3oool00900oooo00<000000?ooo`3oool0F@3oool00`000000
oooo0?ooo`0a0?ooo`00OP3oool00`000000oooo0?ooo`020?ooo`800000103oool2000000D0oooo
00<000000?ooo`3oool0FP3oool00`000000oooo0?ooo`0`0?ooo`00OP3oool01@000000oooo0?oo
o`3oool000000080oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo05X0oooo00<000000?ooo`3oool0<03oool007/0oooo1@0000020?ooo`040000
003oool0oooo00000080oooo00@000000?ooo`3oool00000103oool3000005/0oooo00<000000?oo
o`3oool0;`3oool007/0oooo00@000000?ooo`3oool000000`3oool010000000oooo0?ooo`000002
0?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0F`3oool00`000000oooo0?oo
o`0_0?ooo`00O03oool00`000000oooo000000030?ooo`040000003oool0oooo00000080oooo00@0
00000?ooo`3oool00000103oool00`000000oooo0?ooo`1L0?ooo`030000003oool0oooo02h0oooo
001m0?ooo`8000000`3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000@0
oooo00<000000?ooo`3oool0G03oool00`000000oooo0?ooo`0^0?ooo`00OP3oool00`000000oooo
0?ooo`020?ooo`800000103oool2000009D0oooo0000\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-10.6742, -384.842, \
0.0738123, 4.55146}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(dg = D[g, x]\)], "Input"],

Cell[BoxData[
    \(2 + 2\ x + 3\ x\^2\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Solve[dg \[Equal] 0, x]\)], "Input"],

Cell[BoxData[
    \({{x \[Rule] 1\/3\ \((\(-1\) - \[ImaginaryI]\ \@5)\)}, {x \[Rule] 
          1\/3\ \((\(-1\) + \[ImaginaryI]\ \@5)\)}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f = 
      W^3 + W^2 \((z1/z2 + 2  B^2)\) + W*B^2 \((2  z1/z2 + B^2)\) + 
        1/z2*\((z1*B^4 + T^2/2)\)\)], "Input"],

Cell[BoxData[
    \(W\^3 + W\^2\ \((2\ B\^2 + z1\/z2)\) + 
      B\^2\ W\ \((B\^2 + \(2\ z1\)\/z2)\) + \(T\^2\/2 + B\^4\ z1\)\/z2\)], \
"Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(df = D[f, W]\)], "Input"],

Cell[BoxData[
    \(3\ W\^2 + 2\ W\ \((2\ B\^2 + z1\/z2)\) + 
      B\^2\ \((B\^2 + \(2\ z1\)\/z2)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullSimplify[Solve[df \[Equal] 0, W]]\)], "Input"],

Cell[BoxData[
    \({{W \[Rule] \(-B\^2\)}, {W \[Rule] \(-\(\(2\ z1 + 
                  B\^2\ z2\)\/\(3\ z2\)\)\)}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Solve[\(-B^2\) == \(-\(\(2\ z1 + B\^2\ z2\)\/\(3\ z2\)\)\), 
      B]\)], "Input"],

Cell[BoxData[
    \({{B \[Rule] \(-\(\@z1\/\@z2\)\)}, {B \[Rule] \@z1\/\@z2}}\)], "Output"]
}, Open  ]]
},
FrontEndVersion->"4.2 for X",
ScreenRectangle->{{0, 1600}, {0, 1200}},
WindowSize->{629, 936},
WindowMargins->{{194, Automatic}, {Automatic, 102}}
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 236, 5, 91, "Input"],
Cell[2015, 60, 35, 1, 27, "Output"],
Cell[2053, 63, 35, 1, 27, "Output"],
Cell[2091, 66, 35, 1, 27, "Output"],
Cell[2129, 69, 56, 1, 29, "Output"],
Cell[2188, 72, 17253, 399, 186, 3037, 219, "GraphicsData", "PostScript", \
"Graphics"],
Cell[19444, 473, 130, 3, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[19611, 481, 45, 1, 27, "Input"],
Cell[19659, 484, 52, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[19748, 490, 56, 1, 27, "Input"],
Cell[19807, 493, 151, 2, 44, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[19995, 500, 140, 3, 27, "Input"],
Cell[20138, 505, 145, 3, 53, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[20320, 513, 45, 1, 27, "Input"],
Cell[20368, 516, 114, 2, 44, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[20519, 523, 70, 1, 27, "Input"],
Cell[20592, 526, 130, 2, 46, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[20759, 533, 102, 2, 46, "Input"],
Cell[20864, 537, 91, 1, 52, "Output"]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

