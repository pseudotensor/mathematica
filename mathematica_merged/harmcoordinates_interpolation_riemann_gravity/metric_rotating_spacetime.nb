(***********************************************************************

                    Mathematica-Compatible Notebook

This notebook can be used on any computer system with Mathematica 4.0,
MathReader 4.0, or any compatible application. The data for the notebook 
starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do one of 
the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing the 
word CacheID, otherwise Mathematica-compatible applications may try to 
use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
***********************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     32606,        849]*)
(*NotebookOutlinePosition[     33262,        872]*)
(*  CellTagsIndexPosition[     33218,        868]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[{
    \(MatrixForm[gcov]\), "\[IndentingNewLine]", 
    \(Det[gcov]\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a = L/M\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(\(-1\) + \(2\ M\ x\)\/\(x\^2 + a\^2\ Cos[y]\^2\)\), "0", 
              "0", \(-\(\(2\ a\ M\ x\ Sin[y]\^2\)\/\(x\^2 + 
                      a\^2\ Cos[y]\^2\)\)\)},
            {
              "0", \(\(x\^2 + a\^2\ Cos[y]\^2\)\/\(a\^2 + 
                    x\ \((\(-2\)\ M + x)\)\)\), "0", "0"},
            {"0", "0", \(x\^2 + a\^2\ Cos[y]\^2\), "0"},
            {\(-\(\(2\ a\ M\ x\ Sin[y]\^2\)\/\(x\^2 + a\^2\ Cos[y]\^2\)\)\), 
              "0", "0", \(\(Sin[y]\^2\ \((\((a\^2 + x\^2)\)\^2 - 
                        a\^2\ \((a\^2 + 
                              x\ \((\(-2\)\ M + 
                                    x)\))\)\ Sin[y]\^2)\)\)\/\(x\^2 + 
                    a\^2\ Cos[y]\^2\)\)}
            }], "\[NoBreak]", ")"}],
      (MatrixForm[ #]&)]], "Output"],

Cell[BoxData[
    \(\(\((x\^2 + a\^2\ Cos[y]\^2)\)\^2\ \((\(-\(\(4\ a\^2\ M\^2\ x\^2\ \
Sin[y]\^4\)\/\((x\^2 + a\^2\ Cos[y]\^2)\)\^2\)\) + \(\((\(-1\) + \(2\ M\ \
x\)\/\(x\^2 + a\^2\ Cos[y]\^2\))\)\ Sin[y]\^2\ \((\((a\^2 + x\^2)\)\^2 - a\^2\
\ \((a\^2 + x\ \((\(-2\)\ M + x)\))\)\ Sin[y]\^2)\)\)\/\(x\^2 + a\^2\ \
Cos[y]\^2\))\)\)\/\(a\^2 + x\ \((\(-2\)\ M + x)\)\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(mygcov = gcov //. {a \[Rule] L/M}\), "\[IndentingNewLine]", 
    \(MatrixForm[mygcov]\)}], "Input"],

Cell[BoxData[
    \({{\(-1\) + \(2\ M\ x\)\/\(x\^2 + \(L\^2\ Cos[y]\^2\)\/M\^2\), 0, 
        0, \(-\(\(2\ L\ x\ Sin[y]\^2\)\/\(x\^2 + \(L\^2\ \
Cos[y]\^2\)\/M\^2\)\)\)}, {0, \(x\^2 + \(L\^2\ Cos[y]\^2\)\/M\^2\)\/\(L\^2\/M\
\^2 + x\ \((\(-2\)\ M + x)\)\), 0, 0}, {0, 0, 
        x\^2 + \(L\^2\ Cos[y]\^2\)\/M\^2, 
        0}, {\(-\(\(2\ L\ x\ Sin[y]\^2\)\/\(x\^2 + \(L\^2\ \
Cos[y]\^2\)\/M\^2\)\)\), 0, 
        0, \(Sin[y]\^2\ \((\((L\^2\/M\^2 + x\^2)\)\^2 - \(L\^2\ \((L\^2\/M\^2 \
+ x\ \((\(-2\)\ M + x)\))\)\ Sin[y]\^2\)\/M\^2)\)\)\/\(x\^2 + \(L\^2\ \
Cos[y]\^2\)\/M\^2\)}}\)], "Output"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(\(-1\) + \(2\ M\ x\)\/\(x\^2 + \(L\^2\ Cos[y]\^2\)\/M\^2\)\), 
              "0", "0", \(-\(\(2\ L\ x\ Sin[y]\^2\)\/\(x\^2 + \(L\^2\ \
Cos[y]\^2\)\/M\^2\)\)\)},
            {
              "0", \(\(x\^2 + \(L\^2\ Cos[y]\^2\)\/M\^2\)\/\(L\^2\/M\^2 + 
                    x\ \((\(-2\)\ M + x)\)\)\), "0", "0"},
            {"0", "0", \(x\^2 + \(L\^2\ Cos[y]\^2\)\/M\^2\), "0"},
            {\(-\(\(2\ L\ x\ Sin[y]\^2\)\/\(x\^2 + \(L\^2\ \
Cos[y]\^2\)\/M\^2\)\)\), "0", 
              "0", \(\(Sin[y]\^2\ \((\((L\^2\/M\^2 + x\^2)\)\^2 - \(L\^2\ \
\((L\^2\/M\^2 + x\ \((\(-2\)\ M + x)\))\)\ Sin[y]\^2\)\/M\^2)\)\)\/\(x\^2 + \
\(L\^2\ Cos[y]\^2\)\/M\^2\)\)}
            }], "\[NoBreak]", ")"}],
      (MatrixForm[ #]&)]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(MatrixForm[it1 = Limit[mygcov, M \[Rule] 0]]\), "\[IndentingNewLine]", 
    \(FullSimplify[Det[it1], {x > 0, M > 0}]\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(-1\), "0", "0", "0"},
            {"0", \(Cos[y]\^2\), "0", "0"},
            {"0", "0", \(DirectedInfinity[Sign[L]\^2\ Sign[Cos[y]]\^2]\), 
              "0"},
            {"0", "0", 
              "0", \(DirectedInfinity[
                  Sign[L]\^2\ Sign[Cos[y]]\^2\ Sign[Sec[y]]\^2]\ Sin[y]\^2\)}
            }], "\[NoBreak]", ")"}],
      (MatrixForm[ #]&)]], "Output"],

Cell[BoxData[
    \(Det::"inf" \(\(:\)\(\ \)\) 
      "Input matrix contains an infinite entry."\)], "Message"],

Cell[BoxData[
    \(Det[{{\(-1\), 0, 0, 0}, {0, Cos[y]\^2, 0, 0}, {0, 0, 
          DirectedInfinity[Sign[L]\^2\ Sign[Cos[y]]\^2], 0}, {0, 0, 0, 
          DirectedInfinity[
              Sign[L]\/Sign[Conjugate[L]]]\ Sin[y]\^2}}]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(MatrixForm[it1 = Limit[gcov, M \[Rule] 0]]\), "\[IndentingNewLine]", 
    \(FullSimplify[Det[it1], {x > 0, M > 0}]\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(-1\), "0", "0", "0"},
            {
              "0", \(\(a\^2 + 2\ x\^2 + 
                    a\^2\ Cos[2\ y]\)\/\(2\ \((a\^2 + x\^2)\)\)\), "0", "0"},
            {"0", "0", \(1\/2\ \((a\^2 + 2\ x\^2 + a\^2\ Cos[2\ y])\)\), 
              "0"},
            {"0", "0", "0", \(\((a\^2 + x\^2)\)\ Sin[y]\^2\)}
            }], "\[NoBreak]", ")"}],
      (MatrixForm[ #]&)]], "Output"],

Cell[BoxData[
    \(\(-\(1\/4\)\)\ \((a\^2 + 2\ x\^2 + a\^2\ Cos[2\ y])\)\^2\ Sin[y]\^2\)], \
"Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(MatrixForm[it1 = Limit[gcov, a \[Rule] 0]]\), "\[IndentingNewLine]", 
    \(FullSimplify[Det[it1], {x > 0, M > 0}]\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(\(-1\) + \(2\ M\)\/x\), "0", "0", "0"},
            {"0", \(x\/\(\(-2\)\ M + x\)\), "0", "0"},
            {"0", "0", \(x\^2\), "0"},
            {"0", "0", "0", \(x\^2\ Sin[y]\^2\)}
            }], "\[NoBreak]", ")"}],
      (MatrixForm[ #]&)]], "Output"],

Cell[BoxData[
    \(\(-x\^4\)\ Sin[y]\^2\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(MatrixForm[it = Limit[gcov, M \[Rule] 0]]\), "\[IndentingNewLine]", 
    \(MatrixForm[it2 = Limit[it, a \[Rule] 0]]\), "\[IndentingNewLine]", 
    \(detg = Det[it] //. {y \[Rule] Pi/4}\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(-1\), "0", "0", "0"},
            {
              "0", \(\(a\^2 + 2\ x\^2 + 
                    a\^2\ Cos[2\ y]\)\/\(2\ \((a\^2 + x\^2)\)\)\), "0", "0"},
            {"0", "0", \(1\/2\ \((a\^2 + 2\ x\^2 + a\^2\ Cos[2\ y])\)\), 
              "0"},
            {"0", "0", "0", \(\((a\^2 + x\^2)\)\ Sin[y]\^2\)}
            }], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(-1\), "0", "0", "0"},
            {"0", "1", "0", "0"},
            {"0", "0", \(x\^2\), "0"},
            {"0", "0", "0", \(x\^2\ Sin[y]\^2\)}
            }], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"],

Cell[BoxData[
    \(\(-\(1\/8\)\)\ \((a\^2 + 2\ x\^2)\)\^2\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Plot[Cos[2*h], {h, 0, Pi}]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.303152 0.309016 0.294303 [
[.17539 .29652 -9 -9 ]
[.17539 .29652 9 0 ]
[.32696 .29652 -3 -9 ]
[.32696 .29652 3 0 ]
[.47854 .29652 -9 -9 ]
[.47854 .29652 9 0 ]
[.63011 .29652 -3 -9 ]
[.63011 .29652 3 0 ]
[.78169 .29652 -9 -9 ]
[.78169 .29652 9 0 ]
[.93327 .29652 -3 -9 ]
[.93327 .29652 3 0 ]
[.01131 .01471 -12 -4.5 ]
[.01131 .01471 0 4.5 ]
[.01131 .16186 -24 -4.5 ]
[.01131 .16186 0 4.5 ]
[.01131 .45617 -18 -4.5 ]
[.01131 .45617 0 4.5 ]
[.01131 .60332 -6 -4.5 ]
[.01131 .60332 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.17539 .30902 m
.17539 .31527 L
s
[(0.5)] .17539 .29652 0 1 Mshowa
.32696 .30902 m
.32696 .31527 L
s
[(1)] .32696 .29652 0 1 Mshowa
.47854 .30902 m
.47854 .31527 L
s
[(1.5)] .47854 .29652 0 1 Mshowa
.63011 .30902 m
.63011 .31527 L
s
[(2)] .63011 .29652 0 1 Mshowa
.78169 .30902 m
.78169 .31527 L
s
[(2.5)] .78169 .29652 0 1 Mshowa
.93327 .30902 m
.93327 .31527 L
s
[(3)] .93327 .29652 0 1 Mshowa
.125 Mabswid
.05412 .30902 m
.05412 .31277 L
s
.08444 .30902 m
.08444 .31277 L
s
.11476 .30902 m
.11476 .31277 L
s
.14507 .30902 m
.14507 .31277 L
s
.2057 .30902 m
.2057 .31277 L
s
.23602 .30902 m
.23602 .31277 L
s
.26633 .30902 m
.26633 .31277 L
s
.29665 .30902 m
.29665 .31277 L
s
.35728 .30902 m
.35728 .31277 L
s
.38759 .30902 m
.38759 .31277 L
s
.41791 .30902 m
.41791 .31277 L
s
.44822 .30902 m
.44822 .31277 L
s
.50885 .30902 m
.50885 .31277 L
s
.53917 .30902 m
.53917 .31277 L
s
.56948 .30902 m
.56948 .31277 L
s
.5998 .30902 m
.5998 .31277 L
s
.66043 .30902 m
.66043 .31277 L
s
.69074 .30902 m
.69074 .31277 L
s
.72106 .30902 m
.72106 .31277 L
s
.75138 .30902 m
.75138 .31277 L
s
.81201 .30902 m
.81201 .31277 L
s
.84232 .30902 m
.84232 .31277 L
s
.87264 .30902 m
.87264 .31277 L
s
.90295 .30902 m
.90295 .31277 L
s
.96358 .30902 m
.96358 .31277 L
s
.9939 .30902 m
.9939 .31277 L
s
.25 Mabswid
0 .30902 m
1 .30902 L
s
.02381 .01471 m
.03006 .01471 L
s
[(-1)] .01131 .01471 1 0 Mshowa
.02381 .16186 m
.03006 .16186 L
s
[(-0.5)] .01131 .16186 1 0 Mshowa
.02381 .45617 m
.03006 .45617 L
s
[(0.5)] .01131 .45617 1 0 Mshowa
.02381 .60332 m
.03006 .60332 L
s
[(1)] .01131 .60332 1 0 Mshowa
.125 Mabswid
.02381 .04414 m
.02756 .04414 L
s
.02381 .07357 m
.02756 .07357 L
s
.02381 .103 m
.02756 .103 L
s
.02381 .13243 m
.02756 .13243 L
s
.02381 .1913 m
.02756 .1913 L
s
.02381 .22073 m
.02756 .22073 L
s
.02381 .25016 m
.02756 .25016 L
s
.02381 .27959 m
.02756 .27959 L
s
.02381 .33845 m
.02756 .33845 L
s
.02381 .36788 m
.02756 .36788 L
s
.02381 .39731 m
.02756 .39731 L
s
.02381 .42674 m
.02756 .42674 L
s
.02381 .4856 m
.02756 .4856 L
s
.02381 .51503 m
.02756 .51503 L
s
.02381 .54446 m
.02756 .54446 L
s
.02381 .57389 m
.02756 .57389 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .60332 m
.02499 .60331 L
.02605 .60329 L
.02729 .60324 L
.02846 .60318 L
.03053 .60303 L
.03279 .6028 L
.03527 .60248 L
.0379 .60205 L
.04262 .60106 L
.04749 .59974 L
.05205 .59822 L
.06244 .59381 L
.07305 .58793 L
.08274 .58135 L
.10458 .56251 L
.14429 .51515 L
.18248 .45627 L
.22313 .38349 L
.26226 .30833 L
.30384 .22863 L
.34391 .15746 L
.38246 .09886 L
.402 .07411 L
.42346 .05145 L
.44388 .03465 L
.45301 .02874 L
.46295 .02346 L
.46838 .0211 L
.4734 .01923 L
.4781 .01778 L
.4833 .0165 L
.48553 .01605 L
.48794 .01564 L
.49002 .01535 L
.4923 .01509 L
.49473 .01489 L
.49605 .01481 L
.49728 .01476 L
.49844 .01473 L
.49949 .01472 L
.50071 .01472 L
.50186 .01474 L
.50301 .01477 L
.50425 .01483 L
.50542 .0149 L
.50648 .01498 L
.5091 .01524 L
.51158 .01557 L
.5165 .01646 L
Mistroke
.52187 .01777 L
.53144 .02102 L
.54032 .02507 L
.56088 .03814 L
.5795 .05428 L
.61962 .1017 L
.65822 .16102 L
.69928 .23447 L
.73882 .31042 L
.77684 .38343 L
.81732 .45593 L
.85628 .51593 L
.87613 .54149 L
.89769 .56473 L
.91843 .58221 L
.92832 .58876 L
.93759 .59383 L
.94643 .59767 L
.95595 .6007 L
.9611 .60186 L
.96369 .60232 L
.96652 .60272 L
.96894 .60298 L
.9703 .6031 L
.97153 .60318 L
.97268 .60324 L
.97393 .60329 L
.97511 .60331 L
.97619 .60332 L
Mfstroke
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ
0?ooo`006`3oool00`000000oooo0?ooo`3o0?ooo`<0oooo000K0?ooo`030000003oool0oooo0?l0
oooo0`3oool001<0oooo1@0000030?ooo`030000003oool0oooo0?l0oooo0`3oool001D0oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`3o0?ooo`<0oooo000E0?ooo`030000003oool0
oooo00<0oooo0P00001h0?ooo`X00000P@3oool000d0oooo100000040?ooo`030000003oool0oooo
00<0oooo00<000000?ooo`3oool0L`3oool4000000X0oooo1000001m0?ooo`005@3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo0740oooo0P00000B0?ooo`800000N`3oool001@0oooo
0P0000050?ooo`030000003oool0oooo06l0oooo0P00000F0?ooo`800000N@3oool001/0oooo00<0
00000?ooo`3oool0KP3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo07H0oooo000K
0?ooo`030000003oool0oooo06d0oooo00<000000?ooo`3oool06P3oool2000007H0oooo000K0?oo
o`030000003oool0oooo06`0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`1c0?oo
o`006`3oool00`000000oooo0?ooo`1[0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3o
ool0LP3oool001/0oooo0P00001Z0?ooo`8000008`3oool200000780oooo000K0?ooo`030000003o
ool0oooo06P0oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`1_0?ooo`006`3oool0
0`000000oooo0?ooo`1W0?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3oool0KP3oool0
01/0oooo00<000000?ooo`3oool0IP3oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo
06d0oooo000K0?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool0:`3oool00`000000
oooo0?ooo`1/0?ooo`006`3oool00`000000oooo0?ooo`1T0?ooo`030000003oool0oooo02`0oooo
00<000000?ooo`3oool0K03oool001/0oooo00<000000?ooo`3oool0H`3oool00`000000oooo0?oo
o`0^0?ooo`030000003oool0oooo06/0oooo000K0?ooo`800000H`3oool00`000000oooo0?ooo`0`
0?ooo`030000003oool0oooo06X0oooo000K0?ooo`030000003oool0oooo0640oooo00<000000?oo
o`3oool0<P3oool00`000000oooo0?ooo`1Y0?ooo`006`3oool00`000000oooo0?ooo`1P0?ooo`03
0000003oool0oooo03<0oooo00<000000?ooo`3oool0J@3oool001/0oooo00<000000?ooo`3oool0
G`3oool00`000000oooo0?ooo`0e0?ooo`030000003oool0oooo06P0oooo000K0?ooo`030000003o
ool0oooo05h0oooo00<000000?ooo`3oool0=`3oool00`000000oooo0?ooo`1W0?ooo`006`3oool0
0`000000oooo0?ooo`1N0?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3oool0IP3oool0
01/0oooo00<000000?ooo`3oool0G@3oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo
06H0oooo000K0?ooo`030000003oool0oooo05`0oooo00<000000?ooo`3oool0>`3oool00`000000
oooo0?ooo`1U0?ooo`006`3oool2000005`0oooo00<000000?ooo`3oool0?@3oool00`000000oooo
0?ooo`1T0?ooo`006`3oool00`000000oooo0?ooo`1K0?ooo`030000003oool0oooo03h0oooo00<0
00000?ooo`3oool0H`3oool001/0oooo00<000000?ooo`3oool0FP3oool00`000000oooo0?ooo`0o
0?ooo`030000003oool0oooo06<0oooo000K0?ooo`030000003oool0oooo05T0oooo00<000000?oo
o`3oool0@@3oool00`000000oooo0?ooo`1R0?ooo`006`3oool00`000000oooo0?ooo`1I0?ooo`03
0000003oool0oooo0480oooo00<000000?ooo`3oool0H@3oool001/0oooo00<000000?ooo`3oool0
F03oool00`000000oooo0?ooo`130?ooo`030000003oool0oooo0640oooo000K0?ooo`030000003o
ool0oooo05P0oooo00<000000?ooo`3oool0A03oool00`000000oooo0?ooo`1P0?ooo`006`3oool0
0`000000oooo0?ooo`1G0?ooo`030000003oool0oooo04H0oooo00<000000?ooo`3oool0G`3oool0
01/0oooo0P00001G0?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool0G`3oool001/0
oooo00<000000?ooo`3oool0EP3oool00`000000oooo0?ooo`180?ooo`030000003oool0oooo05h0
oooo000K0?ooo`030000003oool0oooo05D0oooo00<000000?ooo`3oool0BP3oool00`000000oooo
0?ooo`1M0?ooo`006`3oool00`000000oooo0?ooo`1D0?ooo`030000003oool0oooo04`0oooo00<0
00000?ooo`3oool0G03oool001/0oooo00<000000?ooo`3oool0E03oool00`000000oooo0?ooo`1<
0?ooo`030000003oool0oooo05`0oooo000K0?ooo`030000003oool0oooo05<0oooo00<000000?oo
o`3oool0CP3oool00`000000oooo0?ooo`1K0?ooo`00203oool2000000@0oooo0P0000040?ooo`80
00001@3oool00`000000oooo0?ooo`1C0?ooo`030000003oool0oooo04l0oooo00<000000?ooo`3o
ool0FP3oool000L0oooo00@000000?ooo`3oool00000203oool010000000oooo0?ooo`0000040?oo
o`030000003oool0oooo0580oooo00<000000?ooo`3oool0D03oool00`000000oooo0?ooo`1J0?oo
o`001`3oool010000000oooo0?ooo`00000;0?ooo`030000003oool0oooo0080oooo0P00001B0?oo
o`030000003oool0oooo0580oooo00<000000?ooo`3oool0F@3oool000030?ooo`00000000000080
00000P3oool010000000oooo0?ooo`0000090?ooo`8000001@3oool00`000000oooo0?ooo`1A0?oo
o`030000003oool0oooo05<0oooo00<000000?ooo`3oool0F03oool000L0oooo00@000000?ooo`3o
ool000002@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0500oooo00<000000?oo
o`3oool0E03oool00`000000oooo0?ooo`1H0?ooo`00203oool2000000X0oooo0`0000040?ooo`03
0000003oool0oooo0500oooo00<000000?ooo`3oool0E@3oool00`000000oooo0?ooo`1G0?ooo`00
6`3oool00`000000oooo0?ooo`1?0?ooo`030000003oool0oooo05H0oooo00<000000?ooo`3oool0
E`3oool001/0oooo00<000000?ooo`3oool0C`3oool00`000000oooo0?ooo`1G0?ooo`030000003o
ool0oooo05H0oooo000K0?ooo`030000003oool0oooo04h0oooo00<000000?ooo`3oool0F03oool0
0`000000oooo0?ooo`1F0?ooo`006`3oool00`000000oooo0?ooo`1=0?ooo`030000003oool0oooo
05X0oooo00<000000?ooo`3oool0E@3oool001/0oooo0P00001>0?ooo`030000003oool0oooo05/0
oooo00<000000?ooo`3oool0E03oool001/0oooo00<000000?ooo`3oool0C03oool00`000000oooo
0?ooo`1L0?ooo`030000003oool0oooo05@0oooo000K0?ooo`030000003oool0oooo04`0oooo00<0
00000?ooo`3oool0G@3oool00`000000oooo0?ooo`1C0?ooo`006`3oool00`000000oooo0?ooo`1;
0?ooo`030000003oool0oooo05h0oooo00<000000?ooo`3oool0D`3oool001/0oooo00<000000?oo
o`3oool0BP3oool00`000000oooo0?ooo`1P0?ooo`030000003oool0oooo0580oooo000K0?ooo`03
0000003oool0oooo04X0oooo00<000000?ooo`3oool0H@3oool00`000000oooo0?ooo`1A0?ooo`00
6`3oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool0
D@3oool001/0oooo00<000000?ooo`3oool0B@3oool00`000000oooo0?ooo`1S0?ooo`030000003o
ool0oooo0500oooo000K0?ooo`800000B@3oool00`000000oooo0?ooo`1T0?ooo`030000003oool0
oooo0500oooo000K0?ooo`030000003oool0oooo04P0oooo00<000000?ooo`3oool0I@3oool00`00
0000oooo0?ooo`1?0?ooo`006`3oool00`000000oooo0?ooo`170?ooo`030000003oool0oooo06H0
oooo00<000000?ooo`3oool0C`3oool001/0oooo00<000000?ooo`3oool0AP3oool00`000000oooo
0?ooo`1X0?ooo`030000003oool0oooo04h0oooo000K0?ooo`030000003oool0oooo04H0oooo00<0
00000?ooo`3oool0J03oool00`000000oooo0?ooo`1>0?ooo`006`3oool00`000000oooo0?ooo`15
0?ooo`030000003oool0oooo06X0oooo00<000000?ooo`3oool0C@3oool001/0oooo00<000000?oo
o`3oool0A@3oool00`000000oooo0?ooo`1Z0?ooo`030000003oool0oooo04d0oooo000K0?ooo`80
0000A@3oool00`000000oooo0?ooo`1/0?ooo`030000003oool0oooo04`0oooo000K0?ooo`030000
003oool0oooo04@0oooo00<000000?ooo`3oool0K03oool00`000000oooo0?ooo`1<0?ooo`006`3o
ool00`000000oooo0?ooo`130?ooo`030000003oool0oooo06h0oooo00<000000?ooo`3oool0B`3o
ool001/0oooo00<000000?ooo`3oool0@`3oool00`000000oooo0?ooo`1^0?ooo`030000003oool0
oooo04/0oooo000K0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0L03oool00`00
0000oooo0?ooo`1:0?ooo`006`3oool00`000000oooo0?ooo`0N0?ooo`800000103oool2000000@0
oooo0P00000F0?ooo`030000003oool0oooo00H0oooo1@00000N0?ooo`D000000P3oool2000000@0
oooo0P00000O0?ooo`@000005@3oool00`000000oooo0?ooo`060?ooo`@000000`3oool2000000@0
oooo0P00000Q0?ooo`8000004P3oool001/0oooo00<000000?ooo`3oool07@3oool010000000oooo
0?ooo`0000080?ooo`040000003oool0oooo000001@0oooo00<000000?ooo`3oool02@3oool00`00
0000oooo0?ooo`0P0?ooo`030000003oool0oooo00L0oooo00@000000?ooo`3oool000007P3oool0
0`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool0
10000000oooo0?ooo`00000O0?ooo`040000003oool0oooo00000140oooo000K0?ooo`030000003o
ool0oooo01d0oooo00@000000?ooo`3oool000002`3oool00`000000oooo0?ooo`0B0?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0:0?ooo`030000
003oool0oooo01d0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`060?ooo`030000
003oool0oooo00/0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0@0?ooo`006`3o
ool2000001h0oooo00@000000?ooo`3oool000002@3oool2000001@0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo00P0oooo0P00000Q0?ooo`030000
003oool0oooo01H0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`080?ooo`800000
8`3oool00`000000oooo0?ooo`0?0?ooo`006`3oool00`000000oooo0?ooo`0M0?ooo`040000003o
ool0oooo000000T0oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`0:0?ooo`030000
003oool0oooo0200oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0N0?ooo`040000
003oool0oooo000001L0oooo00<000000?ooo`3oool0103oool010000000oooo0?ooo`0000090?oo
o`030000003oool0oooo01l0oooo00@000000?ooo`3oool000004@3oool001/0oooo00<000000?oo
o`3oool07P3oool2000000X0oooo0`00000B0?ooo`030000003oool0oooo00X0oooo0P00000Q0?oo
o`8000002P3oool3000001l0oooo0P00000I0?ooo`030000003oool0oooo00@0oooo0P00000:0?oo
o`<00000803oool200000180oooo000K0?ooo`030000003oool0oooo03l0oooo00<000000?ooo`3o
ool0MP3oool00`000000oooo0?ooo`170?ooo`006`3oool00`000000oooo0?ooo`0n0?ooo`030000
003oool0oooo07P0oooo00<000000?ooo`3oool0AP3oool001/0oooo00<000000?ooo`3oool0?P3o
ool00`000000oooo0?ooo`1h0?ooo`030000003oool0oooo04H0oooo000K0?ooo`030000003oool0
oooo03d0oooo00<000000?ooo`3oool0NP3oool00`000000oooo0?ooo`150?ooo`006`3oool00`00
0000oooo0?ooo`0m0?ooo`030000003oool0oooo07X0oooo00<000000?ooo`3oool0A@3oool001@0
ooooo`00000=000000006`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`0000001`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000070?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0
oooo0@0000010?ooo`40oooo000K0?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool0
4`3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool0
9@3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0
9P3oool00`000000oooo0?ooo`0@0?ooo`006`3oool00`000000oooo0?ooo`0j0?ooo`030000003o
ool0oooo07l0oooo00<000000?ooo`3oool0@`3oool001/0oooo00<000000?ooo`3oool0>P3oool0
0`000000oooo0?ooo`200?ooo`030000003oool0oooo0480oooo000K0?ooo`030000003oool0oooo
03T0oooo00<000000?ooo`3oool0P@3oool00`000000oooo0?ooo`120?ooo`006`3oool00`000000
oooo0?ooo`0i0?ooo`030000003oool0oooo0880oooo00<000000?ooo`3oool0@@3oool001/0oooo
00<000000?ooo`3oool0>03oool00`000000oooo0?ooo`230?ooo`030000003oool0oooo0440oooo
000K0?ooo`800000>@3oool00`000000oooo0?ooo`240?ooo`030000003oool0oooo0400oooo000K
0?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool0Q@3oool00`000000oooo0?ooo`10
0?ooo`006`3oool00`000000oooo0?ooo`0g0?ooo`030000003oool0oooo08H0oooo00<000000?oo
o`3oool0?`3oool001/0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`270?ooo`03
0000003oool0oooo03l0oooo000K0?ooo`030000003oool0oooo03H0oooo00<000000?ooo`3oool0
R03oool00`000000oooo0?ooo`0n0?ooo`006`3oool00`000000oooo0?ooo`0e0?ooo`030000003o
ool0oooo08T0oooo00<000000?ooo`3oool0?P3oool001/0oooo00<000000?ooo`3oool0=@3oool0
0`000000oooo0?ooo`2:0?ooo`030000003oool0oooo03d0oooo000K0?ooo`030000003oool0oooo
03@0oooo00<000000?ooo`3oool0R`3oool00`000000oooo0?ooo`0m0?ooo`006`3oool2000003D0
oooo00<000000?ooo`3oool0S03oool00`000000oooo0?ooo`0l0?ooo`006`3oool00`000000oooo
0?ooo`0c0?ooo`030000003oool0oooo08d0oooo00<000000?ooo`3oool0?03oool001/0oooo00<0
00000?ooo`3oool0<`3oool00`000000oooo0?ooo`2>0?ooo`030000003oool0oooo03/0oooo000K
0?ooo`030000003oool0oooo0380oooo00<000000?ooo`3oool0S`3oool00`000000oooo0?ooo`0k
0?ooo`006`3oool00`000000oooo0?ooo`0b0?ooo`030000003oool0oooo0900oooo00<000000?oo
o`3oool0>P3oool001/0oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`2B0?ooo`03
0000003oool0oooo03T0oooo000K0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool0
TP3oool00`000000oooo0?ooo`0i0?ooo`006`3oool00`000000oooo0?ooo`0`0?ooo`030000003o
ool0oooo09@0oooo00<000000?ooo`3oool0>03oool001/0oooo0P00000a0?ooo`030000003oool0
oooo09@0oooo00<000000?ooo`3oool0>03oool001/0oooo00<000000?ooo`3oool0;`3oool00`00
0000oooo0?ooo`2F0?ooo`030000003oool0oooo03L0oooo000K0?ooo`030000003oool0oooo02l0
oooo00<000000?ooo`3oool0UP3oool00`000000oooo0?ooo`0g0?ooo`006`3oool00`000000oooo
0?ooo`0^0?ooo`030000003oool0oooo09P0oooo00<000000?ooo`3oool0=P3oool001/0oooo00<0
00000?ooo`3oool0;@3oool00`000000oooo0?ooo`2J0?ooo`030000003oool0oooo03D0oooo000K
0?ooo`030000003oool0oooo02d0oooo00<000000?ooo`3oool0VP3oool00`000000oooo0?ooo`0e
0?ooo`006`3oool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo09`0oooo00<000000?oo
o`3oool0=03oool001/0oooo0P00000]0?ooo`030000003oool0oooo09`0oooo00<000000?ooo`3o
ool0=03oool001/0oooo00<000000?ooo`3oool0:`3oool00`000000oooo0?ooo`2N0?ooo`030000
003oool0oooo03<0oooo000K0?ooo`030000003oool0oooo02X0oooo00<000000?ooo`3oool0X03o
ool00`000000oooo0?ooo`0b0?ooo`006`3oool00`000000oooo0?ooo`0Z0?ooo`030000003oool0
oooo0:00oooo00<000000?ooo`3oool0<P3oool001/0oooo00<000000?ooo`3oool0:@3oool00`00
0000oooo0?ooo`2R0?ooo`030000003oool0oooo0340oooo000K0?ooo`030000003oool0oooo02T0
oooo00<000000?ooo`3oool0XP3oool00`000000oooo0?ooo`0a0?ooo`00203oool2000000@0oooo
0P0000040?ooo`8000001@3oool00`000000oooo0?ooo`0X0?ooo`030000003oool0oooo0:@0oooo
00<000000?ooo`3oool0<03oool000L0oooo00@000000?ooo`3oool00000203oool010000000oooo
0?ooo`0000040?ooo`030000003oool0oooo02P0oooo00<000000?ooo`3oool0Y03oool00`000000
oooo0?ooo`0`0?ooo`001`3oool010000000oooo0?ooo`00000;0?ooo`030000003oool0oooo0080
oooo0P00000X0?ooo`030000003oool0oooo0:H0oooo00<000000?ooo`3oool0;`3oool000L0oooo
00@000000?ooo`3oool000002@3oool2000000D0oooo00<000000?ooo`3oool09P3oool00`000000
oooo0?ooo`2X0?ooo`030000003oool0oooo02h0oooo00070?ooo`040000003oool0oooo000000T0
oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0V0?ooo`030000003oool0oooo0:P0
oooo00<000000?ooo`3oool0;P3oool000P0oooo0P00000:0?ooo`<00000103oool00`000000oooo
0?ooo`0U0?ooo`030000003oool0oooo0:X0oooo00<000000?ooo`3oool0;@3oool001/0oooo00<0
00000?ooo`3oool0903oool00`000000oooo0?ooo`2[0?ooo`030000003oool0oooo02d0oooo000K
0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0[03oool00`000000oooo0?ooo`0/
0?ooo`006`3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo0:h0oooo00<000000?oo
o`3oool0:`3oool001/0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`2^0?ooo`03
0000003oool0oooo02/0oooo000K0?ooo`8000008`3oool00`000000oooo0?ooo`2`0?ooo`030000
003oool0oooo02X0oooo000K0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0/P3o
ool00`000000oooo0?ooo`0Y0?ooo`006`3oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0
oooo0;80oooo00<000000?ooo`3oool0:@3oool001/0oooo00<000000?ooo`3oool0803oool00`00
0000oooo0?ooo`2d0?ooo`030000003oool0oooo02P0oooo000K0?ooo`030000003oool0oooo01l0
oooo00<000000?ooo`3oool0]@3oool00`000000oooo0?ooo`0X0?ooo`006`3oool00`000000oooo
0?ooo`0O0?ooo`030000003oool0oooo0;H0oooo00<000000?ooo`3oool09`3oool001/0oooo00<0
00000?ooo`3oool07P3oool00`000000oooo0?ooo`2h0?ooo`030000003oool0oooo02H0oooo000K
0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool0^03oool00`000000oooo0?ooo`0V
0?ooo`006`3oool2000001h0oooo00<000000?ooo`3oool0^P3oool00`000000oooo0?ooo`0U0?oo
o`006`3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo0;`0oooo00<000000?ooo`3o
ool0903oool001/0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`2n0?ooo`030000
003oool0oooo02<0oooo000K0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0`03o
ool00`000000oooo0?ooo`0R0?ooo`006`3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0
oooo0<40oooo00<000000?ooo`3oool08P3oool001/0oooo00<000000?ooo`3oool0603oool00`00
0000oooo0?ooo`330?ooo`030000003oool0oooo0240oooo000K0?ooo`030000003oool0oooo01L0
oooo00<000000?ooo`3oool0a@3oool00`000000oooo0?ooo`0P0?ooo`006`3oool00`000000oooo
0?ooo`0G0?ooo`030000003oool0oooo0<H0oooo00<000000?ooo`3oool07`3oool001/0oooo0P00
000G0?ooo`030000003oool0oooo0<P0oooo00<000000?ooo`3oool07P3oool001/0oooo00<00000
0?ooo`3oool05@3oool00`000000oooo0?ooo`3:0?ooo`030000003oool0oooo01d0oooo000K0?oo
o`030000003oool0oooo01@0oooo00<000000?ooo`3oool0b`3oool00`000000oooo0?ooo`0M0?oo
o`006`3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo0<d0oooo00<000000?ooo`3o
ool0703oool001/0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`3?0?ooo`030000
003oool0oooo01/0oooo000K0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0d@3o
ool00`000000oooo0?ooo`0J0?ooo`006`3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0
oooo0=<0oooo00<000000?ooo`3oool06@3oool001/0oooo0P00000@0?ooo`030000003oool0oooo
0=D0oooo00<000000?ooo`3oool0603oool001/0oooo00<000000?ooo`3oool03P3oool00`000000
oooo0?ooo`3G0?ooo`800000603oool001/0oooo00<000000?ooo`3oool03@3oool00`000000oooo
0?ooo`3J0?ooo`030000003oool0oooo01D0oooo000K0?ooo`030000003oool0oooo00/0oooo0P00
003N0?ooo`030000003oool0oooo01@0oooo000K0?ooo`030000003oool0oooo00X0oooo00<00000
0?ooo`3oool0g`3oool2000001@0oooo000K0?ooo`030000003oool0oooo00P0oooo0P00003T0?oo
o`8000004P3oool001<0oooo1@0000030?ooo`030000003oool0oooo00H0oooo0P00003X0?ooo`03
0000003oool0oooo00l0oooo000E0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0
0`3oool300000>/0oooo0`00000>0?ooo`005@3oool00`000000oooo0?ooo`030?ooo`H00000l@3o
ool7000000L0oooo000E0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0o`3oool3
0?ooo`005@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?l0oooo0`3oool001@0
oooo0P0000050?ooo`030000003oool0oooo0?l0oooo0`3oool001/0oooo00<000000?ooo`3oool0
o`3oool30?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00
o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-0.338866, -1.13007, \
0.0124008, 0.0127736}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(xp = Sqrt[x^2 + a^2]\), "\[IndentingNewLine]", 
    \(Clear[xp]\), "\[IndentingNewLine]", 
    \(dxdxp = D[Sqrt[xp^2 - a^2], xp]\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \(\@\(a\^2 + x\^2\)\)], "Output"],

Cell[BoxData[
    \(xp\/\@\(\(-a\^2\) + xp\^2\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(trans = {{1, 0, 0, 0}, {0, dxdxp, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
          1}}\)], "Input"],

Cell[BoxData[
    \({{1, 0, 0, 0}, {0, xp\/\@\(\(-a\^2\) + xp\^2\), 0, 0}, {0, 0, 1, 
        0}, {0, 0, 0, 1}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(itprim = 
      Table[Sum[
            it[\([i, j]\)]*trans[\([ii, i]\)]*trans[\([jj, j]\)], {i, 1, 
              4}, {j, 1, 4}], {ii, 1, 4}, {jj, 1, 4}] //. {x \[Rule] 
            Sqrt[xp^2 - a^2]}\), "\[IndentingNewLine]", 
    \(itprim = FullSimplify[itprim]\), "\[IndentingNewLine]", 
    \(MatrixForm[itprim]\)}], "Input"],

Cell[BoxData[
    \({{\(-1\), 0, 0, 
        0}, {0, \(a\^2 + 2\ \((\(-a\^2\) + xp\^2)\) + a\^2\ Cos[2\ y]\)\/\(2\ \
\((\(-a\^2\) + xp\^2)\)\), 0, 0}, {0, 0, 
        1\/2\ \((a\^2 + 2\ \((\(-a\^2\) + xp\^2)\) + a\^2\ Cos[2\ y])\), 
        0}, {0, 0, 0, xp\^2\ Sin[y]\^2}}\)], "Output"],

Cell[BoxData[
    \({{\(-1\), 0, 0, 
        0}, {0, \(a\^2 - 2\ xp\^2 - a\^2\ Cos[2\ y]\)\/\(2\ \((a\^2 - \
xp\^2)\)\), 0, 0}, {0, 0, \(-\(a\^2\/2\)\) + xp\^2 + 1\/2\ a\^2\ Cos[2\ y], 
        0}, {0, 0, 0, xp\^2\ Sin[y]\^2}}\)], "Output"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(-1\), "0", "0", "0"},
            {
              "0", \(\(a\^2 - 2\ xp\^2 - 
                    a\^2\ Cos[2\ y]\)\/\(2\ \((a\^2 - xp\^2)\)\)\), "0", 
              "0"},
            {"0", "0", \(\(-\(a\^2\/2\)\) + xp\^2 + 1\/2\ a\^2\ Cos[2\ y]\), 
              "0"},
            {"0", "0", "0", \(xp\^2\ Sin[y]\^2\)}
            }], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]]
},
FrontEndVersion->"4.0 for Microsoft Windows",
ScreenRectangle->{{0, 1600}, {0, 1113}},
WindowSize->{1592, 1079},
WindowMargins->{{0, Automatic}, {Automatic, 0}}
]


(***********************************************************************
Cached data follows.  If you edit this Notebook file directly, not using
Mathematica, you must remove the line containing CacheID at the top of 
the file.  The cache data will then be recreated when you save this file 
from within Mathematica.
***********************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1717, 49, 94, 2, 50, "Input"],

Cell[CellGroupData[{
Cell[1836, 55, 40, 1, 30, "Input"],
Cell[1879, 58, 857, 17, 139, "Output"],
Cell[2739, 77, 379, 5, 80, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[3155, 87, 120, 2, 50, "Input"],
Cell[3278, 91, 591, 10, 88, "Output"],
Cell[3872, 103, 810, 16, 223, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[4719, 124, 151, 2, 50, "Input"],
Cell[4873, 128, 459, 11, 95, "Output"],
Cell[5335, 141, 111, 2, 24, "Message"],
Cell[5449, 145, 244, 4, 44, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5730, 154, 149, 2, 50, "Input"],
Cell[5882, 158, 468, 11, 115, "Output"],
Cell[6353, 171, 103, 2, 42, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[6493, 178, 149, 2, 50, "Input"],
Cell[6645, 182, 340, 8, 109, "Output"],
Cell[6988, 192, 54, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[7079, 198, 219, 3, 70, "Input"],
Cell[7301, 203, 506, 12, 101, "Output"],
Cell[7810, 217, 339, 9, 79, "Output"],
Cell[8152, 228, 72, 1, 42, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[8261, 234, 59, 1, 30, "Input"],
Cell[8323, 237, 22067, 538, 186, 4539, 317, "GraphicsData", "PostScript", \
"Graphics"],
Cell[30393, 777, 130, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[30560, 785, 197, 4, 90, "Input"],
Cell[30760, 791, 51, 1, 35, "Output"],
Cell[30814, 794, 61, 1, 45, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[30912, 800, 112, 2, 30, "Input"],
Cell[31027, 804, 125, 2, 45, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[31189, 811, 350, 7, 70, "Input"],
Cell[31542, 820, 287, 5, 47, "Output"],
Cell[31832, 827, 240, 4, 47, "Output"],
Cell[32075, 833, 515, 13, 117, "Output"]
}, Open  ]]
}
]
*)




(***********************************************************************
End of Mathematica Notebook file.
***********************************************************************)

