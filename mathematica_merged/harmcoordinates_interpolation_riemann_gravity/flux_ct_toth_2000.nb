(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.0'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     23584,        691]*)
(*NotebookOutlinePosition[     24229,        713]*)
(*  CellTagsIndexPosition[     24185,        709]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
    \(emfd = {emfd1, emfd2, emfd3}\), "\[IndentingNewLine]", 
    \(flux1 = 
      Table[Sum[Signature[{i, j, k}]*emfd[\([k]\)], {k, 1, 3}], {i, 1, 
          3}, {j, 1, 3}]\), "\[IndentingNewLine]", 
    \(B = {B1, B2, B3}\), "\[IndentingNewLine]", 
    \(v = {v1, v2, v3}\), "\[IndentingNewLine]", 
    \(flux2 = 
      Table[B[\([j]\)]*v[\([i]\)] - B[\([i]\)]*v[\([j]\)], {i, 1, 3}, {j, 1, 
          3}]\), "\[IndentingNewLine]", 
    \(myemfd = 
      Table[Sum[
          Signature[{i, j, k}]*v[\([j]\)]*B[\([k]\)], {j, 1, 3}, {k, 1, 
            3}], {i, 1, 3}]\), "\[IndentingNewLine]", 
    \(\(flux3 = 
        Table[Sum[Signature[{i, j, k}]*myemfd[\([k]\)], {k, 1, 3}], {i, 1, 
            3}, {j, 1, 3}];\)\), "\[IndentingNewLine]", 
    \(flux3 = FullSimplify[flux3]\)}], "Input"],

Cell[BoxData[
    \({emfd1, emfd2, emfd3}\)], "Output"],

Cell[BoxData[
    \({{0, emfd3, \(-emfd2\)}, {\(-emfd3\), 0, emfd1}, {emfd2, \(-emfd1\), 
        0}}\)], "Output"],

Cell[BoxData[
    \({B1, B2, B3}\)], "Output"],

Cell[BoxData[
    \({v1, v2, v3}\)], "Output"],

Cell[BoxData[
    \({{0, B2\ v1 - B1\ v2, B3\ v1 - B1\ v3}, {\(-B2\)\ v1 + B1\ v2, 0, 
        B3\ v2 - B2\ v3}, {\(-B3\)\ v1 + B1\ v3, \(-B3\)\ v2 + B2\ v3, 
        0}}\)], "Output"],

Cell[BoxData[
    \({B3\ v2 - B2\ v3, \(-B3\)\ v1 + B1\ v3, B2\ v1 - B1\ v2}\)], "Output"],

Cell[BoxData[
    \({{0, B2\ v1 - B1\ v2, B3\ v1 - B1\ v3}, {\(-B2\)\ v1 + B1\ v2, 0, 
        B3\ v2 - B2\ v3}, {\(-B3\)\ v1 + B1\ v3, \(-B3\)\ v2 + B2\ v3, 
        0}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(flux2 - flux3\)], "Input"],

Cell[BoxData[
    \({{0, 0, 0}, {0, 0, 0}, {0, 0, 0}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(eqtable = 
      Table[flux1[\([IntegerPart[\((i - 1)\)/3] + 1, Mod[i - 1, 3] + 1]\)] - 
            flux2[\([IntegerPart[\((i - 1)\)/3] + 1, 
                Mod[i - 1, 3] + 1]\)] \[Equal] 0, {i, 1, 3*3}]\)], "Input"],

Cell[BoxData[
    \({True, 
      emfd3 - B2\ v1 + B1\ v2 \[Equal] 
        0, \(-emfd2\) - B3\ v1 + B1\ v3 \[Equal] 
        0, \(-emfd3\) + B2\ v1 - B1\ v2 \[Equal] 0, True, 
      emfd1 - B3\ v2 + B2\ v3 \[Equal] 0, 
      emfd2 + B3\ v1 - B1\ v3 \[Equal] 
        0, \(-emfd1\) + B3\ v2 - B2\ v3 \[Equal] 0, True}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatrixForm[eqtable]\)], "Input"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"True"},
            {\(emfd3 - B2\ v1 + B1\ v2 \[Equal] 0\)},
            {\(\(-emfd2\) - B3\ v1 + B1\ v3 \[Equal] 0\)},
            {\(\(-emfd3\) + B2\ v1 - B1\ v2 \[Equal] 0\)},
            {"True"},
            {\(emfd1 - B3\ v2 + B2\ v3 \[Equal] 0\)},
            {\(emfd2 + B3\ v1 - B1\ v3 \[Equal] 0\)},
            {\(\(-emfd1\) + B3\ v2 - B2\ v3 \[Equal] 0\)},
            {"True"}
            }], "\[NoBreak]", ")"}],
      MatrixForm[ {True, 
        Equal[ 
          Plus[ emfd3, 
            Times[ -1, B2, v1], 
            Times[ B1, v2]], 0], 
        Equal[ 
          Plus[ 
            Times[ -1, emfd2], 
            Times[ -1, B3, v1], 
            Times[ B1, v3]], 0], 
        Equal[ 
          Plus[ 
            Times[ -1, emfd3], 
            Times[ B2, v1], 
            Times[ -1, B1, v2]], 0], True, 
        Equal[ 
          Plus[ emfd1, 
            Times[ -1, B3, v2], 
            Times[ B2, v3]], 0], 
        Equal[ 
          Plus[ emfd2, 
            Times[ B3, v1], 
            Times[ -1, B1, v3]], 0], 
        Equal[ 
          Plus[ 
            Times[ -1, emfd1], 
            Times[ B3, v2], 
            Times[ -1, B2, v3]], 0], True}]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(sols = 
      Solve[{eqtable[\([2]\)], eqtable[\([3]\)], eqtable[\([6]\)]}, {emfd1, 
          emfd2, emfd3}]\), "\[IndentingNewLine]", 
    \(MatrixForm[eqtable //. sols[\([1]\)]]\)}], "Input"],

Cell[BoxData[
    \({{emfd3 \[Rule] B2\ v1 - B1\ v2, emfd2 \[Rule] \(-B3\)\ v1 + B1\ v3, 
        emfd1 \[Rule] B3\ v2 - B2\ v3}}\)], "Output"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"True"},
            {"True"},
            {"True"},
            {"True"},
            {"True"},
            {"True"},
            {"True"},
            {"True"},
            {"True"}
            }], "\[NoBreak]", ")"}],
      MatrixForm[ {True, True, True, True, True, True, True, True, 
        True}]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(dxu = {dx0, dx1, dx2, dx3}\), "\[IndentingNewLine]", 
    \(Sum[
      Signature[{1, aa, bb, gg}]*dxu[\([aa]\)]*dxu[\([bb]\)]*
        dxu[\([gg]\)], {aa, 1, 4}, {bb, 1, 4}, {gg, 1, 
        4}]\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \({dx0, dx1, dx2, dx3}\)], "Output"],

Cell[BoxData[
    \(0\)], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(dxu = {dx1, dx2, dx3}\), "\[IndentingNewLine]", 
    \(Table[
      Sum[Signature[{aa, bb, cc}]*dxu[\([aa]\)]*dxu[\([bb]\)]*
          dxu[\([cc]\)], {bb, 1, 3}, {cc, 1, 3}], {aa, 1, 3}]\)}], "Input"],

Cell[BoxData[
    \({dx1, dx2, dx3}\)], "Output"],

Cell[BoxData[
    \({0, 0, 0}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\((10000. )\)^\((\(-3\)/2)\)\)], "Input"],

Cell[BoxData[
    \(1.0000000000000002`*^-6\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(rho = r^\((\(-3\)/2)\)\), "\[IndentingNewLine]", 
    \(lrho = Log[10, rho]\), "\[IndentingNewLine]", 
    \(mylrho = lrho //. {r \[Rule] Exp[x]}\), "\[IndentingNewLine]", 
    \(rout = 10000\), "\[IndentingNewLine]", 
    \(xout = Log[rout]\)}], "Input"],

Cell[BoxData[
    \(1\/r\^\(3/2\)\)], "Output"],

Cell[BoxData[
    \(Log[1\/r\^\(3/2\)]\/Log[10]\)], "Output"],

Cell[BoxData[
    \(Log[1\/\((\[ExponentialE]\^x)\)\^\(3/2\)]\/Log[10]\)], "Output"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(rout\\)\\\" is similar to existing symbol \\\
\"\\!\\(Rout\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \(10000\)], "Output"],

Cell[BoxData[
    RowBox[{\(General::"spell"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(xout\\)\\\" is similar to existing symbols \
\\!\\({rout, Xout}\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \(Log[10000]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Plot[mylrho, {x, 1, xout}]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.103403 0.603319 0.0981006 [
[.23062 .59082 -3 -9 ]
[.23062 .59082 3 0 ]
[.43742 .59082 -3 -9 ]
[.43742 .59082 3 0 ]
[.64423 .59082 -3 -9 ]
[.64423 .59082 3 0 ]
[.85104 .59082 -3 -9 ]
[.85104 .59082 3 0 ]
[.01131 .01472 -12 -4.5 ]
[.01131 .01472 0 4.5 ]
[.01131 .11282 -12 -4.5 ]
[.01131 .11282 0 4.5 ]
[.01131 .21092 -12 -4.5 ]
[.01131 .21092 0 4.5 ]
[.01131 .30902 -12 -4.5 ]
[.01131 .30902 0 4.5 ]
[.01131 .40712 -12 -4.5 ]
[.01131 .40712 0 4.5 ]
[.01131 .50522 -12 -4.5 ]
[.01131 .50522 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.23062 .60332 m
.23062 .60957 L
s
[(2)] .23062 .59082 0 1 Mshowa
.43742 .60332 m
.43742 .60957 L
s
[(4)] .43742 .59082 0 1 Mshowa
.64423 .60332 m
.64423 .60957 L
s
[(6)] .64423 .59082 0 1 Mshowa
.85104 .60332 m
.85104 .60957 L
s
[(8)] .85104 .59082 0 1 Mshowa
.125 Mabswid
.07551 .60332 m
.07551 .60707 L
s
.12721 .60332 m
.12721 .60707 L
s
.17891 .60332 m
.17891 .60707 L
s
.28232 .60332 m
.28232 .60707 L
s
.33402 .60332 m
.33402 .60707 L
s
.38572 .60332 m
.38572 .60707 L
s
.48913 .60332 m
.48913 .60707 L
s
.54083 .60332 m
.54083 .60707 L
s
.59253 .60332 m
.59253 .60707 L
s
.69593 .60332 m
.69593 .60707 L
s
.74763 .60332 m
.74763 .60707 L
s
.79934 .60332 m
.79934 .60707 L
s
.90274 .60332 m
.90274 .60707 L
s
.95444 .60332 m
.95444 .60707 L
s
.25 Mabswid
0 .60332 m
1 .60332 L
s
.02381 .01472 m
.03006 .01472 L
s
[(-6)] .01131 .01472 1 0 Mshowa
.02381 .11282 m
.03006 .11282 L
s
[(-5)] .01131 .11282 1 0 Mshowa
.02381 .21092 m
.03006 .21092 L
s
[(-4)] .01131 .21092 1 0 Mshowa
.02381 .30902 m
.03006 .30902 L
s
[(-3)] .01131 .30902 1 0 Mshowa
.02381 .40712 m
.03006 .40712 L
s
[(-2)] .01131 .40712 1 0 Mshowa
.02381 .50522 m
.03006 .50522 L
s
[(-1)] .01131 .50522 1 0 Mshowa
.125 Mabswid
.02381 .03434 m
.02756 .03434 L
s
.02381 .05396 m
.02756 .05396 L
s
.02381 .07358 m
.02756 .07358 L
s
.02381 .0932 m
.02756 .0932 L
s
.02381 .13244 m
.02756 .13244 L
s
.02381 .15206 m
.02756 .15206 L
s
.02381 .17168 m
.02756 .17168 L
s
.02381 .1913 m
.02756 .1913 L
s
.02381 .23054 m
.02756 .23054 L
s
.02381 .25016 m
.02756 .25016 L
s
.02381 .26978 m
.02756 .26978 L
s
.02381 .2894 m
.02756 .2894 L
s
.02381 .32864 m
.02756 .32864 L
s
.02381 .34826 m
.02756 .34826 L
s
.02381 .36788 m
.02756 .36788 L
s
.02381 .3875 m
.02756 .3875 L
s
.02381 .42674 m
.02756 .42674 L
s
.02381 .44636 m
.02756 .44636 L
s
.02381 .46598 m
.02756 .46598 L
s
.02381 .4856 m
.02756 .4856 L
s
.02381 .52484 m
.02756 .52484 L
s
.02381 .54446 m
.02756 .54446 L
s
.02381 .56408 m
.02756 .56408 L
s
.02381 .5837 m
.02756 .5837 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.12721 .53941 m
.16165 .51813 L
.19921 .49491 L
.23449 .47311 L
.26841 .45215 L
.30452 .42983 L
.33928 .40835 L
.37623 .38551 L
.41182 .36351 L
.44607 .34235 L
.4825 .31983 L
.51757 .29816 L
.5513 .27731 L
.58722 .25511 L
.62178 .23375 L
.65853 .21104 L
.69392 .18917 L
.72797 .16812 L
.7642 .14573 L
.79908 .12417 L
.83615 .10126 L
.87187 .07919 L
.90623 .05795 L
.94278 .03536 L
.97619 .01472 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00o`3ooolQ0?ooo`003`3oool00`000000oooo0?ooo`3o0?ooo`l0oooo000?0?ooo`030000
003oool0oooo0?l0oooo3`3oool000L0oooo0`0000050?ooo`030000003oool0oooo0?l0oooo3`3o
ool000L0oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`3o0?ooo`l0oooo0007
0?ooo`040000003oool0oooo000000@0oooo0`00003o0?ooo`L0oooo00<000000?ooo`3oool01@3o
ool000030?ooo`0000000000008000000P3oool3000000D0oooo00<000000?ooo`3oool0o`3oool5
0?ooo`800000203oool000P0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`3o0?oo
o`@0oooo00<000000?ooo`3oool0203oool000P0oooo0`0000040?ooo`030000003oool0oooo0?l0
oooo0P3oool2000000/0oooo000?0?ooo`030000003oool0oooo0?l0oooo0@3oool00`000000oooo
0?ooo`0;0?ooo`003`3oool00`000000oooo0?ooo`3n0?ooo`8000003P3oool000l0oooo0P00003n
0?ooo`030000003oool0oooo00h0oooo000?0?ooo`030000003oool0oooo0?/0oooo0P00000A0?oo
o`003`3oool00`000000oooo0?ooo`3i0?ooo`8000004`3oool000l0oooo00<000000?ooo`3oool0
m`3oool2000001D0oooo000?0?ooo`030000003oool0oooo0?D0oooo0P00000G0?ooo`003`3oool2
00000?@0oooo0P00000I0?ooo`003`3oool00`000000oooo0?ooo`3b0?ooo`030000003oool0oooo
01T0oooo000?0?ooo`030000003oool0oooo0?00oooo0P00000L0?ooo`003`3oool00`000000oooo
0?ooo`3_0?ooo`030000003oool0oooo01`0oooo000?0?ooo`030000003oool0oooo0>d0oooo0P00
000O0?ooo`003`3oool00`000000oooo0?ooo`3/0?ooo`030000003oool0oooo01l0oooo000?0?oo
o`800000j`3oool200000280oooo000?0?ooo`030000003oool0oooo0>T0oooo00<000000?ooo`3o
ool08P3oool000l0oooo00<000000?ooo`3oool0i`3oool2000002D0oooo000?0?ooo`030000003o
ool0oooo0>D0oooo0P00000W0?ooo`003`3oool00`000000oooo0?ooo`3T0?ooo`030000003oool0
oooo02L0oooo000?0?ooo`800000h`3oool2000002X0oooo000?0?ooo`030000003oool0oooo0>00
oooo0P00000/0?ooo`003`3oool00`000000oooo0?ooo`3O0?ooo`030000003oool0oooo02`0oooo
000?0?ooo`030000003oool0oooo0=d0oooo0P00000_0?ooo`00203oool2000000D0oooo00<00000
0?ooo`3oool0g03oool00`000000oooo0?ooo`0_0?ooo`001`3oool010000000oooo0?ooo`000004
0?ooo`030000003oool0oooo0=/0oooo00<000000?ooo`3oool0<03oool000X0oooo00<000000?oo
o`3oool00P3oool300000=T0oooo0P00000c0?ooo`0000<0oooo0000000000000P0000030?ooo`80
00001@3oool00`000000oooo0?ooo`3H0?ooo`030000003oool0oooo03<0oooo00080?ooo`030000
003oool0oooo00@0oooo00<000000?ooo`3oool0eP3oool2000003H0oooo00080?ooo`<00000103o
ool00`000000oooo0?ooo`3E0?ooo`030000003oool0oooo03H0oooo000?0?ooo`030000003oool0
oooo0=<0oooo0P00000i0?ooo`003`3oool200000=80oooo0P00000k0?ooo`003`3oool00`000000
oooo0?ooo`3@0?ooo`030000003oool0oooo03/0oooo000?0?ooo`030000003oool0oooo0<h0oooo
0P00000n0?ooo`003`3oool00`000000oooo0?ooo`3<0?ooo`800000@03oool000l0oooo00<00000
0?ooo`3oool0b`3oool00`000000oooo0?ooo`100?ooo`003`3oool00`000000oooo0?ooo`390?oo
o`800000@`3oool000l0oooo0P0000380?ooo`800000A@3oool000l0oooo00<000000?ooo`3oool0
aP3oool00`000000oooo0?ooo`150?ooo`003`3oool00`000000oooo0?ooo`340?ooo`800000B03o
ool000l0oooo00<000000?ooo`3oool0`P3oool2000004X0oooo000?0?ooo`030000003oool0oooo
0<40oooo00<000000?ooo`3oool0BP3oool000l0oooo0P0000300?ooo`800000C@3oool000l0oooo
00<000000?ooo`3oool0_@3oool2000004l0oooo000?0?ooo`030000003oool0oooo0;`0oooo00<0
00000?ooo`3oool0C`3oool000l0oooo00<000000?ooo`3oool0^P3oool200000580oooo000?0?oo
o`030000003oool0oooo0;P0oooo0P00001D0?ooo`003`3oool200000;P0oooo00<000000?ooo`3o
ool0E03oool000l0oooo00<000000?ooo`3oool0]@3oool2000005L0oooo000?0?ooo`030000003o
ool0oooo0;@0oooo00<000000?ooo`3oool0E`3oool000l0oooo00<000000?ooo`3oool0/P3oool2
000005X0oooo00090?ooo`<000000`3oool00`000000oooo0?ooo`2a0?ooo`030000003oool0oooo
05X0oooo000:0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0[`3oool2000005d0
oooo00070?ooo`D000000`3oool300000:h0oooo00<000000?ooo`3oool0G@3oool000030?ooo`00
00000000008000000P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo0:`0oooo
0P00001P0?ooo`00203oool00`000000oooo000000040?ooo`030000003oool0oooo0:X0oooo0P00
001R0?ooo`002@3oool2000000@0oooo00<000000?ooo`3oool0Z03oool2000006@0oooo000?0?oo
o`030000003oool0oooo0:H0oooo0P00001V0?ooo`003`3oool200000:D0oooo0P00001X0?ooo`00
3`3oool00`000000oooo0?ooo`2S0?ooo`030000003oool0oooo06P0oooo000?0?ooo`030000003o
ool0oooo0:40oooo0P00001[0?ooo`003`3oool00`000000oooo0?ooo`2P0?ooo`030000003oool0
oooo06/0oooo000?0?ooo`030000003oool0oooo09h0oooo0P00001^0?ooo`003`3oool00`000000
oooo0?ooo`2M0?ooo`030000003oool0oooo06h0oooo000?0?ooo`800000W03oool200000740oooo
000?0?ooo`030000003oool0oooo09X0oooo00<000000?ooo`3oool0L@3oool000l0oooo00<00000
0?ooo`3oool0V03oool2000007@0oooo000?0?ooo`030000003oool0oooo09H0oooo0P00001f0?oo
o`003`3oool00`000000oooo0?ooo`2E0?ooo`030000003oool0oooo07H0oooo000?0?ooo`800000
U03oool2000007T0oooo000?0?ooo`030000003oool0oooo0940oooo0P00001k0?ooo`003`3oool0
0`000000oooo0?ooo`2@0?ooo`030000003oool0oooo07/0oooo000?0?ooo`030000003oool0oooo
08h0oooo0P00001n0?ooo`003`3oool00`000000oooo0?ooo`2<0?ooo`800000P03oool000l0oooo
00<000000?ooo`3oool0R`3oool00`000000oooo0?ooo`200?ooo`003`3oool2000008X0oooo0P00
00230?ooo`003`3oool00`000000oooo0?ooo`270?ooo`800000Q@3oool000l0oooo00<000000?oo
o`3oool0QP3oool00`000000oooo0?ooo`250?ooo`00203oool2000000D0oooo00<000000?ooo`3o
ool0Q03oool2000008P0oooo00070?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3o
ool0P`3oool00`000000oooo0?ooo`280?ooo`002@3oool00`000000oooo0?ooo`030?ooo`<00000
P@3oool2000008/0oooo00000`3oool0000000000002000000D0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`200?ooo`030000003oool0oooo08/0oooo00070?ooo`040000003oool0
oooo000000@0oooo00<000000?ooo`3oool0OP3oool2000008h0oooo00080?ooo`8000001@3oool0
0`000000oooo0?ooo`1m0?ooo`030000003oool0oooo08h0oooo000?0?ooo`030000003oool0oooo
07/0oooo0P00002A0?ooo`003`3oool00`000000oooo0?ooo`1j0?ooo`030000003oool0oooo0940
oooo000?0?ooo`800000N@3oool2000009@0oooo000?0?ooo`030000003oool0oooo07H0oooo0P00
002F0?ooo`003`3oool00`000000oooo0?ooo`1e0?ooo`030000003oool0oooo09H0oooo000?0?oo
o`030000003oool0oooo07<0oooo0P00002I0?ooo`003`3oool00`000000oooo0?ooo`1b0?ooo`03
0000003oool0oooo09T0oooo000?0?ooo`800000L@3oool2000009`0oooo000?0?ooo`030000003o
ool0oooo06h0oooo0P00002N0?ooo`003`3oool00`000000oooo0?ooo`1/0?ooo`800000X03oool0
00l0oooo00<000000?ooo`3oool0JP3oool200000:80oooo000?0?ooo`030000003oool0oooo06T0
oooo00<000000?ooo`3oool0XP3oool000l0oooo00<000000?ooo`3oool0I`3oool200000:D0oooo
000?0?ooo`800000I`3oool00`000000oooo0?ooo`2U0?ooo`003`3oool00`000000oooo0?ooo`1U
0?ooo`030000003oool0oooo0:H0oooo000?0?ooo`030000003oool0oooo06<0oooo0P00002Y0?oo
o`003`3oool00`000000oooo0?ooo`1R0?ooo`030000003oool0oooo0:T0oooo000?0?ooo`030000
003oool0oooo0600oooo0P00002/0?ooo`003`3oool200000600oooo00<000000?ooo`3oool0[03o
ool000l0oooo00<000000?ooo`3oool0G@3oool200000:l0oooo000?0?ooo`030000003oool0oooo
05/0oooo0P00002a0?ooo`003`3oool00`000000oooo0?ooo`1J0?ooo`030000003oool0oooo0;40
oooo00070?ooo`@00000103oool00`000000oooo0?ooo`1H0?ooo`800000]03oool000L0oooo00<0
00000?ooo`3oool01@3oool00`000000oooo0?ooo`1F0?ooo`800000]P3oool000P0oooo00<00000
0?ooo`3oool0103oool3000005D0oooo00<000000?ooo`3oool0]P3oool000030?ooo`0000000000
00800000103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo05<0oooo0P00002i0?oo
o`001`3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo0540oooo0P00002k0?oo
o`00203oool2000000D0oooo00<000000?ooo`3oool0D03oool00`000000oooo0?ooo`2k0?ooo`00
3`3oool00`000000oooo0?ooo`1>0?ooo`800000_P3oool000l0oooo0P00001=0?ooo`800000`03o
ool000l0oooo00<000000?ooo`3oool0B`3oool00`000000oooo0?ooo`300?ooo`003`3oool00`00
0000oooo0?ooo`190?ooo`800000``3oool000l0oooo00<000000?ooo`3oool0A`3oool200000<D0
oooo000?0?ooo`030000003oool0oooo04H0oooo00<000000?ooo`3oool0a@3oool000l0oooo0P00
00150?ooo`800000b03oool000l0oooo00<000000?ooo`3oool0@P3oool200000<X0oooo000?0?oo
o`030000003oool0oooo0440oooo00<000000?ooo`3oool0bP3oool000l0oooo00<000000?ooo`3o
ool0?`3oool200000<d0oooo000?0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3oool0
c@3oool000l0oooo00<000000?ooo`3oool0?03oool200000=00oooo000?0?ooo`800000?03oool0
0`000000oooo0?ooo`3@0?ooo`003`3oool00`000000oooo0?ooo`0i0?ooo`800000d`3oool000l0
oooo00<000000?ooo`3oool0>03oool00`000000oooo0?ooo`3C0?ooo`003`3oool00`000000oooo
0?ooo`0f0?ooo`800000eP3oool000l0oooo00<000000?ooo`3oool0=03oool200000=P0oooo000?
0?ooo`800000=03oool00`000000oooo0?ooo`3H0?ooo`003`3oool00`000000oooo0?ooo`0a0?oo
o`800000f`3oool000l0oooo00<000000?ooo`3oool0;`3oool200000=d0oooo000?0?ooo`030000
003oool0oooo02h0oooo00<000000?ooo`3oool0g@3oool000L0oooo1@0000030?ooo`030000003o
ool0oooo02`0oooo0P00003P0?ooo`002@3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo02X0oooo0P00003R0?ooo`002@3oool00`000000oooo0?ooo`030?ooo`<00000:03oool20000
0>@0oooo00000`3oool0000000000002000000@0oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`0V0?ooo`800000iP3oool000T0oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`0T0?ooo`800000j03oool000P0oooo0P0000050?ooo`030000003oool0oooo02<0oooo00<0
00000?ooo`3oool0j03oool000l0oooo00<000000?ooo`3oool08@3oool200000>/0oooo000?0?oo
o`8000008@3oool00`000000oooo0?ooo`3[0?ooo`003`3oool00`000000oooo0?ooo`0N0?ooo`80
0000kP3oool000l0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`3^0?ooo`003`3o
ool00`000000oooo0?ooo`0K0?ooo`800000l@3oool000l0oooo00<000000?ooo`3oool06P3oool0
0`000000oooo0?ooo`3a0?ooo`003`3oool00`000000oooo0?ooo`3o0?ooo`l0oooo000?0?ooo`80
0000o`3oool@0?ooo`003`3oool00`000000oooo0?ooo`3o0?ooo`l0oooo000?0?ooo`030000003o
ool0oooo0?l0oooo3`3oool000l0oooo00<000000?ooo`3oool0o`3oool?0?ooo`003`3oool00`00
0000oooo0?ooo`3o0?ooo`l0oooo000?0?ooo`800000=P3oool4000003L0oooo0`00000e0?ooo`<0
0000=`3oool2000002X0oooo000?0?ooo`030000003oool0oooo03D0oooo00<000000?ooo`3oool0
>@3oool00`000000oooo0?ooo`0d0?ooo`040000003oool0oooo000003D0oooo00@000000?ooo`3o
ool00000:@3oool000l0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`0e0?ooo`D0
0000=@3oool010000000oooo0?ooo`00000e0?ooo`040000003oool0oooo000002T0oooo000?0?oo
o`030000003oool0oooo03L0oooo00<000000?ooo`3oool0=03oool010000000oooo0?ooo`00000f
0?ooo`<00000=`3oool2000002X0oooo000?0?ooo`030000003oool0oooo03D0oooo00@000000?oo
o`3oool00000=P3oool00`000000oooo0000000g0?ooo`030000003oool0oooo03D0oooo00@00000
0?ooo`3oool00000:@3oool000l0oooo00<000000?ooo`3oool0=P3oool2000003P0oooo0P00000g
0?ooo`<00000=P3oool2000002X0oooo000?0?ooo`800000o`3oool@0?ooo`003`3oool00`000000
oooo0?ooo`3o0?ooo`l0oooo000?0?ooo`030000003oool0oooo0?l0oooo3`3oool000l0oooo00<0
00000?ooo`3oool0o`3oool?0?ooo`003`3oool00`000000oooo0?ooo`3o0?ooo`l0oooo00080?oo
ool000006@00000000l0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0<0?ooo`03
0000003oool0oooo00/0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0;0?ooo`03
0000003oool0oooo00/0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0;0?ooo`03
0000003oool0oooo00/0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0;0?ooo`03
0000003oool0oooo00`0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0;0?ooo`03
0000003oool0oooo00`0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0;0?ooo`03
0000003oool0oooo00`0oooo00<000000?ooo`3oool02`3oool000l0oooo00<000000?ooo`3oool0
=`3oool00`000000oooo0?ooo`0f0?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool0
=P3oool00`000000oooo0?ooo`0X0?ooo`003`3oool00`000000oooo0?ooo`3o0?ooo`l0oooo000?
0?ooo`030000003oool0oooo0?l0oooo3`3oool00?l0oooo8@3oool00?l0oooo8@3oool00001\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-0.538163, -6.24973, \
0.0347695, 0.0366488}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]]
},
FrontEndVersion->"5.0 for Microsoft Windows",
ScreenRectangle->{{0, 1400}, {0, 967}},
WindowSize->{785, 872},
WindowMargins->{{24, Automatic}, {Automatic, 30}}
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 808, 17, 170, "Input"],
Cell[2587, 72, 55, 1, 29, "Output"],
Cell[2645, 75, 115, 2, 29, "Output"],
Cell[2763, 79, 46, 1, 29, "Output"],
Cell[2812, 82, 46, 1, 29, "Output"],
Cell[2861, 85, 184, 3, 29, "Output"],
Cell[3048, 90, 90, 1, 29, "Output"],
Cell[3141, 93, 184, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[3362, 101, 46, 1, 30, "Input"],
Cell[3411, 104, 67, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[3515, 110, 238, 4, 70, "Input"],
Cell[3756, 116, 331, 7, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[4124, 128, 52, 1, 30, "Input"],
Cell[4179, 131, 1288, 40, 167, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5504, 176, 215, 4, 50, "Input"],
Cell[5722, 182, 143, 2, 29, "Output"],
Cell[5868, 186, 409, 14, 167, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[6314, 205, 263, 6, 90, "Input"],
Cell[6580, 213, 54, 1, 29, "Output"],
Cell[6637, 216, 35, 1, 29, "Output"]
}, Open  ]],
Cell[6687, 220, 26, 0, 30, "Input"],

Cell[CellGroupData[{
Cell[6738, 224, 221, 4, 70, "Input"],
Cell[6962, 230, 49, 1, 29, "Output"],
Cell[7014, 233, 43, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[7094, 239, 61, 1, 30, "Input"],
Cell[7158, 242, 57, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[7252, 248, 276, 5, 110, "Input"],
Cell[7531, 255, 47, 1, 42, "Output"],
Cell[7581, 258, 61, 1, 52, "Output"],
Cell[7645, 261, 84, 1, 56, "Output"],
Cell[7732, 264, 356, 5, 22, "Message"],
Cell[8091, 271, 39, 1, 29, "Output"],
Cell[8133, 274, 355, 5, 37, "Message"],
Cell[8491, 281, 44, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[8572, 287, 59, 1, 30, "Input"],
Cell[8634, 290, 14801, 393, 186, 3547, 250, "GraphicsData", "PostScript", \
"Graphics"],
Cell[23438, 685, 130, 3, 29, "Output"]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

